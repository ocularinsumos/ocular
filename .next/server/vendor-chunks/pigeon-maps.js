"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pigeon-maps";
exports.ids = ["vendor-chunks/pigeon-maps"];
exports.modules = {

/***/ "(ssr)/./node_modules/pigeon-maps/lib/index.esm.js":
/*!***************************************************!*\
  !*** ./node_modules/pigeon-maps/lib/index.esm.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Draggable: () => (/* binding */ Draggable),\n/* harmony export */   GeoJson: () => (/* binding */ GeoJson),\n/* harmony export */   GeoJsonFeature: () => (/* binding */ GeoJsonFeature),\n/* harmony export */   GeoJsonLoader: () => (/* binding */ GeoJsonLoader),\n/* harmony export */   Map: () => (/* binding */ Map),\n/* harmony export */   Marker: () => (/* binding */ Marker),\n/* harmony export */   Overlay: () => (/* binding */ Overlay),\n/* harmony export */   ZoomControl: () => (/* binding */ ZoomControl)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction debounce(func, wait) {\n  var timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var context = this;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      return func.apply(context, args);\n    }, wait);\n  };\n}\nfunction parentHasClass(element, className) {\n  while (element) {\n    if (element.classList && element.classList.contains(className)) {\n      return true;\n    }\n\n    element = element.parentElement;\n  }\n\n  return false;\n}\nfunction parentPosition(element) {\n  var rect = element.getBoundingClientRect();\n  return {\n    x: rect.left,\n    y: rect.top\n  };\n}\n\nfunction osm(x, y, z) {\n  return \"https://tile.openstreetmap.org/\" + z + \"/\" + x + \"/\" + y + \".png\";\n}\n\nvar ANIMATION_TIME = 300;\nvar DIAGONAL_THROW_TIME = 1500;\nvar SCROLL_PIXELS_FOR_ZOOM_LEVEL = 150;\nvar MIN_DRAG_FOR_THROW = 40;\nvar CLICK_TOLERANCE = 2;\nvar DOUBLE_CLICK_DELAY = 300;\nvar DEBOUNCE_DELAY = 60;\nvar PINCH_RELEASE_THROW_DELAY = 300;\nvar WARNING_DISPLAY_TIMEOUT = 300;\n\nvar NOOP = function NOOP() {\n  return true;\n};\n\nvar lng2tile = function lng2tile(lon, zoom) {\n  return (lon + 180) / 360 * Math.pow(2, zoom);\n};\n\nvar lat2tile = function lat2tile(lat, zoom) {\n  return (1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom);\n};\n\nfunction tile2lng(x, z) {\n  return x / Math.pow(2, z) * 360 - 180;\n}\n\nfunction tile2lat(y, z) {\n  var n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n  return 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n}\n\nfunction getMousePixel(dom, event) {\n  var parent = parentPosition(dom);\n  return [event.clientX - parent.x, event.clientY - parent.y];\n}\n\nfunction easeOutQuad(t) {\n  return t * (2 - t);\n}\n\nvar absoluteMinMax = [tile2lat(Math.pow(2, 10), 10), tile2lat(0, 10), tile2lng(0, 10), tile2lng(Math.pow(2, 10), 10)];\nvar hasWindow = typeof window !== 'undefined';\nvar performanceNow = hasWindow && window.performance && window.performance.now ? function () {\n  return window.performance.now();\n} : function () {\n  var timeStart = new Date().getTime();\n  return function () {\n    return new Date().getTime() - timeStart;\n  };\n}();\n\nvar requestAnimationFrame = function requestAnimationFrame(callback) {\n  if (hasWindow) {\n    return (window.requestAnimationFrame || window.setTimeout)(callback);\n  } else {\n    callback(new Date().getTime());\n    return null;\n  }\n};\n\nvar cancelAnimationFrame = function cancelAnimationFrame(animFrame) {\n  return hasWindow && animFrame ? (window.cancelAnimationFrame || window.clearTimeout)(animFrame) : false;\n};\n\nfunction srcSet(dprs, url, x, y, z) {\n  if (!dprs || dprs.length === 0) {\n    return '';\n  }\n\n  return dprs.map(function (dpr) {\n    return url(x, y, z, dpr) + (dpr === 1 ? '' : \" \" + dpr + \"x\");\n  }).join(', ');\n}\n\nvar ImgTile = function ImgTile(_ref) {\n  var tile = _ref.tile,\n      tileLoaded = _ref.tileLoaded;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"img\", {\n    src: tile.url,\n    srcSet: tile.srcSet,\n    width: tile.width,\n    height: tile.height,\n    loading: 'lazy',\n    onLoad: tileLoaded,\n    alt: '',\n    style: {\n      position: 'absolute',\n      left: tile.left,\n      top: tile.top,\n      willChange: 'transform',\n      transformOrigin: 'top left',\n      opacity: 1\n    }\n  });\n};\n\nvar Map = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Map, _Component);\n\n  function Map(props) {\n    var _ref2, _props$defaultZoom, _ref3, _props$defaultCenter, _ref4, _props$width, _ref5, _props$height;\n\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"_containerRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_mousePosition\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_loadTracker\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_dragStart\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_mouseDown\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_moveEvents\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"_lastClick\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_lastTap\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_lastWheel\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_touchStartPixel\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_touchStartMidPoint\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_touchStartDistance\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_secondTouchEnd\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_warningClearTimeout\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_isAnimating\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_animationStart\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_animationEnd\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_zoomStart\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_centerTarget\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_zoomTarget\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_zoomAround\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_animFrame\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_boundsSynced\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_minMaxCache\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_lastZoom\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_lastCenter\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_centerStart\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_resizeObserver\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"updateWidthHeight\", function () {\n      if (_this._containerRef) {\n        var rect = _this._containerRef.getBoundingClientRect();\n\n        if (rect && rect.width > 0 && rect.height > 0) {\n          _this.setState({\n            width: rect.width,\n            height: rect.height\n          });\n\n          return true;\n        }\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"wa\", function () {\n      var _window;\n\n      return (_window = window).addEventListener.apply(_window, arguments);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"wr\", function () {\n      var _window2;\n\n      return (_window2 = window).removeEventListener.apply(_window2, arguments);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"bindMouseEvents\", function () {\n      _this.wa('mousedown', _this.handleMouseDown);\n\n      _this.wa('mouseup', _this.handleMouseUp);\n\n      _this.wa('mousemove', _this.handleMouseMove);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"bindTouchEvents\", function () {\n      _this.wa('touchstart', _this.handleTouchStart, {\n        passive: false\n      });\n\n      _this.wa('touchmove', _this.handleTouchMove, {\n        passive: false\n      });\n\n      _this.wa('touchend', _this.handleTouchEnd, {\n        passive: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unbindMouseEvents\", function () {\n      _this.wr('mousedown', _this.handleMouseDown);\n\n      _this.wr('mouseup', _this.handleMouseUp);\n\n      _this.wr('mousemove', _this.handleMouseMove);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unbindTouchEvents\", function () {\n      _this.wr('touchstart', _this.handleTouchStart);\n\n      _this.wr('touchmove', _this.handleTouchMove);\n\n      _this.wr('touchend', _this.handleTouchEnd);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"bindResizeEvent\", function () {\n      _this.wa('resize', _this.updateWidthHeight);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unbindResizeEvent\", function () {\n      _this.wr('resize', _this.updateWidthHeight);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"bindWheelEvent\", function () {\n      if (_this._containerRef) {\n        _this._containerRef.addEventListener('wheel', _this.handleWheel, {\n          passive: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unbindWheelEvent\", function () {\n      if (_this._containerRef) {\n        _this._containerRef.removeEventListener('wheel', _this.handleWheel);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setCenterZoomTarget\", function (center, zoom, fromProps, zoomAround, animationDuration) {\n      if (fromProps === void 0) {\n        fromProps = false;\n      }\n\n      if (zoomAround === void 0) {\n        zoomAround = null;\n      }\n\n      if (animationDuration === void 0) {\n        animationDuration = ANIMATION_TIME;\n      }\n\n      if (_this.props.animate && (!fromProps || _this.distanceInScreens(center, zoom, _this.state.center, _this.state.zoom) <= _this.props.animateMaxScreens)) {\n        if (_this._isAnimating) {\n          cancelAnimationFrame(_this._animFrame);\n\n          var _this$animationStep = _this.animationStep(performanceNow()),\n              centerStep = _this$animationStep.centerStep,\n              zoomStep = _this$animationStep.zoomStep;\n\n          _this._centerStart = centerStep;\n          _this._zoomStart = zoomStep;\n        } else {\n          _this._isAnimating = true;\n          _this._centerStart = _this.limitCenterAtZoom([_this._lastCenter[0], _this._lastCenter[1]], _this._lastZoom);\n          _this._zoomStart = _this._lastZoom;\n\n          _this.onAnimationStart();\n        }\n\n        _this._animationStart = performanceNow();\n        _this._animationEnd = _this._animationStart + animationDuration;\n\n        if (zoomAround) {\n          _this._zoomAround = zoomAround;\n          _this._centerTarget = _this.calculateZoomCenter(_this._lastCenter, zoomAround, _this._lastZoom, zoom);\n        } else {\n          _this._zoomAround = null;\n          _this._centerTarget = center;\n        }\n\n        _this._zoomTarget = zoom;\n        _this._animFrame = requestAnimationFrame(_this.animate);\n      } else {\n        _this.stopAnimating();\n\n        if (zoomAround) {\n          var _center = _this.calculateZoomCenter(_this._lastCenter, zoomAround, _this._lastZoom, zoom);\n\n          _this.setCenterZoom(_center, zoom, fromProps);\n        } else {\n          _this.setCenterZoom(center || _this.state.center, zoom, fromProps);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setCenterZoomForChildren\", function (center, zoom) {\n      _this.setCenterZoomTarget(center || _this.state.center, zoom || _this.state.zoom, true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"distanceInScreens\", function (centerTarget, zoomTarget, center, zoom) {\n      var _this$state = _this.state,\n          width = _this$state.width,\n          height = _this$state.height;\n\n      var l1 = _this.latLngToPixel(center, center, zoom);\n\n      var l2 = _this.latLngToPixel(centerTarget, center, zoom);\n\n      var z1 = _this.latLngToPixel(center, center, zoomTarget);\n\n      var z2 = _this.latLngToPixel(centerTarget, center, zoomTarget);\n\n      var w = (Math.abs(l1[0] - l2[0]) + Math.abs(z1[0] - z2[0])) / 2 / width;\n      var h = (Math.abs(l1[1] - l2[1]) + Math.abs(z1[1] - z2[1])) / 2 / height;\n      return Math.sqrt(w * w + h * h);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animationStep\", function (timestamp) {\n      if (!_this._animationEnd || !_this._animationStart || !_this._zoomTarget || !_this._zoomStart || !_this._centerStart || !_this._centerTarget) {\n        return {\n          centerStep: _this.state.center,\n          zoomStep: _this.state.zoom\n        };\n      }\n\n      var length = _this._animationEnd - _this._animationStart;\n      var progress = Math.max(timestamp - _this._animationStart, 0);\n      var percentage = easeOutQuad(progress / length);\n      var zoomDiff = (_this._zoomTarget - _this._zoomStart) * percentage;\n      var zoomStep = _this._zoomStart + zoomDiff;\n\n      if (_this._zoomAround) {\n        var centerStep = _this.calculateZoomCenter(_this._centerStart, _this._zoomAround, _this._zoomStart, zoomStep);\n\n        return {\n          centerStep: centerStep,\n          zoomStep: zoomStep\n        };\n      } else {\n        var _centerStep = [_this._centerStart[0] + (_this._centerTarget[0] - _this._centerStart[0]) * percentage, _this._centerStart[1] + (_this._centerTarget[1] - _this._centerStart[1]) * percentage];\n        return {\n          centerStep: _centerStep,\n          zoomStep: zoomStep\n        };\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function (timestamp) {\n      if (!_this._animationEnd || timestamp >= _this._animationEnd) {\n        _this._isAnimating = false;\n\n        _this.setCenterZoom(_this._centerTarget, _this._zoomTarget, true);\n\n        _this.onAnimationStop();\n      } else {\n        var _this$animationStep2 = _this.animationStep(timestamp),\n            centerStep = _this$animationStep2.centerStep,\n            zoomStep = _this$animationStep2.zoomStep;\n\n        _this.setCenterZoom(centerStep, zoomStep);\n\n        _this._animFrame = requestAnimationFrame(_this.animate);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopAnimating\", function () {\n      if (_this._isAnimating) {\n        _this._isAnimating = false;\n\n        _this.onAnimationStop();\n\n        cancelAnimationFrame(_this._animFrame);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"limitCenterAtZoom\", function (center, zoom) {\n      var minMax = _this.getBoundsMinMax(zoom || _this.state.zoom);\n\n      return [Math.max(Math.min(!center || isNaN(center[0]) ? _this.state.center[0] : center[0], minMax[1]), minMax[0]), Math.max(Math.min(!center || isNaN(center[1]) ? _this.state.center[1] : center[1], minMax[3]), minMax[2])];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAnimationStart\", function () {\n      _this.props.onAnimationStart && _this.props.onAnimationStart();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAnimationStop\", function () {\n      _this.props.onAnimationStop && _this.props.onAnimationStop();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setCenterZoom\", function (center, zoom, animationEnded) {\n      if (animationEnded === void 0) {\n        animationEnded = false;\n      }\n\n      var limitedCenter = _this.limitCenterAtZoom(center, zoom);\n\n      if (zoom && Math.round(_this.state.zoom) !== Math.round(zoom)) {\n        var tileValues = _this.tileValues(_this.state);\n\n        var nextValues = _this.tileValues({\n          center: limitedCenter,\n          zoom: zoom,\n          width: _this.state.width,\n          height: _this.state.height\n        });\n\n        var oldTiles = _this.state.oldTiles;\n\n        _this.setState({\n          oldTiles: oldTiles.filter(function (o) {\n            return o.roundedZoom !== tileValues.roundedZoom;\n          }).concat(tileValues)\n        }, NOOP);\n\n        var loadTracker = {};\n\n        for (var x = nextValues.tileMinX; x <= nextValues.tileMaxX; x++) {\n          for (var y = nextValues.tileMinY; y <= nextValues.tileMaxY; y++) {\n            var key = x + \"-\" + y + \"-\" + nextValues.roundedZoom;\n            loadTracker[key] = false;\n          }\n        }\n\n        _this._loadTracker = loadTracker;\n      }\n\n      _this.setState({\n        center: limitedCenter,\n        zoom: zoom || _this.state.zoom\n      }, NOOP);\n\n      var maybeZoom = _this.props.zoom ? _this.props.zoom : _this._lastZoom;\n      var maybeCenter = _this.props.center ? _this.props.center : _this._lastCenter;\n\n      if (zoom && (animationEnded || Math.abs(maybeZoom - zoom) > 0.001 || Math.abs(maybeCenter[0] - limitedCenter[0]) > 0.00001 || Math.abs(maybeCenter[1] - limitedCenter[1]) > 0.00001)) {\n        _this._lastZoom = zoom;\n        _this._lastCenter = [].concat(limitedCenter);\n\n        _this.syncToProps(limitedCenter, zoom);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getBoundsMinMax\", function (zoom) {\n      if (_this.props.limitBounds === 'center') {\n        return absoluteMinMax;\n      }\n\n      var _this$state2 = _this.state,\n          width = _this$state2.width,\n          height = _this$state2.height;\n\n      if (_this._minMaxCache && _this._minMaxCache[0] === zoom && _this._minMaxCache[1] === width && _this._minMaxCache[2] === height) {\n        return _this._minMaxCache[3];\n      }\n\n      var pixelsAtZoom = Math.pow(2, zoom) * 256;\n      var minLng = width > pixelsAtZoom ? 0 : tile2lng(width / 512, zoom);\n      var minLat = height > pixelsAtZoom ? 0 : tile2lat(Math.pow(2, zoom) - height / 512, zoom);\n      var maxLng = width > pixelsAtZoom ? 0 : tile2lng(Math.pow(2, zoom) - width / 512, zoom);\n      var maxLat = height > pixelsAtZoom ? 0 : tile2lat(height / 512, zoom);\n      var minMax = [minLat, maxLat, minLng, maxLng];\n      _this._minMaxCache = [zoom, width, height, minMax];\n      return minMax;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"tileLoaded\", function (key) {\n      if (_this._loadTracker && key in _this._loadTracker) {\n        _this._loadTracker[key] = true;\n        var unloadedCount = Object.values(_this._loadTracker).filter(function (v) {\n          return !v;\n        }).length;\n\n        if (unloadedCount === 0) {\n          _this.setState({\n            oldTiles: []\n          }, NOOP);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTouchStart\", function (event) {\n      if (!_this._containerRef) {\n        return;\n      }\n\n      if (event.target && parentHasClass(event.target, 'pigeon-drag-block')) {\n        return;\n      }\n\n      if (event.touches.length === 1) {\n        var touch = event.touches[0];\n        var pixel = getMousePixel(_this._containerRef, touch);\n\n        if (_this.coordsInside(pixel)) {\n          _this._touchStartPixel = [pixel];\n\n          if (!_this.props.twoFingerDrag) {\n            _this.stopAnimating();\n\n            if (_this._lastTap && performanceNow() - _this._lastTap < DOUBLE_CLICK_DELAY) {\n              event.preventDefault();\n\n              var latLngNow = _this.pixelToLatLng(_this._touchStartPixel[0]);\n\n              _this.setCenterZoomTarget(null, Math.max(_this.props.minZoom, Math.min(_this.state.zoom + 1, _this.props.maxZoom)), false, latLngNow);\n            } else {\n              _this._lastTap = performanceNow();\n\n              _this.trackMoveEvents(pixel);\n            }\n          }\n        }\n      } else if (event.touches.length === 2 && _this._touchStartPixel) {\n        event.preventDefault();\n\n        _this.stopTrackingMoveEvents();\n\n        if (_this.state.pixelDelta || _this.state.zoomDelta) {\n          _this.sendDeltaChange();\n        }\n\n        var t1 = getMousePixel(_this._containerRef, event.touches[0]);\n        var t2 = getMousePixel(_this._containerRef, event.touches[1]);\n        _this._touchStartPixel = [t1, t2];\n        _this._touchStartMidPoint = [(t1[0] + t2[0]) / 2, (t1[1] + t2[1]) / 2];\n        _this._touchStartDistance = Math.sqrt(Math.pow(t1[0] - t2[0], 2) + Math.pow(t1[1] - t2[1], 2));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTouchMove\", function (event) {\n      if (!_this._containerRef) {\n        _this._touchStartPixel = null;\n        return;\n      }\n\n      if (event.touches.length === 1 && _this._touchStartPixel) {\n        var touch = event.touches[0];\n        var pixel = getMousePixel(_this._containerRef, touch);\n\n        if (_this.props.twoFingerDrag) {\n          if (_this.coordsInside(pixel)) {\n            _this.showWarning('fingers');\n          }\n        } else {\n          event.preventDefault();\n\n          _this.trackMoveEvents(pixel);\n\n          _this.setState({\n            pixelDelta: [pixel[0] - _this._touchStartPixel[0][0], pixel[1] - _this._touchStartPixel[0][1]]\n          }, NOOP);\n        }\n      } else if (event.touches.length === 2 && _this._touchStartPixel && _this._touchStartMidPoint && _this._touchStartDistance) {\n        var _this$state3 = _this.state,\n            width = _this$state3.width,\n            height = _this$state3.height,\n            zoom = _this$state3.zoom;\n        event.preventDefault();\n        var t1 = getMousePixel(_this._containerRef, event.touches[0]);\n        var t2 = getMousePixel(_this._containerRef, event.touches[1]);\n        var midPoint = [(t1[0] + t2[0]) / 2, (t1[1] + t2[1]) / 2];\n        var midPointDiff = [midPoint[0] - _this._touchStartMidPoint[0], midPoint[1] - _this._touchStartMidPoint[1]];\n        var distance = Math.sqrt(Math.pow(t1[0] - t2[0], 2) + Math.pow(t1[1] - t2[1], 2));\n        var zoomDelta = Math.max(_this.props.minZoom, Math.min(_this.props.maxZoom, zoom + Math.log2(distance / _this._touchStartDistance))) - zoom;\n        var scale = Math.pow(2, zoomDelta);\n        var centerDiffDiff = [(width / 2 - midPoint[0]) * (scale - 1), (height / 2 - midPoint[1]) * (scale - 1)];\n\n        _this.setState({\n          zoomDelta: zoomDelta,\n          pixelDelta: [centerDiffDiff[0] + midPointDiff[0] * scale, centerDiffDiff[1] + midPointDiff[1] * scale]\n        }, NOOP);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTouchEnd\", function (event) {\n      if (!_this._containerRef) {\n        _this._touchStartPixel = null;\n        return;\n      }\n\n      if (_this._touchStartPixel) {\n        var _this$props = _this.props,\n            zoomSnap = _this$props.zoomSnap,\n            twoFingerDrag = _this$props.twoFingerDrag,\n            minZoom = _this$props.minZoom,\n            maxZoom = _this$props.maxZoom;\n        var zoomDelta = _this.state.zoomDelta;\n\n        var _this$sendDeltaChange = _this.sendDeltaChange(),\n            center = _this$sendDeltaChange.center,\n            zoom = _this$sendDeltaChange.zoom;\n\n        if (event.touches.length === 0) {\n          if (twoFingerDrag) {\n            _this.clearWarning();\n          } else {\n            var oldTouchPixel = _this._touchStartPixel[0];\n            var newTouchPixel = getMousePixel(_this._containerRef, event.changedTouches[0]);\n\n            if (Math.abs(oldTouchPixel[0] - newTouchPixel[0]) > CLICK_TOLERANCE || Math.abs(oldTouchPixel[1] - newTouchPixel[1]) > CLICK_TOLERANCE) {\n              if (!_this._secondTouchEnd || performanceNow() - _this._secondTouchEnd > PINCH_RELEASE_THROW_DELAY) {\n                event.preventDefault();\n\n                _this.throwAfterMoving(newTouchPixel, center, zoom);\n              }\n            }\n\n            _this._touchStartPixel = null;\n            _this._secondTouchEnd = null;\n          }\n        } else if (event.touches.length === 1) {\n          event.preventDefault();\n          var touch = getMousePixel(_this._containerRef, event.touches[0]);\n          _this._secondTouchEnd = performanceNow();\n          _this._touchStartPixel = [touch];\n\n          _this.trackMoveEvents(touch);\n\n          if (zoomSnap) {\n            var latLng = _this._touchStartMidPoint ? _this.pixelToLatLng(_this._touchStartMidPoint) : _this.state.center;\n            var zoomTarget;\n\n            if (twoFingerDrag && Math.round(_this.state.zoom) === Math.round(_this.state.zoom + zoomDelta)) {\n              zoomTarget = Math.round(_this.state.zoom);\n            } else {\n              zoomTarget = zoomDelta > 0 ? Math.ceil(_this.state.zoom) : Math.floor(_this.state.zoom);\n            }\n\n            var _zoom = Math.max(minZoom, Math.min(zoomTarget, maxZoom));\n\n            _this.setCenterZoomTarget(latLng, _zoom, false, latLng);\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseDown\", function (event) {\n      if (!_this._containerRef) {\n        return;\n      }\n\n      var pixel = getMousePixel(_this._containerRef, event);\n\n      if (event.button === 0 && (!event.target || !parentHasClass(event.target, 'pigeon-drag-block')) && _this.coordsInside(pixel)) {\n        _this.stopAnimating();\n\n        event.preventDefault();\n\n        if (_this._lastClick && performanceNow() - _this._lastClick < DOUBLE_CLICK_DELAY) {\n          if (!parentHasClass(event.target, 'pigeon-click-block')) {\n            var latLngNow = _this.pixelToLatLng(_this._mousePosition || pixel);\n\n            _this.setCenterZoomTarget(null, Math.max(_this.props.minZoom, Math.min(_this.state.zoom + 1, _this.props.maxZoom)), false, latLngNow);\n          }\n        } else {\n          _this._lastClick = performanceNow();\n          _this._mouseDown = true;\n          _this._dragStart = pixel;\n\n          _this.trackMoveEvents(pixel);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseMove\", function (event) {\n      if (!_this._containerRef) {\n        return;\n      }\n\n      _this._mousePosition = getMousePixel(_this._containerRef, event);\n\n      if (_this._mouseDown && _this._dragStart) {\n        _this.trackMoveEvents(_this._mousePosition);\n\n        _this.setState({\n          pixelDelta: [_this._mousePosition[0] - _this._dragStart[0], _this._mousePosition[1] - _this._dragStart[1]]\n        }, NOOP);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseUp\", function (event) {\n      if (!_this._containerRef) {\n        _this._mouseDown = false;\n        return;\n      }\n\n      var pixelDelta = _this.state.pixelDelta;\n\n      if (_this._mouseDown) {\n        _this._mouseDown = false;\n        var pixel = getMousePixel(_this._containerRef, event);\n\n        if (_this.props.onClick && (!event.target || !parentHasClass(event.target, 'pigeon-click-block')) && (!pixelDelta || Math.abs(pixelDelta[0]) + Math.abs(pixelDelta[1]) <= CLICK_TOLERANCE)) {\n          var latLng = _this.pixelToLatLng(pixel);\n\n          _this.props.onClick({\n            event: event,\n            latLng: latLng,\n            pixel: pixel\n          });\n\n          _this.setState({\n            pixelDelta: undefined\n          }, NOOP);\n        } else {\n          var _this$sendDeltaChange2 = _this.sendDeltaChange(),\n              center = _this$sendDeltaChange2.center,\n              zoom = _this$sendDeltaChange2.zoom;\n\n          _this.throwAfterMoving(pixel, center, zoom);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopTrackingMoveEvents\", function () {\n      _this._moveEvents = [];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"trackMoveEvents\", function (coords) {\n      var timestamp = performanceNow();\n\n      if (_this._moveEvents.length === 0 || timestamp - _this._moveEvents[_this._moveEvents.length - 1].timestamp > 40) {\n        _this._moveEvents.push({\n          timestamp: timestamp,\n          coords: coords\n        });\n\n        if (_this._moveEvents.length > 2) {\n          _this._moveEvents.shift();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"throwAfterMoving\", function (coords, center, zoom) {\n      var _this$state4 = _this.state,\n          width = _this$state4.width,\n          height = _this$state4.height;\n      var animate = _this.props.animate;\n      var timestamp = performanceNow();\n\n      var lastEvent = _this._moveEvents.shift();\n\n      if (lastEvent && animate) {\n        var deltaMs = Math.max(timestamp - lastEvent.timestamp, 1);\n        var delta = [(coords[0] - lastEvent.coords[0]) / deltaMs * 120, (coords[1] - lastEvent.coords[1]) / deltaMs * 120];\n        var distance = Math.sqrt(delta[0] * delta[0] + delta[1] * delta[1]);\n\n        if (distance > MIN_DRAG_FOR_THROW) {\n          var diagonal = Math.sqrt(width * width + height * height);\n          var throwTime = DIAGONAL_THROW_TIME * distance / diagonal;\n          var lng = tile2lng(lng2tile(center[1], zoom) - delta[0] / 256.0, zoom);\n          var lat = tile2lat(lat2tile(center[0], zoom) - delta[1] / 256.0, zoom);\n\n          _this.setCenterZoomTarget([lat, lng], zoom, false, null, throwTime);\n        }\n      }\n\n      _this.stopTrackingMoveEvents();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sendDeltaChange\", function () {\n      var _this$state5 = _this.state,\n          center = _this$state5.center,\n          zoom = _this$state5.zoom,\n          pixelDelta = _this$state5.pixelDelta,\n          zoomDelta = _this$state5.zoomDelta;\n      var lat = center[0];\n      var lng = center[1];\n\n      if (pixelDelta || zoomDelta !== 0) {\n        lng = tile2lng(lng2tile(center[1], zoom + zoomDelta) - (pixelDelta ? pixelDelta[0] / 256.0 : 0), zoom + zoomDelta);\n        lat = tile2lat(lat2tile(center[0], zoom + zoomDelta) - (pixelDelta ? pixelDelta[1] / 256.0 : 0), zoom + zoomDelta);\n\n        _this.setCenterZoom([lat, lng], zoom + zoomDelta);\n      }\n\n      _this.setState({\n        pixelDelta: undefined,\n        zoomDelta: 0\n      }, NOOP);\n\n      return {\n        center: _this.limitCenterAtZoom([lat, lng], zoom + zoomDelta),\n        zoom: zoom + zoomDelta\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getBounds\", function (center, zoom) {\n      if (center === void 0) {\n        center = _this.state.center;\n      }\n\n      if (zoom === void 0) {\n        zoom = _this.zoomPlusDelta();\n      }\n\n      var _this$state6 = _this.state,\n          width = _this$state6.width,\n          height = _this$state6.height;\n      return {\n        ne: _this.pixelToLatLng([width - 1, 0], center, zoom),\n        sw: _this.pixelToLatLng([0, height - 1], center, zoom)\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"syncToProps\", function (center, zoom) {\n      if (center === void 0) {\n        center = _this.state.center;\n      }\n\n      if (zoom === void 0) {\n        zoom = _this.state.zoom;\n      }\n\n      var onBoundsChanged = _this.props.onBoundsChanged;\n\n      if (onBoundsChanged) {\n        var bounds = _this.getBounds(center, zoom);\n\n        onBoundsChanged({\n          center: center,\n          zoom: zoom,\n          bounds: bounds,\n          initial: !_this._boundsSynced\n        });\n        _this._boundsSynced = true;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleWheel\", function (event) {\n      var _this$props2 = _this.props,\n          mouseEvents = _this$props2.mouseEvents,\n          metaWheelZoom = _this$props2.metaWheelZoom,\n          zoomSnap = _this$props2.zoomSnap,\n          animate = _this$props2.animate;\n\n      if (!mouseEvents) {\n        return;\n      }\n\n      if (!metaWheelZoom || event.metaKey || event.ctrlKey) {\n        event.preventDefault();\n        var addToZoom = -event.deltaY / SCROLL_PIXELS_FOR_ZOOM_LEVEL;\n\n        if (!zoomSnap && _this._zoomTarget) {\n          var stillToAdd = _this._zoomTarget - _this.state.zoom;\n\n          _this.zoomAroundMouse(addToZoom + stillToAdd, event);\n        } else {\n          if (animate) {\n            _this.zoomAroundMouse(addToZoom, event);\n          } else {\n            if (!_this._lastWheel || performanceNow() - _this._lastWheel > ANIMATION_TIME) {\n              _this._lastWheel = performanceNow();\n\n              _this.zoomAroundMouse(addToZoom, event);\n            }\n          }\n        }\n      } else {\n        _this.showWarning('wheel');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showWarning\", function (warningType) {\n      if (!_this.state.showWarning || _this.state.warningType !== warningType) {\n        _this.setState({\n          showWarning: true,\n          warningType: warningType\n        });\n      }\n\n      if (_this._warningClearTimeout) {\n        window.clearTimeout(_this._warningClearTimeout);\n      }\n\n      _this._warningClearTimeout = window.setTimeout(_this.clearWarning, WARNING_DISPLAY_TIMEOUT);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearWarning\", function () {\n      if (_this.state.showWarning) {\n        _this.setState({\n          showWarning: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"zoomAroundMouse\", function (zoomDiff, event) {\n      if (!_this._containerRef) {\n        return;\n      }\n\n      var zoom = _this.state.zoom;\n      var _this$props3 = _this.props,\n          minZoom = _this$props3.minZoom,\n          maxZoom = _this$props3.maxZoom,\n          zoomSnap = _this$props3.zoomSnap;\n      _this._mousePosition = getMousePixel(_this._containerRef, event);\n\n      if (!_this._mousePosition || zoom === minZoom && zoomDiff < 0 || zoom === maxZoom && zoomDiff > 0) {\n        return;\n      }\n\n      var latLngNow = _this.pixelToLatLng(_this._mousePosition);\n\n      var zoomTarget = zoom + zoomDiff;\n\n      if (zoomSnap) {\n        zoomTarget = zoomDiff < 0 ? Math.floor(zoomTarget) : Math.ceil(zoomTarget);\n      }\n\n      zoomTarget = Math.max(minZoom, Math.min(zoomTarget, maxZoom));\n\n      _this.setCenterZoomTarget(null, zoomTarget, false, latLngNow);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"zoomPlusDelta\", function () {\n      return _this.state.zoom + _this.state.zoomDelta;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pixelToLatLng\", function (pixel, center, zoom) {\n      if (center === void 0) {\n        center = _this.state.center;\n      }\n\n      if (zoom === void 0) {\n        zoom = _this.zoomPlusDelta();\n      }\n\n      var _this$state7 = _this.state,\n          width = _this$state7.width,\n          height = _this$state7.height,\n          pixelDelta = _this$state7.pixelDelta;\n      var pointDiff = [(pixel[0] - width / 2 - (pixelDelta ? pixelDelta[0] : 0)) / 256.0, (pixel[1] - height / 2 - (pixelDelta ? pixelDelta[1] : 0)) / 256.0];\n      var tileX = lng2tile(center[1], zoom) + pointDiff[0];\n      var tileY = lat2tile(center[0], zoom) + pointDiff[1];\n      return [Math.max(absoluteMinMax[0], Math.min(absoluteMinMax[1], tile2lat(tileY, zoom))), Math.max(absoluteMinMax[2], Math.min(absoluteMinMax[3], tile2lng(tileX, zoom)))];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"latLngToPixel\", function (latLng, center, zoom) {\n      if (center === void 0) {\n        center = _this.state.center;\n      }\n\n      if (zoom === void 0) {\n        zoom = _this.zoomPlusDelta();\n      }\n\n      var _this$state8 = _this.state,\n          width = _this$state8.width,\n          height = _this$state8.height,\n          pixelDelta = _this$state8.pixelDelta;\n      var tileCenterX = lng2tile(center[1], zoom);\n      var tileCenterY = lat2tile(center[0], zoom);\n      var tileX = lng2tile(latLng[1], zoom);\n      var tileY = lat2tile(latLng[0], zoom);\n      return [(tileX - tileCenterX) * 256.0 + width / 2 + (pixelDelta ? pixelDelta[0] : 0), (tileY - tileCenterY) * 256.0 + height / 2 + (pixelDelta ? pixelDelta[1] : 0)];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"calculateZoomCenter\", function (center, coords, oldZoom, newZoom) {\n      var _this$state9 = _this.state,\n          width = _this$state9.width,\n          height = _this$state9.height;\n\n      var pixelBefore = _this.latLngToPixel(coords, center, oldZoom);\n\n      var pixelAfter = _this.latLngToPixel(coords, center, newZoom);\n\n      var newCenter = _this.pixelToLatLng([width / 2 + pixelAfter[0] - pixelBefore[0], height / 2 + pixelAfter[1] - pixelBefore[1]], center, newZoom);\n\n      return _this.limitCenterAtZoom(newCenter, newZoom);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setRef\", function (dom) {\n      _this._containerRef = dom;\n    });\n\n    _this.syncToProps = debounce(_this.syncToProps, DEBOUNCE_DELAY);\n    _this._lastZoom = (_ref2 = (_props$defaultZoom = props.defaultZoom) !== null && _props$defaultZoom !== void 0 ? _props$defaultZoom : props.zoom) !== null && _ref2 !== void 0 ? _ref2 : 14;\n    _this._lastCenter = (_ref3 = (_props$defaultCenter = props.defaultCenter) !== null && _props$defaultCenter !== void 0 ? _props$defaultCenter : props.center) !== null && _ref3 !== void 0 ? _ref3 : [0, 0];\n    _this.state = {\n      zoom: _this._lastZoom,\n      center: _this._lastCenter,\n      width: (_ref4 = (_props$width = props.width) !== null && _props$width !== void 0 ? _props$width : props.defaultWidth) !== null && _ref4 !== void 0 ? _ref4 : -1,\n      height: (_ref5 = (_props$height = props.height) !== null && _props$height !== void 0 ? _props$height : props.defaultHeight) !== null && _ref5 !== void 0 ? _ref5 : -1,\n      zoomDelta: 0,\n      pixelDelta: undefined,\n      oldTiles: [],\n      showWarning: false,\n      warningType: undefined\n    };\n    return _this;\n  }\n\n  var _proto = Map.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this.props.mouseEvents && this.bindMouseEvents();\n    this.props.touchEvents && this.bindTouchEvents();\n\n    if (!this.props.width || !this.props.height) {\n      if (!this.updateWidthHeight()) {\n        requestAnimationFrame(this.updateWidthHeight);\n      }\n\n      this.bindResizeEvent();\n    }\n\n    this.bindWheelEvent();\n    this.syncToProps();\n\n    if (typeof window.ResizeObserver !== 'undefined') {\n      this._resizeObserver = new window.ResizeObserver(function () {\n        _this2.updateWidthHeight();\n      });\n\n      this._resizeObserver.observe(this._containerRef);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.props.mouseEvents && this.unbindMouseEvents();\n    this.props.touchEvents && this.unbindTouchEvents();\n    this.unbindWheelEvent();\n\n    if (!this.props.width || !this.props.height) {\n      this.unbindResizeEvent();\n    }\n\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _prevProps$center;\n\n    if (this.props.mouseEvents !== prevProps.mouseEvents) {\n      this.props.mouseEvents ? this.bindMouseEvents() : this.unbindMouseEvents();\n    }\n\n    if (this.props.touchEvents !== prevProps.touchEvents) {\n      this.props.touchEvents ? this.bindTouchEvents() : this.unbindTouchEvents();\n    }\n\n    if (this.props.width && this.props.width !== prevProps.width) {\n      this.setState({\n        width: this.props.width\n      });\n    }\n\n    if (this.props.height && this.props.height !== prevProps.height) {\n      this.setState({\n        height: this.props.height\n      });\n    }\n\n    if (!this.props.center && !this.props.zoom) {\n      return;\n    }\n\n    if ((!this.props.center || this.props.center[0] === (prevProps === null || prevProps === void 0 ? void 0 : (_prevProps$center = prevProps.center) === null || _prevProps$center === void 0 ? void 0 : _prevProps$center[0]) && this.props.center[1] === prevProps.center[1]) && this.props.zoom === prevProps.zoom) {\n      return;\n    }\n\n    var currentCenter = this._isAnimating ? this._centerTarget : this.state.center;\n    var currentZoom = this._isAnimating ? this._zoomTarget : this.state.zoom;\n\n    if (currentCenter && currentZoom) {\n      var _this$props$center, _this$props$zoom;\n\n      var nextCenter = (_this$props$center = this.props.center) !== null && _this$props$center !== void 0 ? _this$props$center : currentCenter;\n      var nextZoom = (_this$props$zoom = this.props.zoom) !== null && _this$props$zoom !== void 0 ? _this$props$zoom : currentZoom;\n\n      if (Math.abs(nextZoom - currentZoom) > 0.001 || Math.abs(nextCenter[0] - currentCenter[0]) > 0.0001 || Math.abs(nextCenter[1] - currentCenter[1]) > 0.0001) {\n        this.setCenterZoomTarget(nextCenter, nextZoom, true);\n      }\n    }\n  };\n\n  _proto.coordsInside = function coordsInside(pixel) {\n    var _this$state10 = this.state,\n        width = _this$state10.width,\n        height = _this$state10.height;\n\n    if (pixel[0] < 0 || pixel[1] < 0 || pixel[0] >= width || pixel[1] >= height) {\n      return false;\n    }\n\n    var parent = this._containerRef;\n\n    if (parent) {\n      var pos = parentPosition(parent);\n      var element = document.elementFromPoint(pixel[0] + pos.x, pixel[1] + pos.y);\n      return parent === element || parent.contains(element);\n    } else {\n      return false;\n    }\n  };\n\n  _proto.tileValues = function tileValues(_ref6) {\n    var center = _ref6.center,\n        zoom = _ref6.zoom,\n        pixelDelta = _ref6.pixelDelta,\n        zoomDelta = _ref6.zoomDelta,\n        width = _ref6.width,\n        height = _ref6.height;\n    var roundedZoom = Math.round(zoom + (zoomDelta || 0));\n    var zoomDiff = zoom + (zoomDelta || 0) - roundedZoom;\n    var scale = Math.pow(2, zoomDiff);\n    var scaleWidth = width / scale;\n    var scaleHeight = height / scale;\n    var tileCenterX = lng2tile(center[1], roundedZoom) - (pixelDelta ? pixelDelta[0] / 256.0 / scale : 0);\n    var tileCenterY = lat2tile(center[0], roundedZoom) - (pixelDelta ? pixelDelta[1] / 256.0 / scale : 0);\n    var halfWidth = scaleWidth / 2 / 256.0;\n    var halfHeight = scaleHeight / 2 / 256.0;\n    var tileMinX = Math.floor(tileCenterX - halfWidth);\n    var tileMaxX = Math.floor(tileCenterX + halfWidth);\n    var tileMinY = Math.floor(tileCenterY - halfHeight);\n    var tileMaxY = Math.floor(tileCenterY + halfHeight);\n    return {\n      tileMinX: tileMinX,\n      tileMaxX: tileMaxX,\n      tileMinY: tileMinY,\n      tileMaxY: tileMaxY,\n      tileCenterX: tileCenterX,\n      tileCenterY: tileCenterY,\n      roundedZoom: roundedZoom,\n      zoomDelta: zoomDelta || 0,\n      scaleWidth: scaleWidth,\n      scaleHeight: scaleHeight,\n      scale: scale\n    };\n  };\n\n  _proto.renderTiles = function renderTiles() {\n    var _this3 = this;\n\n    var _this$state11 = this.state,\n        oldTiles = _this$state11.oldTiles,\n        width = _this$state11.width,\n        height = _this$state11.height;\n    var dprs = this.props.dprs;\n    var mapUrl = this.props.provider || osm;\n\n    var _this$tileValues = this.tileValues(this.state),\n        tileMinX = _this$tileValues.tileMinX,\n        tileMaxX = _this$tileValues.tileMaxX,\n        tileMinY = _this$tileValues.tileMinY,\n        tileMaxY = _this$tileValues.tileMaxY,\n        tileCenterX = _this$tileValues.tileCenterX,\n        tileCenterY = _this$tileValues.tileCenterY,\n        roundedZoom = _this$tileValues.roundedZoom,\n        scaleWidth = _this$tileValues.scaleWidth,\n        scaleHeight = _this$tileValues.scaleHeight,\n        scale = _this$tileValues.scale;\n\n    var tiles = [];\n\n    for (var i = 0; i < oldTiles.length; i++) {\n      var old = oldTiles[i];\n      var zoomDiff = old.roundedZoom - roundedZoom;\n\n      if (Math.abs(zoomDiff) > 4 || zoomDiff === 0) {\n        continue;\n      }\n\n      var pow = 1 / Math.pow(2, zoomDiff);\n      var xDiff = -(tileMinX - old.tileMinX * pow) * 256;\n      var yDiff = -(tileMinY - old.tileMinY * pow) * 256;\n\n      var _xMin = Math.max(old.tileMinX, 0);\n\n      var _yMin = Math.max(old.tileMinY, 0);\n\n      var _xMax = Math.min(old.tileMaxX, Math.pow(2, old.roundedZoom) - 1);\n\n      var _yMax = Math.min(old.tileMaxY, Math.pow(2, old.roundedZoom) - 1);\n\n      for (var x = _xMin; x <= _xMax; x++) {\n        for (var y = _yMin; y <= _yMax; y++) {\n          tiles.push({\n            key: x + \"-\" + y + \"-\" + old.roundedZoom,\n            url: mapUrl(x, y, old.roundedZoom),\n            srcSet: srcSet(dprs, mapUrl, x, y, old.roundedZoom),\n            left: xDiff + (x - old.tileMinX) * 256 * pow,\n            top: yDiff + (y - old.tileMinY) * 256 * pow,\n            width: 256 * pow,\n            height: 256 * pow,\n            active: false\n          });\n        }\n      }\n    }\n\n    var xMin = Math.max(tileMinX, 0);\n    var yMin = Math.max(tileMinY, 0);\n    var xMax = Math.min(tileMaxX, Math.pow(2, roundedZoom) - 1);\n    var yMax = Math.min(tileMaxY, Math.pow(2, roundedZoom) - 1);\n\n    for (var _x = xMin; _x <= xMax; _x++) {\n      for (var _y = yMin; _y <= yMax; _y++) {\n        tiles.push({\n          key: _x + \"-\" + _y + \"-\" + roundedZoom,\n          url: mapUrl(_x, _y, roundedZoom),\n          srcSet: srcSet(dprs, mapUrl, _x, _y, roundedZoom),\n          left: (_x - tileMinX) * 256,\n          top: (_y - tileMinY) * 256,\n          width: 256,\n          height: 256,\n          active: true\n        });\n      }\n    }\n\n    var boxStyle = {\n      width: scaleWidth,\n      height: scaleHeight,\n      position: 'absolute',\n      top: \"calc((100% - \" + height + \"px) / 2)\",\n      left: \"calc((100% - \" + width + \"px) / 2)\",\n      overflow: 'hidden',\n      willChange: 'transform',\n      transform: \"scale(\" + scale + \", \" + scale + \")\",\n      transformOrigin: 'top left'\n    };\n    var boxClassname = this.props.boxClassname || 'pigeon-tiles-box';\n    var left = -((tileCenterX - tileMinX) * 256 - scaleWidth / 2);\n    var top = -((tileCenterY - tileMinY) * 256 - scaleHeight / 2);\n    var tilesStyle = {\n      position: 'absolute',\n      width: (tileMaxX - tileMinX + 1) * 256,\n      height: (tileMaxY - tileMinY + 1) * 256,\n      willChange: 'transform',\n      transform: \"translate(\" + left + \"px, \" + top + \"px)\"\n    };\n    var Tile = this.props.tileComponent;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      style: boxStyle,\n      className: boxClassname\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"pigeon-tiles\",\n      style: tilesStyle\n    }, tiles.map(function (tile) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Tile, {\n        key: tile.key,\n        tile: tile,\n        tileLoaded: function tileLoaded() {\n          return _this3.tileLoaded(tile.key);\n        }\n      });\n    })));\n  };\n\n  _proto.renderOverlays = function renderOverlays() {\n    var _this4 = this;\n\n    var _this$state12 = this.state,\n        width = _this$state12.width,\n        height = _this$state12.height,\n        center = _this$state12.center;\n    var mapState = {\n      bounds: this.getBounds(),\n      zoom: this.zoomPlusDelta(),\n      center: center,\n      width: width,\n      height: height\n    };\n    var childrenWithProps = react__WEBPACK_IMPORTED_MODULE_0___default().Children.map(this.props.children, function (child) {\n      if (!child) {\n        return null;\n      }\n\n      if (! /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(child)) {\n        return child;\n      }\n\n      var _child$props = child.props,\n          anchor = _child$props.anchor,\n          position = _child$props.position,\n          offset = _child$props.offset;\n\n      var c = _this4.latLngToPixel(anchor || position || center);\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(child, {\n        left: c[0] - (offset ? offset[0] : 0),\n        top: c[1] - (offset ? offset[1] : 0),\n        latLngToPixel: _this4.latLngToPixel,\n        pixelToLatLng: _this4.pixelToLatLng,\n        setCenterZoom: _this4.setCenterZoomForChildren,\n        mapProps: _this4.props,\n        mapState: mapState\n      });\n    });\n    var childrenStyle = {\n      position: 'absolute',\n      width: width,\n      height: height,\n      top: \"calc((100% - \" + height + \"px) / 2)\",\n      left: \"calc((100% - \" + width + \"px) / 2)\"\n    };\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"pigeon-overlays\",\n      style: childrenStyle\n    }, childrenWithProps);\n  };\n\n  _proto.renderAttribution = function renderAttribution() {\n    var _this$props4 = this.props,\n        attribution = _this$props4.attribution,\n        attributionPrefix = _this$props4.attributionPrefix;\n\n    if (attribution === false) {\n      return null;\n    }\n\n    var style = {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      fontSize: '11px',\n      padding: '2px 5px',\n      background: 'rgba(255, 255, 255, 0.7)',\n      fontFamily: \"'Helvetica Neue', Helvetica, Arial, sans-serif\",\n      color: '#333'\n    };\n    var linkStyle = {\n      color: '#0078A8',\n      textDecoration: 'none'\n    };\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      key: \"attr\",\n      className: \"pigeon-attribution\",\n      style: style\n    }, attributionPrefix === false ? null : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, attributionPrefix || /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n      href: \"https://pigeon-maps.js.org/\",\n      style: linkStyle,\n      target: \"_blank\",\n      rel: \"noreferrer noopener\"\n    }, \"Pigeon\"), ' | '), attribution || /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, ' © ', /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n      href: \"https://www.openstreetmap.org/copyright\",\n      style: linkStyle,\n      target: \"_blank\",\n      rel: \"noreferrer noopener\"\n    }, \"OpenStreetMap\"), ' contributors'));\n  };\n\n  _proto.renderWarning = function renderWarning() {\n    var _this$props5 = this.props,\n        metaWheelZoom = _this$props5.metaWheelZoom,\n        metaWheelZoomWarning = _this$props5.metaWheelZoomWarning,\n        twoFingerDrag = _this$props5.twoFingerDrag,\n        twoFingerDragWarning = _this$props5.twoFingerDragWarning,\n        warningZIndex = _this$props5.warningZIndex;\n    var _this$state13 = this.state,\n        showWarning = _this$state13.showWarning,\n        warningType = _this$state13.warningType,\n        width = _this$state13.width,\n        height = _this$state13.height;\n\n    if (metaWheelZoom && metaWheelZoomWarning || twoFingerDrag && twoFingerDragWarning) {\n      var style = {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: width,\n        height: height,\n        overflow: 'hidden',\n        pointerEvents: 'none',\n        opacity: showWarning ? 100 : 0,\n        transition: 'opacity 300ms',\n        background: 'rgba(0,0,0,0.5)',\n        color: '#fff',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 22,\n        fontFamily: '\"Arial\", sans-serif',\n        textAlign: 'center',\n        zIndex: warningZIndex\n      };\n      var meta = typeof window !== 'undefined' && window.navigator && window.navigator.platform.toUpperCase().indexOf('MAC') >= 0 ? '⌘' : 'ctrl';\n      var warningText = warningType === 'fingers' ? twoFingerDragWarning : metaWheelZoomWarning;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"pigeon-overlay-warning\",\n        style: style\n      }, warningText.replace('META', meta));\n    } else {\n      return null;\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props6 = this.props,\n        touchEvents = _this$props6.touchEvents,\n        twoFingerDrag = _this$props6.twoFingerDrag;\n    var _this$state14 = this.state,\n        width = _this$state14.width,\n        height = _this$state14.height;\n    var containerStyle = {\n      width: this.props.width ? width : '100%',\n      height: this.props.height ? height : '100%',\n      position: 'relative',\n      display: 'inline-block',\n      overflow: 'hidden',\n      background: '#dddddd',\n      touchAction: touchEvents ? twoFingerDrag ? 'pan-x pan-y' : 'none' : 'auto'\n    };\n    var hasSize = !!(width && height);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      style: containerStyle,\n      ref: this.setRef,\n      dir: \"ltr\"\n    }, hasSize && this.renderTiles(), hasSize && this.renderOverlays(), hasSize && this.renderAttribution(), hasSize && this.renderWarning());\n  };\n\n  return Map;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\n_defineProperty(Map, \"defaultProps\", {\n  animate: true,\n  metaWheelZoom: false,\n  metaWheelZoomWarning: 'Use META + wheel to zoom!',\n  twoFingerDrag: false,\n  twoFingerDragWarning: 'Use two fingers to move the map',\n  zoomSnap: true,\n  mouseEvents: true,\n  touchEvents: true,\n  warningZIndex: 100,\n  animateMaxScreens: 5,\n  minZoom: 1,\n  maxZoom: 18,\n  limitBounds: 'center',\n  dprs: [],\n  tileComponent: ImgTile\n});\n\nfunction Marker(props) {\n  var width = typeof props.width !== 'undefined' ? props.width : typeof props.height !== 'undefined' ? props.height * 29 / 34 : 29;\n  var height = typeof props.height !== 'undefined' ? props.height : typeof props.width !== 'undefined' ? props.width * 34 / 29 : 34;\n\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(props.hover || false),\n      internalHover = _useState[0],\n      setInternalHover = _useState[1];\n\n  var hover = typeof props.hover === 'undefined' ? internalHover : props.hover;\n  var color = props.color || '#93C0D0';\n\n  var eventParameters = function eventParameters(event) {\n    return {\n      event: event,\n      anchor: props.anchor,\n      payload: props.payload\n    };\n  };\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    style: _objectSpread2({\n      position: 'absolute',\n      transform: \"translate(\" + (props.left - width / 2) + \"px, \" + (props.top - (height - 1)) + \"px)\",\n      filter: hover ? 'drop-shadow(0 0 4px rgba(0, 0, 0, .3))' : '',\n      pointerEvents: 'none',\n      cursor: 'pointer'\n    }, props.style || {}),\n    className: props.className ? props.className + \" pigeon-click-block\" : 'pigeon-click-block',\n    onClick: props.onClick ? function (event) {\n      return props.onClick(eventParameters(event));\n    } : null,\n    onContextMenu: props.onContextMenu ? function (event) {\n      return props.onContextMenu(eventParameters(event));\n    } : null,\n    onMouseOver: function onMouseOver(event) {\n      props.onMouseOver && props.onMouseOver(eventParameters(event));\n      setInternalHover(true);\n    },\n    onMouseOut: function onMouseOut(event) {\n      props.onMouseOut && props.onMouseOut(eventParameters(event));\n      setInternalHover(false);\n    }\n  }, props.children || /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    width: width,\n    height: height,\n    viewBox: \"0 0 61 71\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n    style: {\n      pointerEvents: 'auto'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n    d: \"M52 31.5C52 36.8395 49.18 42.314 45.0107 47.6094C40.8672 52.872 35.619 57.678 31.1763 61.6922C30.7916 62.0398 30.2084 62.0398 29.8237 61.6922C25.381 57.678 20.1328 52.872 15.9893 47.6094C11.82 42.314 9 36.8395 9 31.5C9 18.5709 18.6801 9 30.5 9C42.3199 9 52 18.5709 52 31.5Z\",\n    fill: color,\n    stroke: \"white\",\n    strokeWidth: \"4\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"30.5\",\n    cy: \"30.5\",\n    r: \"8.5\",\n    fill: \"white\",\n    opacity: hover ? 0.98 : 0.6\n  }))));\n}\n\nfunction Overlay(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    style: _objectSpread2({\n      position: 'absolute',\n      transform: \"translate(\" + props.left + \"px, \" + props.top + \"px)\"\n    }, props.style || {}),\n    className: props.className ? props.className + \" pigeon-click-block\" : 'pigeon-click-block'\n  }, props.children);\n}\n\nvar defaultSvgAttributes = {\n  fill: '#93c0d099',\n  strokeWidth: '2',\n  stroke: 'white',\n  r: '30'\n};\nfunction PointComponent(props) {\n  var _props$svgAttributes;\n\n  var latLngToPixel = props.latLngToPixel;\n  var _props$coordinates = props.coordinates,\n      y = _props$coordinates[0],\n      x = _props$coordinates[1];\n\n  var _latLngToPixel = latLngToPixel([x, y]),\n      cx = _latLngToPixel[0],\n      cy = _latLngToPixel[1];\n\n  if ((_props$svgAttributes = props.svgAttributes) !== null && _props$svgAttributes !== void 0 && _props$svgAttributes.path) {\n    var path = \"M\" + cx + \",\" + cy + \"c\" + props.svgAttributes.path.split(/[c|C|L|l|v|V|h|H]([\\s\\S]*)/)[1];\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", _objectSpread2({\n      d: path\n    }, props.svgAttributes));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", _objectSpread2({\n    cx: cx,\n    cy: cy\n  }, props.svgAttributes));\n}\nfunction MultiPoint(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.coordinates.map(function (point, i) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PointComponent, _objectSpread2(_objectSpread2({}, props), {}, {\n      coordinates: point,\n      key: i\n    }));\n  }));\n}\nfunction LineString(props) {\n  var latLngToPixel = props.latLngToPixel;\n  var p = 'M' + props.coordinates.reduce(function (a, _ref) {\n    var y = _ref[0],\n        x = _ref[1];\n\n    var _latLngToPixel2 = latLngToPixel([x, y]),\n        v = _latLngToPixel2[0],\n        w = _latLngToPixel2[1];\n\n    return a + ' ' + v + ' ' + w;\n  }, '');\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", _objectSpread2({\n    d: p\n  }, props.svgAttributes));\n}\nfunction MultiLineString(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.coordinates.map(function (line, i) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LineString, _objectSpread2(_objectSpread2({}, props), {}, {\n      coordinates: line,\n      key: i\n    }));\n  }));\n}\nfunction Polygon(props) {\n  var latLngToPixel = props.latLngToPixel;\n  var p = props.coordinates.reduce(function (a, part) {\n    return a + ' M' + part.reduce(function (a, _ref2) {\n      var y = _ref2[0],\n          x = _ref2[1];\n\n      var _latLngToPixel3 = latLngToPixel([x, y]),\n          v = _latLngToPixel3[0],\n          w = _latLngToPixel3[1];\n\n      return a + ' ' + v + ' ' + w;\n    }, '') + 'Z';\n  }, '');\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", _objectSpread2({\n    d: p\n  }, props.svgAttributes));\n}\nfunction MultiPolygon(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.coordinates.map(function (polygon, i) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Polygon, _objectSpread2(_objectSpread2({}, props), {}, {\n      coordinates: polygon,\n      key: i\n    }));\n  }));\n}\nfunction GeometryCollection(props) {\n  var renderer = {\n    Point: PointComponent,\n    MultiPoint: MultiPoint,\n    LineString: LineString,\n    MultiLineString: MultiLineString,\n    Polygon: Polygon,\n    MultiPolygon: MultiPolygon\n  };\n  var _props$geometry = props.geometry,\n      type = _props$geometry.type,\n      coordinates = _props$geometry.coordinates,\n      geometries = _props$geometry.geometries;\n\n  if (type === 'GeometryCollection') {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, geometries.map(function (geometry, i) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(GeometryCollection, _objectSpread2(_objectSpread2({\n        key: i\n      }, props), {}, {\n        geometry: geometry\n      }));\n    }));\n  }\n\n  var Component = renderer[type];\n\n  if (Component === undefined) {\n    console.warn(\"The GeoJson Type \" + type + \" is not known\");\n    return null;\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Component, {\n    latLngToPixel: props.latLngToPixel,\n    geometry: props.geometry,\n    coordinates: coordinates,\n    svgAttributes: props.svgAttributes\n  });\n}\nfunction GeoJsonFeature(props) {\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(props.hover || false),\n      internalHover = _useState[0],\n      setInternalHover = _useState[1];\n\n  var hover = props.hover !== undefined ? props.hover : internalHover;\n  var callbackSvgAttributes = props.styleCallback && props.styleCallback(props.feature, hover);\n  var svgAttributes = callbackSvgAttributes ? props.svgAttributes ? _objectSpread2(_objectSpread2({}, props.svgAttributes), callbackSvgAttributes) : callbackSvgAttributes : props.svgAttributes ? props.svgAttributes : defaultSvgAttributes;\n\n  var eventParameters = function eventParameters(event) {\n    return {\n      event: event,\n      anchor: props.anchor,\n      payload: props.feature\n    };\n  };\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n    clipRule: \"evenodd\",\n    style: {\n      pointerEvents: 'auto'\n    },\n    onClick: props.onClick ? function (event) {\n      return props.onClick(eventParameters(event));\n    } : null,\n    onContextMenu: props.onContextMenu ? function (event) {\n      return props.onContextMenu(eventParameters(event));\n    } : null,\n    onMouseOver: function onMouseOver(event) {\n      props.onMouseOver && props.onMouseOver(eventParameters(event));\n      setInternalHover(true);\n    },\n    onMouseOut: function onMouseOut(event) {\n      props.onMouseOut && props.onMouseOut(eventParameters(event));\n      setInternalHover(false);\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(GeometryCollection, _objectSpread2(_objectSpread2(_objectSpread2({}, props), props.feature), {}, {\n    svgAttributes: svgAttributes\n  })));\n}\nfunction GeoJson(props) {\n  var _props$mapState = props.mapState,\n      width = _props$mapState.width,\n      height = _props$mapState.height;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    style: _objectSpread2({\n      position: 'absolute',\n      left: '0',\n      top: '0',\n      pointerEvents: 'none',\n      cursor: 'pointer'\n    }, props.style || {}),\n    className: props.className ? props.className + \" pigeon-click-block\" : 'pigeon-click-block'\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n    width: width,\n    height: height,\n    viewBox: \"0 0 \" + width + \" \" + height,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props.data && props.data.features.map(function (feature, i) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(GeoJsonFeature, _objectSpread2(_objectSpread2({\n      key: i\n    }, props), {}, {\n      feature: feature\n    }));\n  }), react__WEBPACK_IMPORTED_MODULE_0___default().Children.map(props.children, function (child) {\n    if (!child) {\n      return null;\n    }\n\n    if (! /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(child)) {\n      return child;\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(child, props);\n  })));\n}\nfunction GeoJsonLoader(props) {\n  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(props.data ? props.data : null),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    fetch(props.link).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setData(data);\n    });\n  }, [props.link]);\n  return data ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(GeoJson, _objectSpread2({\n    data: data\n  }, props)) : null;\n}\n\nfunction isDescendentOf(element, ancestor) {\n  while (element) {\n    if (element === ancestor) {\n      return true;\n    }\n\n    element = element.parentElement;\n  }\n\n  return false;\n}\n\nvar defaultState = {\n  isDragging: false,\n  startX: undefined,\n  startY: undefined,\n  startLeft: undefined,\n  startTop: undefined,\n  deltaX: 0,\n  deltaY: 0\n};\nfunction Draggable(props) {\n  var dragRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  var propsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(props);\n  var stateRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(_objectSpread2({}, defaultState));\n\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultState),\n      _state = _useState[0],\n      _setState = _useState[1];\n\n  propsRef.current = props;\n\n  var setState = function setState(stateUpdate) {\n    var newState = _objectSpread2(_objectSpread2({}, stateRef.current), stateUpdate);\n\n    stateRef.current = newState;\n\n    _setState(newState);\n  };\n\n  var _props$mapProps = props.mapProps,\n      mouseEvents = _props$mapProps.mouseEvents,\n      touchEvents = _props$mapProps.touchEvents;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    var handleDragStart = function handleDragStart(event) {\n      if (isDescendentOf(event.target, dragRef.current)) {\n        event.preventDefault();\n        setState({\n          isDragging: true,\n          startX: ('touches' in event ? event.touches[0] : event).clientX,\n          startY: ('touches' in event ? event.touches[0] : event).clientY,\n          startLeft: propsRef.current.left,\n          startTop: propsRef.current.top,\n          deltaX: 0,\n          deltaY: 0\n        });\n\n        if (propsRef.current.onDragStart) {\n          var _propsRef$current = propsRef.current,\n              _left = _propsRef$current.left,\n              _top = _propsRef$current.top,\n              offset = _propsRef$current.offset,\n              pixelToLatLng = _propsRef$current.pixelToLatLng;\n          propsRef.current.onDragMove(pixelToLatLng([_left + (offset ? offset[0] : 0), _top + (offset ? offset[1] : 0)]));\n        }\n      }\n    };\n\n    var handleDragMove = function handleDragMove(event) {\n      if (!stateRef.current.isDragging) {\n        return;\n      }\n\n      event.preventDefault();\n      var x = ('touches' in event ? event.touches[0] : event).clientX;\n      var y = ('touches' in event ? event.touches[0] : event).clientY;\n      var deltaX = x - stateRef.current.startX;\n      var deltaY = y - stateRef.current.startY;\n      setState({\n        deltaX: deltaX,\n        deltaY: deltaY\n      });\n\n      if (propsRef.current.onDragMove) {\n        var _propsRef$current2 = propsRef.current,\n            offset = _propsRef$current2.offset,\n            pixelToLatLng = _propsRef$current2.pixelToLatLng;\n        var _stateRef$current = stateRef.current,\n            _startLeft = _stateRef$current.startLeft,\n            _startTop = _stateRef$current.startTop;\n        propsRef.current.onDragMove(pixelToLatLng([_startLeft + deltaX + (offset ? offset[0] : 0), _startTop + deltaY + (offset ? offset[1] : 0)]));\n      }\n    };\n\n    var handleDragEnd = function handleDragEnd(event) {\n      var _propsRef$current$onD, _propsRef$current4;\n\n      if (!stateRef.current.isDragging) {\n        return;\n      }\n\n      event.preventDefault();\n      var _propsRef$current3 = propsRef.current,\n          offset = _propsRef$current3.offset,\n          pixelToLatLng = _propsRef$current3.pixelToLatLng;\n      var _stateRef$current2 = stateRef.current,\n          deltaX = _stateRef$current2.deltaX,\n          deltaY = _stateRef$current2.deltaY,\n          startLeft = _stateRef$current2.startLeft,\n          startTop = _stateRef$current2.startTop;\n      (_propsRef$current$onD = (_propsRef$current4 = propsRef.current).onDragEnd) === null || _propsRef$current$onD === void 0 ? void 0 : _propsRef$current$onD.call(_propsRef$current4, pixelToLatLng([startLeft + deltaX + (offset ? offset[0] : 0), startTop + deltaY + (offset ? offset[1] : 0)]));\n      setState({\n        isDragging: false,\n        startX: undefined,\n        startY: undefined,\n        startLeft: undefined,\n        startTop: undefined,\n        deltaX: 0,\n        deltaY: 0\n      });\n    };\n\n    var wa = function wa(e, t, o) {\n      return window.addEventListener(e, t, o);\n    };\n\n    var wr = function wr(e, t) {\n      return window.removeEventListener(e, t);\n    };\n\n    if (mouseEvents) {\n      wa('mousedown', handleDragStart);\n      wa('mousemove', handleDragMove);\n      wa('mouseup', handleDragEnd);\n    }\n\n    if (touchEvents) {\n      wa('touchstart', handleDragStart, {\n        passive: false\n      });\n      wa('touchmove', handleDragMove, {\n        passive: false\n      });\n      wa('touchend', handleDragEnd, {\n        passive: false\n      });\n    }\n\n    return function () {\n      if (mouseEvents) {\n        wr('mousedown', handleDragStart);\n        wr('mousemove', handleDragMove);\n        wr('mouseup', handleDragEnd);\n      }\n\n      if (touchEvents) {\n        wr('touchstart', handleDragStart);\n        wr('touchmove', handleDragMove);\n        wr('touchend', handleDragEnd);\n      }\n    };\n  }, [mouseEvents, touchEvents]);\n  var left = props.left,\n      top = props.top,\n      className = props.className,\n      style = props.style;\n  var deltaX = _state.deltaX,\n      deltaY = _state.deltaY,\n      startLeft = _state.startLeft,\n      startTop = _state.startTop,\n      isDragging = _state.isDragging;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    style: _objectSpread2(_objectSpread2({\n      cursor: isDragging ? 'grabbing' : 'grab'\n    }, style || {}), {}, {\n      position: 'absolute',\n      transform: \"translate(\" + (isDragging ? startLeft + deltaX : left) + \"px, \" + (isDragging ? startTop + deltaY : top) + \"px)\"\n    }),\n    ref: dragRef,\n    className: \"pigeon-drag-block\" + (className ? \" \" + className : '')\n  }, props.children);\n}\n\nvar commonStyle = {\n  position: 'absolute',\n  top: 10,\n  left: 10\n};\nvar commonButtonStyle = {\n  width: 28,\n  height: 28,\n  borderRadius: 2,\n  boxShadow: '0 1px 4px -1px rgba(0,0,0,.3)',\n  background: 'white',\n  lineHeight: '26px',\n  fontSize: '20px',\n  fontWeight: 700,\n  color: '#666',\n  marginBottom: 1,\n  cursor: 'pointer',\n  border: 'none',\n  display: 'block',\n  outline: 'none'\n};\nfunction ZoomControl(_ref) {\n  var style = _ref.style,\n      buttonStyle = _ref.buttonStyle,\n      setCenterZoom = _ref.setCenterZoom,\n      mapState = _ref.mapState,\n      mapProps = _ref.mapProps;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"pigeon-zoom-buttons pigeon-drag-block\",\n    style: style ? _objectSpread2(_objectSpread2({}, commonStyle), style) : commonStyle\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    className: \"pigeon-zoom-in\",\n    type: \"button\",\n    style: buttonStyle ? _objectSpread2(_objectSpread2({}, commonButtonStyle), buttonStyle) : commonButtonStyle,\n    onClick: function onClick() {\n      return setCenterZoom(mapState.center, Math.min(mapState.zoom + 1, mapProps.maxZoom));\n    }\n  }, \"+\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    className: \"pigeon-zoom-out\",\n    type: \"button\",\n    style: buttonStyle ? _objectSpread2(_objectSpread2({}, commonButtonStyle), buttonStyle) : commonButtonStyle,\n    onClick: function onClick() {\n      return setCenterZoom(mapState.center, Math.max(mapState.zoom - 1, mapProps.minZoom));\n    }\n  }, \"\\u2013\"));\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcGlnZW9uLW1hcHMvbGliL2luZGV4LmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXNFOztBQUV0RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLGFBQWE7QUFDckY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMERBQW1CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVzs7QUFFWDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUzs7QUFFVDs7QUFFQSwwQ0FBMEMsMEJBQTBCO0FBQ3BFLDRDQUE0QywwQkFBMEI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVzs7QUFFWDtBQUNBO0FBQ0EsV0FBVztBQUNYLFVBQVU7QUFDVjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEsMEJBQTBCLFlBQVk7QUFDdEMsNEJBQTRCLFlBQVk7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx3QkFBd0IsWUFBWTtBQUNwQywwQkFBMEIsWUFBWTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwREFBbUI7QUFDM0M7QUFDQTtBQUNBLEtBQUssZUFBZSwwREFBbUI7QUFDdkM7QUFDQTtBQUNBLEtBQUs7QUFDTCwwQkFBMEIsMERBQW1CO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixxREFBYztBQUMxQztBQUNBO0FBQ0E7O0FBRUEseUJBQXlCLDJEQUFvQjtBQUM3QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLDBCQUEwQix5REFBa0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDBEQUFtQjtBQUMzQztBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDBEQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxLQUFLLG9EQUFvRCwwREFBbUIsaURBQWlELDBEQUFtQjtBQUNoSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssaURBQWlELDBEQUFtQixtQ0FBbUMsMERBQW1CO0FBQy9IO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDBEQUFtQjtBQUM3QztBQUNBO0FBQ0EsT0FBTztBQUNQLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwREFBbUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0EsQ0FBQyxDQUFDLDRDQUFTOztBQUVYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLCtDQUFRO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0IsMERBQW1CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssbUJBQW1CO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsaUNBQWlDLDBEQUFtQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxlQUFlLDBEQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQSxHQUFHLGVBQWUsMERBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxnQkFBZ0IsMERBQW1CO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQSxzQkFBc0IsMERBQW1CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLEtBQUssbUJBQW1CO0FBQ3hCO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx3QkFBd0IsMERBQW1CO0FBQzNDO0FBQ0EsS0FBSztBQUNMOztBQUVBLHNCQUFzQiwwREFBbUI7QUFDekM7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0Esc0JBQXNCLDBEQUFtQixDQUFDLHVEQUFjO0FBQ3hELHdCQUF3QiwwREFBbUIsaURBQWlELFlBQVk7QUFDeEc7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSCxzQkFBc0IsMERBQW1CO0FBQ3pDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxzQkFBc0IsMERBQW1CLENBQUMsdURBQWM7QUFDeEQsd0JBQXdCLDBEQUFtQiw2Q0FBNkMsWUFBWTtBQUNwRztBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILHNCQUFzQiwwREFBbUI7QUFDekM7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLHNCQUFzQiwwREFBbUIsQ0FBQyx1REFBYztBQUN4RCx3QkFBd0IsMERBQW1CLDBDQUEwQyxZQUFZO0FBQ2pHO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx3QkFBd0IsMERBQW1CLENBQUMsdURBQWM7QUFDMUQsMEJBQTBCLDBEQUFtQjtBQUM3QztBQUNBLE9BQU8sWUFBWTtBQUNuQjtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCLDBEQUFtQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0Esa0JBQWtCLCtDQUFRO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9HQUFvRzs7QUFFcEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCLDBEQUFtQjtBQUN6QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZUFBZSwwREFBbUIsb0VBQW9FLDRCQUE0QjtBQUNySTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDBEQUFtQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLG1CQUFtQjtBQUN4QjtBQUNBLEdBQUcsZUFBZSwwREFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCx3QkFBd0IsMERBQW1CO0FBQzNDO0FBQ0EsS0FBSyxZQUFZO0FBQ2pCO0FBQ0EsS0FBSztBQUNMLEdBQUcsR0FBRyxxREFBYztBQUNwQjtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLDJEQUFvQjtBQUMzQztBQUNBOztBQUVBLHdCQUF3Qix5REFBa0I7QUFDMUMsR0FBRztBQUNIO0FBQ0E7QUFDQSxtQkFBbUIsK0NBQVE7QUFDM0I7QUFDQTs7QUFFQSxFQUFFLGdEQUFTO0FBQ1g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gsNkJBQTZCLDBEQUFtQjtBQUNoRDtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw2Q0FBTTtBQUN0QixpQkFBaUIsNkNBQU07QUFDdkIsaUJBQWlCLDZDQUFNLGtCQUFrQjs7QUFFekMsa0JBQWtCLCtDQUFRO0FBQzFCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxtREFBbUQ7O0FBRW5EOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRSxnREFBUztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwwREFBbUI7QUFDekM7QUFDQTtBQUNBLEtBQUssYUFBYSxLQUFLO0FBQ3ZCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMERBQW1CO0FBQ3pDO0FBQ0EsbURBQW1EO0FBQ25ELEdBQUcsZUFBZSwwREFBbUI7QUFDckM7QUFDQTtBQUNBLHlEQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxHQUFHLHFCQUFxQiwwREFBbUI7QUFDM0M7QUFDQTtBQUNBLHlEQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRWdHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2Fyby1sYi8uL25vZGVfbW9kdWxlcy9waWdlb24tbWFwcy9saWIvaW5kZXguZXNtLmpzPzEzZmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCwgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuXG4gIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7XG4gICAgZW51bWVyYWJsZU9ubHkgJiYgKHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTtcbiAgICB9KSksIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTtcbiAgfVxuXG4gIHJldHVybiBrZXlzO1xufVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkMih0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTtcbiAgICBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pO1xuICAgIH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG5cbiAgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cblxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG5cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIHNlbGY7XG59XG5cbmZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQpIHtcbiAgdmFyIHRpbWVvdXQ7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHZhciBjb250ZXh0ID0gdGhpcztcbiAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XG4gICAgfSwgd2FpdCk7XG4gIH07XG59XG5mdW5jdGlvbiBwYXJlbnRIYXNDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgd2hpbGUgKGVsZW1lbnQpIHtcbiAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QgJiYgZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50RWxlbWVudDtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIHBhcmVudFBvc2l0aW9uKGVsZW1lbnQpIHtcbiAgdmFyIHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICByZXR1cm4ge1xuICAgIHg6IHJlY3QubGVmdCxcbiAgICB5OiByZWN0LnRvcFxuICB9O1xufVxuXG5mdW5jdGlvbiBvc20oeCwgeSwgeikge1xuICByZXR1cm4gXCJodHRwczovL3RpbGUub3BlbnN0cmVldG1hcC5vcmcvXCIgKyB6ICsgXCIvXCIgKyB4ICsgXCIvXCIgKyB5ICsgXCIucG5nXCI7XG59XG5cbnZhciBBTklNQVRJT05fVElNRSA9IDMwMDtcbnZhciBESUFHT05BTF9USFJPV19USU1FID0gMTUwMDtcbnZhciBTQ1JPTExfUElYRUxTX0ZPUl9aT09NX0xFVkVMID0gMTUwO1xudmFyIE1JTl9EUkFHX0ZPUl9USFJPVyA9IDQwO1xudmFyIENMSUNLX1RPTEVSQU5DRSA9IDI7XG52YXIgRE9VQkxFX0NMSUNLX0RFTEFZID0gMzAwO1xudmFyIERFQk9VTkNFX0RFTEFZID0gNjA7XG52YXIgUElOQ0hfUkVMRUFTRV9USFJPV19ERUxBWSA9IDMwMDtcbnZhciBXQVJOSU5HX0RJU1BMQVlfVElNRU9VVCA9IDMwMDtcblxudmFyIE5PT1AgPSBmdW5jdGlvbiBOT09QKCkge1xuICByZXR1cm4gdHJ1ZTtcbn07XG5cbnZhciBsbmcydGlsZSA9IGZ1bmN0aW9uIGxuZzJ0aWxlKGxvbiwgem9vbSkge1xuICByZXR1cm4gKGxvbiArIDE4MCkgLyAzNjAgKiBNYXRoLnBvdygyLCB6b29tKTtcbn07XG5cbnZhciBsYXQydGlsZSA9IGZ1bmN0aW9uIGxhdDJ0aWxlKGxhdCwgem9vbSkge1xuICByZXR1cm4gKDEgLSBNYXRoLmxvZyhNYXRoLnRhbihsYXQgKiBNYXRoLlBJIC8gMTgwKSArIDEgLyBNYXRoLmNvcyhsYXQgKiBNYXRoLlBJIC8gMTgwKSkgLyBNYXRoLlBJKSAvIDIgKiBNYXRoLnBvdygyLCB6b29tKTtcbn07XG5cbmZ1bmN0aW9uIHRpbGUybG5nKHgsIHopIHtcbiAgcmV0dXJuIHggLyBNYXRoLnBvdygyLCB6KSAqIDM2MCAtIDE4MDtcbn1cblxuZnVuY3Rpb24gdGlsZTJsYXQoeSwgeikge1xuICB2YXIgbiA9IE1hdGguUEkgLSAyICogTWF0aC5QSSAqIHkgLyBNYXRoLnBvdygyLCB6KTtcbiAgcmV0dXJuIDE4MCAvIE1hdGguUEkgKiBNYXRoLmF0YW4oMC41ICogKE1hdGguZXhwKG4pIC0gTWF0aC5leHAoLW4pKSk7XG59XG5cbmZ1bmN0aW9uIGdldE1vdXNlUGl4ZWwoZG9tLCBldmVudCkge1xuICB2YXIgcGFyZW50ID0gcGFyZW50UG9zaXRpb24oZG9tKTtcbiAgcmV0dXJuIFtldmVudC5jbGllbnRYIC0gcGFyZW50LngsIGV2ZW50LmNsaWVudFkgLSBwYXJlbnQueV07XG59XG5cbmZ1bmN0aW9uIGVhc2VPdXRRdWFkKHQpIHtcbiAgcmV0dXJuIHQgKiAoMiAtIHQpO1xufVxuXG52YXIgYWJzb2x1dGVNaW5NYXggPSBbdGlsZTJsYXQoTWF0aC5wb3coMiwgMTApLCAxMCksIHRpbGUybGF0KDAsIDEwKSwgdGlsZTJsbmcoMCwgMTApLCB0aWxlMmxuZyhNYXRoLnBvdygyLCAxMCksIDEwKV07XG52YXIgaGFzV2luZG93ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7XG52YXIgcGVyZm9ybWFuY2VOb3cgPSBoYXNXaW5kb3cgJiYgd2luZG93LnBlcmZvcm1hbmNlICYmIHdpbmRvdy5wZXJmb3JtYW5jZS5ub3cgPyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB3aW5kb3cucGVyZm9ybWFuY2Uubm93KCk7XG59IDogZnVuY3Rpb24gKCkge1xuICB2YXIgdGltZVN0YXJ0ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gdGltZVN0YXJ0O1xuICB9O1xufSgpO1xuXG52YXIgcmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gZnVuY3Rpb24gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGNhbGxiYWNrKSB7XG4gIGlmIChoYXNXaW5kb3cpIHtcbiAgICByZXR1cm4gKHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwgd2luZG93LnNldFRpbWVvdXQpKGNhbGxiYWNrKTtcbiAgfSBlbHNlIHtcbiAgICBjYWxsYmFjayhuZXcgRGF0ZSgpLmdldFRpbWUoKSk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn07XG5cbnZhciBjYW5jZWxBbmltYXRpb25GcmFtZSA9IGZ1bmN0aW9uIGNhbmNlbEFuaW1hdGlvbkZyYW1lKGFuaW1GcmFtZSkge1xuICByZXR1cm4gaGFzV2luZG93ICYmIGFuaW1GcmFtZSA/ICh3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUgfHwgd2luZG93LmNsZWFyVGltZW91dCkoYW5pbUZyYW1lKSA6IGZhbHNlO1xufTtcblxuZnVuY3Rpb24gc3JjU2V0KGRwcnMsIHVybCwgeCwgeSwgeikge1xuICBpZiAoIWRwcnMgfHwgZHBycy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICByZXR1cm4gZHBycy5tYXAoZnVuY3Rpb24gKGRwcikge1xuICAgIHJldHVybiB1cmwoeCwgeSwgeiwgZHByKSArIChkcHIgPT09IDEgPyAnJyA6IFwiIFwiICsgZHByICsgXCJ4XCIpO1xuICB9KS5qb2luKCcsICcpO1xufVxuXG52YXIgSW1nVGlsZSA9IGZ1bmN0aW9uIEltZ1RpbGUoX3JlZikge1xuICB2YXIgdGlsZSA9IF9yZWYudGlsZSxcbiAgICAgIHRpbGVMb2FkZWQgPSBfcmVmLnRpbGVMb2FkZWQ7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImltZ1wiLCB7XG4gICAgc3JjOiB0aWxlLnVybCxcbiAgICBzcmNTZXQ6IHRpbGUuc3JjU2V0LFxuICAgIHdpZHRoOiB0aWxlLndpZHRoLFxuICAgIGhlaWdodDogdGlsZS5oZWlnaHQsXG4gICAgbG9hZGluZzogJ2xhenknLFxuICAgIG9uTG9hZDogdGlsZUxvYWRlZCxcbiAgICBhbHQ6ICcnLFxuICAgIHN0eWxlOiB7XG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIGxlZnQ6IHRpbGUubGVmdCxcbiAgICAgIHRvcDogdGlsZS50b3AsXG4gICAgICB3aWxsQ2hhbmdlOiAndHJhbnNmb3JtJyxcbiAgICAgIHRyYW5zZm9ybU9yaWdpbjogJ3RvcCBsZWZ0JyxcbiAgICAgIG9wYWNpdHk6IDFcbiAgICB9XG4gIH0pO1xufTtcblxudmFyIE1hcCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShNYXAsIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1hcChwcm9wcykge1xuICAgIHZhciBfcmVmMiwgX3Byb3BzJGRlZmF1bHRab29tLCBfcmVmMywgX3Byb3BzJGRlZmF1bHRDZW50ZXIsIF9yZWY0LCBfcHJvcHMkd2lkdGgsIF9yZWY1LCBfcHJvcHMkaGVpZ2h0O1xuXG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiX2NvbnRhaW5lclJlZlwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIl9tb3VzZVBvc2l0aW9uXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiX2xvYWRUcmFja2VyXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiX2RyYWdTdGFydFwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfbW91c2VEb3duXCIsIGZhbHNlKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfbW92ZUV2ZW50c1wiLCBbXSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiX2xhc3RDbGlja1wiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfbGFzdFRhcFwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfbGFzdFdoZWVsXCIsIG51bGwpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIl90b3VjaFN0YXJ0UGl4ZWxcIiwgbnVsbCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiX3RvdWNoU3RhcnRNaWRQb2ludFwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfdG91Y2hTdGFydERpc3RhbmNlXCIsIG51bGwpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIl9zZWNvbmRUb3VjaEVuZFwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfd2FybmluZ0NsZWFyVGltZW91dFwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfaXNBbmltYXRpbmdcIiwgZmFsc2UpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIl9hbmltYXRpb25TdGFydFwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfYW5pbWF0aW9uRW5kXCIsIG51bGwpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIl96b29tU3RhcnRcIiwgbnVsbCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiX2NlbnRlclRhcmdldFwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfem9vbVRhcmdldFwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfem9vbUFyb3VuZFwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfYW5pbUZyYW1lXCIsIG51bGwpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIl9ib3VuZHNTeW5jZWRcIiwgZmFsc2UpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIl9taW5NYXhDYWNoZVwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfbGFzdFpvb21cIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfbGFzdENlbnRlclwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIl9jZW50ZXJTdGFydFwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIl9yZXNpemVPYnNlcnZlclwiLCBudWxsKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJ1cGRhdGVXaWR0aEhlaWdodFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoX3RoaXMuX2NvbnRhaW5lclJlZikge1xuICAgICAgICB2YXIgcmVjdCA9IF90aGlzLl9jb250YWluZXJSZWYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICAgICAgaWYgKHJlY3QgJiYgcmVjdC53aWR0aCA+IDAgJiYgcmVjdC5oZWlnaHQgPiAwKSB7XG4gICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgd2lkdGg6IHJlY3Qud2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwid2FcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF93aW5kb3c7XG5cbiAgICAgIHJldHVybiAoX3dpbmRvdyA9IHdpbmRvdykuYWRkRXZlbnRMaXN0ZW5lci5hcHBseShfd2luZG93LCBhcmd1bWVudHMpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIndyXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBfd2luZG93MjtcblxuICAgICAgcmV0dXJuIChfd2luZG93MiA9IHdpbmRvdykucmVtb3ZlRXZlbnRMaXN0ZW5lci5hcHBseShfd2luZG93MiwgYXJndW1lbnRzKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJiaW5kTW91c2VFdmVudHNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMud2EoJ21vdXNlZG93bicsIF90aGlzLmhhbmRsZU1vdXNlRG93bik7XG5cbiAgICAgIF90aGlzLndhKCdtb3VzZXVwJywgX3RoaXMuaGFuZGxlTW91c2VVcCk7XG5cbiAgICAgIF90aGlzLndhKCdtb3VzZW1vdmUnLCBfdGhpcy5oYW5kbGVNb3VzZU1vdmUpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImJpbmRUb3VjaEV2ZW50c1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpcy53YSgndG91Y2hzdGFydCcsIF90aGlzLmhhbmRsZVRvdWNoU3RhcnQsIHtcbiAgICAgICAgcGFzc2l2ZTogZmFsc2VcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy53YSgndG91Y2htb3ZlJywgX3RoaXMuaGFuZGxlVG91Y2hNb3ZlLCB7XG4gICAgICAgIHBhc3NpdmU6IGZhbHNlXG4gICAgICB9KTtcblxuICAgICAgX3RoaXMud2EoJ3RvdWNoZW5kJywgX3RoaXMuaGFuZGxlVG91Y2hFbmQsIHtcbiAgICAgICAgcGFzc2l2ZTogZmFsc2VcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInVuYmluZE1vdXNlRXZlbnRzXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLndyKCdtb3VzZWRvd24nLCBfdGhpcy5oYW5kbGVNb3VzZURvd24pO1xuXG4gICAgICBfdGhpcy53cignbW91c2V1cCcsIF90aGlzLmhhbmRsZU1vdXNlVXApO1xuXG4gICAgICBfdGhpcy53cignbW91c2Vtb3ZlJywgX3RoaXMuaGFuZGxlTW91c2VNb3ZlKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJ1bmJpbmRUb3VjaEV2ZW50c1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpcy53cigndG91Y2hzdGFydCcsIF90aGlzLmhhbmRsZVRvdWNoU3RhcnQpO1xuXG4gICAgICBfdGhpcy53cigndG91Y2htb3ZlJywgX3RoaXMuaGFuZGxlVG91Y2hNb3ZlKTtcblxuICAgICAgX3RoaXMud3IoJ3RvdWNoZW5kJywgX3RoaXMuaGFuZGxlVG91Y2hFbmQpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImJpbmRSZXNpemVFdmVudFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpcy53YSgncmVzaXplJywgX3RoaXMudXBkYXRlV2lkdGhIZWlnaHQpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInVuYmluZFJlc2l6ZUV2ZW50XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLndyKCdyZXNpemUnLCBfdGhpcy51cGRhdGVXaWR0aEhlaWdodCk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiYmluZFdoZWVsRXZlbnRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKF90aGlzLl9jb250YWluZXJSZWYpIHtcbiAgICAgICAgX3RoaXMuX2NvbnRhaW5lclJlZi5hZGRFdmVudExpc3RlbmVyKCd3aGVlbCcsIF90aGlzLmhhbmRsZVdoZWVsLCB7XG4gICAgICAgICAgcGFzc2l2ZTogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwidW5iaW5kV2hlZWxFdmVudFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoX3RoaXMuX2NvbnRhaW5lclJlZikge1xuICAgICAgICBfdGhpcy5fY29udGFpbmVyUmVmLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3doZWVsJywgX3RoaXMuaGFuZGxlV2hlZWwpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInNldENlbnRlclpvb21UYXJnZXRcIiwgZnVuY3Rpb24gKGNlbnRlciwgem9vbSwgZnJvbVByb3BzLCB6b29tQXJvdW5kLCBhbmltYXRpb25EdXJhdGlvbikge1xuICAgICAgaWYgKGZyb21Qcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgICAgIGZyb21Qcm9wcyA9IGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpZiAoem9vbUFyb3VuZCA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHpvb21Bcm91bmQgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAoYW5pbWF0aW9uRHVyYXRpb24gPT09IHZvaWQgMCkge1xuICAgICAgICBhbmltYXRpb25EdXJhdGlvbiA9IEFOSU1BVElPTl9USU1FO1xuICAgICAgfVxuXG4gICAgICBpZiAoX3RoaXMucHJvcHMuYW5pbWF0ZSAmJiAoIWZyb21Qcm9wcyB8fCBfdGhpcy5kaXN0YW5jZUluU2NyZWVucyhjZW50ZXIsIHpvb20sIF90aGlzLnN0YXRlLmNlbnRlciwgX3RoaXMuc3RhdGUuem9vbSkgPD0gX3RoaXMucHJvcHMuYW5pbWF0ZU1heFNjcmVlbnMpKSB7XG4gICAgICAgIGlmIChfdGhpcy5faXNBbmltYXRpbmcpIHtcbiAgICAgICAgICBjYW5jZWxBbmltYXRpb25GcmFtZShfdGhpcy5fYW5pbUZyYW1lKTtcblxuICAgICAgICAgIHZhciBfdGhpcyRhbmltYXRpb25TdGVwID0gX3RoaXMuYW5pbWF0aW9uU3RlcChwZXJmb3JtYW5jZU5vdygpKSxcbiAgICAgICAgICAgICAgY2VudGVyU3RlcCA9IF90aGlzJGFuaW1hdGlvblN0ZXAuY2VudGVyU3RlcCxcbiAgICAgICAgICAgICAgem9vbVN0ZXAgPSBfdGhpcyRhbmltYXRpb25TdGVwLnpvb21TdGVwO1xuXG4gICAgICAgICAgX3RoaXMuX2NlbnRlclN0YXJ0ID0gY2VudGVyU3RlcDtcbiAgICAgICAgICBfdGhpcy5fem9vbVN0YXJ0ID0gem9vbVN0ZXA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMuX2lzQW5pbWF0aW5nID0gdHJ1ZTtcbiAgICAgICAgICBfdGhpcy5fY2VudGVyU3RhcnQgPSBfdGhpcy5saW1pdENlbnRlckF0Wm9vbShbX3RoaXMuX2xhc3RDZW50ZXJbMF0sIF90aGlzLl9sYXN0Q2VudGVyWzFdXSwgX3RoaXMuX2xhc3Rab29tKTtcbiAgICAgICAgICBfdGhpcy5fem9vbVN0YXJ0ID0gX3RoaXMuX2xhc3Rab29tO1xuXG4gICAgICAgICAgX3RoaXMub25BbmltYXRpb25TdGFydCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXMuX2FuaW1hdGlvblN0YXJ0ID0gcGVyZm9ybWFuY2VOb3coKTtcbiAgICAgICAgX3RoaXMuX2FuaW1hdGlvbkVuZCA9IF90aGlzLl9hbmltYXRpb25TdGFydCArIGFuaW1hdGlvbkR1cmF0aW9uO1xuXG4gICAgICAgIGlmICh6b29tQXJvdW5kKSB7XG4gICAgICAgICAgX3RoaXMuX3pvb21Bcm91bmQgPSB6b29tQXJvdW5kO1xuICAgICAgICAgIF90aGlzLl9jZW50ZXJUYXJnZXQgPSBfdGhpcy5jYWxjdWxhdGVab29tQ2VudGVyKF90aGlzLl9sYXN0Q2VudGVyLCB6b29tQXJvdW5kLCBfdGhpcy5fbGFzdFpvb20sIHpvb20pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzLl96b29tQXJvdW5kID0gbnVsbDtcbiAgICAgICAgICBfdGhpcy5fY2VudGVyVGFyZ2V0ID0gY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXMuX3pvb21UYXJnZXQgPSB6b29tO1xuICAgICAgICBfdGhpcy5fYW5pbUZyYW1lID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKF90aGlzLmFuaW1hdGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMuc3RvcEFuaW1hdGluZygpO1xuXG4gICAgICAgIGlmICh6b29tQXJvdW5kKSB7XG4gICAgICAgICAgdmFyIF9jZW50ZXIgPSBfdGhpcy5jYWxjdWxhdGVab29tQ2VudGVyKF90aGlzLl9sYXN0Q2VudGVyLCB6b29tQXJvdW5kLCBfdGhpcy5fbGFzdFpvb20sIHpvb20pO1xuXG4gICAgICAgICAgX3RoaXMuc2V0Q2VudGVyWm9vbShfY2VudGVyLCB6b29tLCBmcm9tUHJvcHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzLnNldENlbnRlclpvb20oY2VudGVyIHx8IF90aGlzLnN0YXRlLmNlbnRlciwgem9vbSwgZnJvbVByb3BzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInNldENlbnRlclpvb21Gb3JDaGlsZHJlblwiLCBmdW5jdGlvbiAoY2VudGVyLCB6b29tKSB7XG4gICAgICBfdGhpcy5zZXRDZW50ZXJab29tVGFyZ2V0KGNlbnRlciB8fCBfdGhpcy5zdGF0ZS5jZW50ZXIsIHpvb20gfHwgX3RoaXMuc3RhdGUuem9vbSwgdHJ1ZSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiZGlzdGFuY2VJblNjcmVlbnNcIiwgZnVuY3Rpb24gKGNlbnRlclRhcmdldCwgem9vbVRhcmdldCwgY2VudGVyLCB6b29tKSB7XG4gICAgICB2YXIgX3RoaXMkc3RhdGUgPSBfdGhpcy5zdGF0ZSxcbiAgICAgICAgICB3aWR0aCA9IF90aGlzJHN0YXRlLndpZHRoLFxuICAgICAgICAgIGhlaWdodCA9IF90aGlzJHN0YXRlLmhlaWdodDtcblxuICAgICAgdmFyIGwxID0gX3RoaXMubGF0TG5nVG9QaXhlbChjZW50ZXIsIGNlbnRlciwgem9vbSk7XG5cbiAgICAgIHZhciBsMiA9IF90aGlzLmxhdExuZ1RvUGl4ZWwoY2VudGVyVGFyZ2V0LCBjZW50ZXIsIHpvb20pO1xuXG4gICAgICB2YXIgejEgPSBfdGhpcy5sYXRMbmdUb1BpeGVsKGNlbnRlciwgY2VudGVyLCB6b29tVGFyZ2V0KTtcblxuICAgICAgdmFyIHoyID0gX3RoaXMubGF0TG5nVG9QaXhlbChjZW50ZXJUYXJnZXQsIGNlbnRlciwgem9vbVRhcmdldCk7XG5cbiAgICAgIHZhciB3ID0gKE1hdGguYWJzKGwxWzBdIC0gbDJbMF0pICsgTWF0aC5hYnMoejFbMF0gLSB6MlswXSkpIC8gMiAvIHdpZHRoO1xuICAgICAgdmFyIGggPSAoTWF0aC5hYnMobDFbMV0gLSBsMlsxXSkgKyBNYXRoLmFicyh6MVsxXSAtIHoyWzFdKSkgLyAyIC8gaGVpZ2h0O1xuICAgICAgcmV0dXJuIE1hdGguc3FydCh3ICogdyArIGggKiBoKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJhbmltYXRpb25TdGVwXCIsIGZ1bmN0aW9uICh0aW1lc3RhbXApIHtcbiAgICAgIGlmICghX3RoaXMuX2FuaW1hdGlvbkVuZCB8fCAhX3RoaXMuX2FuaW1hdGlvblN0YXJ0IHx8ICFfdGhpcy5fem9vbVRhcmdldCB8fCAhX3RoaXMuX3pvb21TdGFydCB8fCAhX3RoaXMuX2NlbnRlclN0YXJ0IHx8ICFfdGhpcy5fY2VudGVyVGFyZ2V0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgY2VudGVyU3RlcDogX3RoaXMuc3RhdGUuY2VudGVyLFxuICAgICAgICAgIHpvb21TdGVwOiBfdGhpcy5zdGF0ZS56b29tXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHZhciBsZW5ndGggPSBfdGhpcy5fYW5pbWF0aW9uRW5kIC0gX3RoaXMuX2FuaW1hdGlvblN0YXJ0O1xuICAgICAgdmFyIHByb2dyZXNzID0gTWF0aC5tYXgodGltZXN0YW1wIC0gX3RoaXMuX2FuaW1hdGlvblN0YXJ0LCAwKTtcbiAgICAgIHZhciBwZXJjZW50YWdlID0gZWFzZU91dFF1YWQocHJvZ3Jlc3MgLyBsZW5ndGgpO1xuICAgICAgdmFyIHpvb21EaWZmID0gKF90aGlzLl96b29tVGFyZ2V0IC0gX3RoaXMuX3pvb21TdGFydCkgKiBwZXJjZW50YWdlO1xuICAgICAgdmFyIHpvb21TdGVwID0gX3RoaXMuX3pvb21TdGFydCArIHpvb21EaWZmO1xuXG4gICAgICBpZiAoX3RoaXMuX3pvb21Bcm91bmQpIHtcbiAgICAgICAgdmFyIGNlbnRlclN0ZXAgPSBfdGhpcy5jYWxjdWxhdGVab29tQ2VudGVyKF90aGlzLl9jZW50ZXJTdGFydCwgX3RoaXMuX3pvb21Bcm91bmQsIF90aGlzLl96b29tU3RhcnQsIHpvb21TdGVwKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGNlbnRlclN0ZXA6IGNlbnRlclN0ZXAsXG4gICAgICAgICAgem9vbVN0ZXA6IHpvb21TdGVwXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX2NlbnRlclN0ZXAgPSBbX3RoaXMuX2NlbnRlclN0YXJ0WzBdICsgKF90aGlzLl9jZW50ZXJUYXJnZXRbMF0gLSBfdGhpcy5fY2VudGVyU3RhcnRbMF0pICogcGVyY2VudGFnZSwgX3RoaXMuX2NlbnRlclN0YXJ0WzFdICsgKF90aGlzLl9jZW50ZXJUYXJnZXRbMV0gLSBfdGhpcy5fY2VudGVyU3RhcnRbMV0pICogcGVyY2VudGFnZV07XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgY2VudGVyU3RlcDogX2NlbnRlclN0ZXAsXG4gICAgICAgICAgem9vbVN0ZXA6IHpvb21TdGVwXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiYW5pbWF0ZVwiLCBmdW5jdGlvbiAodGltZXN0YW1wKSB7XG4gICAgICBpZiAoIV90aGlzLl9hbmltYXRpb25FbmQgfHwgdGltZXN0YW1wID49IF90aGlzLl9hbmltYXRpb25FbmQpIHtcbiAgICAgICAgX3RoaXMuX2lzQW5pbWF0aW5nID0gZmFsc2U7XG5cbiAgICAgICAgX3RoaXMuc2V0Q2VudGVyWm9vbShfdGhpcy5fY2VudGVyVGFyZ2V0LCBfdGhpcy5fem9vbVRhcmdldCwgdHJ1ZSk7XG5cbiAgICAgICAgX3RoaXMub25BbmltYXRpb25TdG9wKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX3RoaXMkYW5pbWF0aW9uU3RlcDIgPSBfdGhpcy5hbmltYXRpb25TdGVwKHRpbWVzdGFtcCksXG4gICAgICAgICAgICBjZW50ZXJTdGVwID0gX3RoaXMkYW5pbWF0aW9uU3RlcDIuY2VudGVyU3RlcCxcbiAgICAgICAgICAgIHpvb21TdGVwID0gX3RoaXMkYW5pbWF0aW9uU3RlcDIuem9vbVN0ZXA7XG5cbiAgICAgICAgX3RoaXMuc2V0Q2VudGVyWm9vbShjZW50ZXJTdGVwLCB6b29tU3RlcCk7XG5cbiAgICAgICAgX3RoaXMuX2FuaW1GcmFtZSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShfdGhpcy5hbmltYXRlKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJzdG9wQW5pbWF0aW5nXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChfdGhpcy5faXNBbmltYXRpbmcpIHtcbiAgICAgICAgX3RoaXMuX2lzQW5pbWF0aW5nID0gZmFsc2U7XG5cbiAgICAgICAgX3RoaXMub25BbmltYXRpb25TdG9wKCk7XG5cbiAgICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoX3RoaXMuX2FuaW1GcmFtZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwibGltaXRDZW50ZXJBdFpvb21cIiwgZnVuY3Rpb24gKGNlbnRlciwgem9vbSkge1xuICAgICAgdmFyIG1pbk1heCA9IF90aGlzLmdldEJvdW5kc01pbk1heCh6b29tIHx8IF90aGlzLnN0YXRlLnpvb20pO1xuXG4gICAgICByZXR1cm4gW01hdGgubWF4KE1hdGgubWluKCFjZW50ZXIgfHwgaXNOYU4oY2VudGVyWzBdKSA/IF90aGlzLnN0YXRlLmNlbnRlclswXSA6IGNlbnRlclswXSwgbWluTWF4WzFdKSwgbWluTWF4WzBdKSwgTWF0aC5tYXgoTWF0aC5taW4oIWNlbnRlciB8fCBpc05hTihjZW50ZXJbMV0pID8gX3RoaXMuc3RhdGUuY2VudGVyWzFdIDogY2VudGVyWzFdLCBtaW5NYXhbM10pLCBtaW5NYXhbMl0pXTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJvbkFuaW1hdGlvblN0YXJ0XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLnByb3BzLm9uQW5pbWF0aW9uU3RhcnQgJiYgX3RoaXMucHJvcHMub25BbmltYXRpb25TdGFydCgpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIm9uQW5pbWF0aW9uU3RvcFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpcy5wcm9wcy5vbkFuaW1hdGlvblN0b3AgJiYgX3RoaXMucHJvcHMub25BbmltYXRpb25TdG9wKCk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2V0Q2VudGVyWm9vbVwiLCBmdW5jdGlvbiAoY2VudGVyLCB6b29tLCBhbmltYXRpb25FbmRlZCkge1xuICAgICAgaWYgKGFuaW1hdGlvbkVuZGVkID09PSB2b2lkIDApIHtcbiAgICAgICAgYW5pbWF0aW9uRW5kZWQgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgdmFyIGxpbWl0ZWRDZW50ZXIgPSBfdGhpcy5saW1pdENlbnRlckF0Wm9vbShjZW50ZXIsIHpvb20pO1xuXG4gICAgICBpZiAoem9vbSAmJiBNYXRoLnJvdW5kKF90aGlzLnN0YXRlLnpvb20pICE9PSBNYXRoLnJvdW5kKHpvb20pKSB7XG4gICAgICAgIHZhciB0aWxlVmFsdWVzID0gX3RoaXMudGlsZVZhbHVlcyhfdGhpcy5zdGF0ZSk7XG5cbiAgICAgICAgdmFyIG5leHRWYWx1ZXMgPSBfdGhpcy50aWxlVmFsdWVzKHtcbiAgICAgICAgICBjZW50ZXI6IGxpbWl0ZWRDZW50ZXIsXG4gICAgICAgICAgem9vbTogem9vbSxcbiAgICAgICAgICB3aWR0aDogX3RoaXMuc3RhdGUud2lkdGgsXG4gICAgICAgICAgaGVpZ2h0OiBfdGhpcy5zdGF0ZS5oZWlnaHRcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIG9sZFRpbGVzID0gX3RoaXMuc3RhdGUub2xkVGlsZXM7XG5cbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIG9sZFRpbGVzOiBvbGRUaWxlcy5maWx0ZXIoZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICAgIHJldHVybiBvLnJvdW5kZWRab29tICE9PSB0aWxlVmFsdWVzLnJvdW5kZWRab29tO1xuICAgICAgICAgIH0pLmNvbmNhdCh0aWxlVmFsdWVzKVxuICAgICAgICB9LCBOT09QKTtcblxuICAgICAgICB2YXIgbG9hZFRyYWNrZXIgPSB7fTtcblxuICAgICAgICBmb3IgKHZhciB4ID0gbmV4dFZhbHVlcy50aWxlTWluWDsgeCA8PSBuZXh0VmFsdWVzLnRpbGVNYXhYOyB4KyspIHtcbiAgICAgICAgICBmb3IgKHZhciB5ID0gbmV4dFZhbHVlcy50aWxlTWluWTsgeSA8PSBuZXh0VmFsdWVzLnRpbGVNYXhZOyB5KyspIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSB4ICsgXCItXCIgKyB5ICsgXCItXCIgKyBuZXh0VmFsdWVzLnJvdW5kZWRab29tO1xuICAgICAgICAgICAgbG9hZFRyYWNrZXJba2V5XSA9IGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzLl9sb2FkVHJhY2tlciA9IGxvYWRUcmFja2VyO1xuICAgICAgfVxuXG4gICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGNlbnRlcjogbGltaXRlZENlbnRlcixcbiAgICAgICAgem9vbTogem9vbSB8fCBfdGhpcy5zdGF0ZS56b29tXG4gICAgICB9LCBOT09QKTtcblxuICAgICAgdmFyIG1heWJlWm9vbSA9IF90aGlzLnByb3BzLnpvb20gPyBfdGhpcy5wcm9wcy56b29tIDogX3RoaXMuX2xhc3Rab29tO1xuICAgICAgdmFyIG1heWJlQ2VudGVyID0gX3RoaXMucHJvcHMuY2VudGVyID8gX3RoaXMucHJvcHMuY2VudGVyIDogX3RoaXMuX2xhc3RDZW50ZXI7XG5cbiAgICAgIGlmICh6b29tICYmIChhbmltYXRpb25FbmRlZCB8fCBNYXRoLmFicyhtYXliZVpvb20gLSB6b29tKSA+IDAuMDAxIHx8IE1hdGguYWJzKG1heWJlQ2VudGVyWzBdIC0gbGltaXRlZENlbnRlclswXSkgPiAwLjAwMDAxIHx8IE1hdGguYWJzKG1heWJlQ2VudGVyWzFdIC0gbGltaXRlZENlbnRlclsxXSkgPiAwLjAwMDAxKSkge1xuICAgICAgICBfdGhpcy5fbGFzdFpvb20gPSB6b29tO1xuICAgICAgICBfdGhpcy5fbGFzdENlbnRlciA9IFtdLmNvbmNhdChsaW1pdGVkQ2VudGVyKTtcblxuICAgICAgICBfdGhpcy5zeW5jVG9Qcm9wcyhsaW1pdGVkQ2VudGVyLCB6b29tKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJnZXRCb3VuZHNNaW5NYXhcIiwgZnVuY3Rpb24gKHpvb20pIHtcbiAgICAgIGlmIChfdGhpcy5wcm9wcy5saW1pdEJvdW5kcyA9PT0gJ2NlbnRlcicpIHtcbiAgICAgICAgcmV0dXJuIGFic29sdXRlTWluTWF4O1xuICAgICAgfVxuXG4gICAgICB2YXIgX3RoaXMkc3RhdGUyID0gX3RoaXMuc3RhdGUsXG4gICAgICAgICAgd2lkdGggPSBfdGhpcyRzdGF0ZTIud2lkdGgsXG4gICAgICAgICAgaGVpZ2h0ID0gX3RoaXMkc3RhdGUyLmhlaWdodDtcblxuICAgICAgaWYgKF90aGlzLl9taW5NYXhDYWNoZSAmJiBfdGhpcy5fbWluTWF4Q2FjaGVbMF0gPT09IHpvb20gJiYgX3RoaXMuX21pbk1heENhY2hlWzFdID09PSB3aWR0aCAmJiBfdGhpcy5fbWluTWF4Q2FjaGVbMl0gPT09IGhlaWdodCkge1xuICAgICAgICByZXR1cm4gX3RoaXMuX21pbk1heENhY2hlWzNdO1xuICAgICAgfVxuXG4gICAgICB2YXIgcGl4ZWxzQXRab29tID0gTWF0aC5wb3coMiwgem9vbSkgKiAyNTY7XG4gICAgICB2YXIgbWluTG5nID0gd2lkdGggPiBwaXhlbHNBdFpvb20gPyAwIDogdGlsZTJsbmcod2lkdGggLyA1MTIsIHpvb20pO1xuICAgICAgdmFyIG1pbkxhdCA9IGhlaWdodCA+IHBpeGVsc0F0Wm9vbSA/IDAgOiB0aWxlMmxhdChNYXRoLnBvdygyLCB6b29tKSAtIGhlaWdodCAvIDUxMiwgem9vbSk7XG4gICAgICB2YXIgbWF4TG5nID0gd2lkdGggPiBwaXhlbHNBdFpvb20gPyAwIDogdGlsZTJsbmcoTWF0aC5wb3coMiwgem9vbSkgLSB3aWR0aCAvIDUxMiwgem9vbSk7XG4gICAgICB2YXIgbWF4TGF0ID0gaGVpZ2h0ID4gcGl4ZWxzQXRab29tID8gMCA6IHRpbGUybGF0KGhlaWdodCAvIDUxMiwgem9vbSk7XG4gICAgICB2YXIgbWluTWF4ID0gW21pbkxhdCwgbWF4TGF0LCBtaW5MbmcsIG1heExuZ107XG4gICAgICBfdGhpcy5fbWluTWF4Q2FjaGUgPSBbem9vbSwgd2lkdGgsIGhlaWdodCwgbWluTWF4XTtcbiAgICAgIHJldHVybiBtaW5NYXg7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwidGlsZUxvYWRlZFwiLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBpZiAoX3RoaXMuX2xvYWRUcmFja2VyICYmIGtleSBpbiBfdGhpcy5fbG9hZFRyYWNrZXIpIHtcbiAgICAgICAgX3RoaXMuX2xvYWRUcmFja2VyW2tleV0gPSB0cnVlO1xuICAgICAgICB2YXIgdW5sb2FkZWRDb3VudCA9IE9iamVjdC52YWx1ZXMoX3RoaXMuX2xvYWRUcmFja2VyKS5maWx0ZXIoZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgICByZXR1cm4gIXY7XG4gICAgICAgIH0pLmxlbmd0aDtcblxuICAgICAgICBpZiAodW5sb2FkZWRDb3VudCA9PT0gMCkge1xuICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIG9sZFRpbGVzOiBbXVxuICAgICAgICAgIH0sIE5PT1ApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlVG91Y2hTdGFydFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmICghX3RoaXMuX2NvbnRhaW5lclJlZikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChldmVudC50YXJnZXQgJiYgcGFyZW50SGFzQ2xhc3MoZXZlbnQudGFyZ2V0LCAncGlnZW9uLWRyYWctYmxvY2snKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChldmVudC50b3VjaGVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICB2YXIgdG91Y2ggPSBldmVudC50b3VjaGVzWzBdO1xuICAgICAgICB2YXIgcGl4ZWwgPSBnZXRNb3VzZVBpeGVsKF90aGlzLl9jb250YWluZXJSZWYsIHRvdWNoKTtcblxuICAgICAgICBpZiAoX3RoaXMuY29vcmRzSW5zaWRlKHBpeGVsKSkge1xuICAgICAgICAgIF90aGlzLl90b3VjaFN0YXJ0UGl4ZWwgPSBbcGl4ZWxdO1xuXG4gICAgICAgICAgaWYgKCFfdGhpcy5wcm9wcy50d29GaW5nZXJEcmFnKSB7XG4gICAgICAgICAgICBfdGhpcy5zdG9wQW5pbWF0aW5nKCk7XG5cbiAgICAgICAgICAgIGlmIChfdGhpcy5fbGFzdFRhcCAmJiBwZXJmb3JtYW5jZU5vdygpIC0gX3RoaXMuX2xhc3RUYXAgPCBET1VCTEVfQ0xJQ0tfREVMQVkpIHtcbiAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgICB2YXIgbGF0TG5nTm93ID0gX3RoaXMucGl4ZWxUb0xhdExuZyhfdGhpcy5fdG91Y2hTdGFydFBpeGVsWzBdKTtcblxuICAgICAgICAgICAgICBfdGhpcy5zZXRDZW50ZXJab29tVGFyZ2V0KG51bGwsIE1hdGgubWF4KF90aGlzLnByb3BzLm1pblpvb20sIE1hdGgubWluKF90aGlzLnN0YXRlLnpvb20gKyAxLCBfdGhpcy5wcm9wcy5tYXhab29tKSksIGZhbHNlLCBsYXRMbmdOb3cpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgX3RoaXMuX2xhc3RUYXAgPSBwZXJmb3JtYW5jZU5vdygpO1xuXG4gICAgICAgICAgICAgIF90aGlzLnRyYWNrTW92ZUV2ZW50cyhwaXhlbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGV2ZW50LnRvdWNoZXMubGVuZ3RoID09PSAyICYmIF90aGlzLl90b3VjaFN0YXJ0UGl4ZWwpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICBfdGhpcy5zdG9wVHJhY2tpbmdNb3ZlRXZlbnRzKCk7XG5cbiAgICAgICAgaWYgKF90aGlzLnN0YXRlLnBpeGVsRGVsdGEgfHwgX3RoaXMuc3RhdGUuem9vbURlbHRhKSB7XG4gICAgICAgICAgX3RoaXMuc2VuZERlbHRhQ2hhbmdlKCk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdDEgPSBnZXRNb3VzZVBpeGVsKF90aGlzLl9jb250YWluZXJSZWYsIGV2ZW50LnRvdWNoZXNbMF0pO1xuICAgICAgICB2YXIgdDIgPSBnZXRNb3VzZVBpeGVsKF90aGlzLl9jb250YWluZXJSZWYsIGV2ZW50LnRvdWNoZXNbMV0pO1xuICAgICAgICBfdGhpcy5fdG91Y2hTdGFydFBpeGVsID0gW3QxLCB0Ml07XG4gICAgICAgIF90aGlzLl90b3VjaFN0YXJ0TWlkUG9pbnQgPSBbKHQxWzBdICsgdDJbMF0pIC8gMiwgKHQxWzFdICsgdDJbMV0pIC8gMl07XG4gICAgICAgIF90aGlzLl90b3VjaFN0YXJ0RGlzdGFuY2UgPSBNYXRoLnNxcnQoTWF0aC5wb3codDFbMF0gLSB0MlswXSwgMikgKyBNYXRoLnBvdyh0MVsxXSAtIHQyWzFdLCAyKSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlVG91Y2hNb3ZlXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKCFfdGhpcy5fY29udGFpbmVyUmVmKSB7XG4gICAgICAgIF90aGlzLl90b3VjaFN0YXJ0UGl4ZWwgPSBudWxsO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChldmVudC50b3VjaGVzLmxlbmd0aCA9PT0gMSAmJiBfdGhpcy5fdG91Y2hTdGFydFBpeGVsKSB7XG4gICAgICAgIHZhciB0b3VjaCA9IGV2ZW50LnRvdWNoZXNbMF07XG4gICAgICAgIHZhciBwaXhlbCA9IGdldE1vdXNlUGl4ZWwoX3RoaXMuX2NvbnRhaW5lclJlZiwgdG91Y2gpO1xuXG4gICAgICAgIGlmIChfdGhpcy5wcm9wcy50d29GaW5nZXJEcmFnKSB7XG4gICAgICAgICAgaWYgKF90aGlzLmNvb3Jkc0luc2lkZShwaXhlbCkpIHtcbiAgICAgICAgICAgIF90aGlzLnNob3dXYXJuaW5nKCdmaW5nZXJzJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICBfdGhpcy50cmFja01vdmVFdmVudHMocGl4ZWwpO1xuXG4gICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcGl4ZWxEZWx0YTogW3BpeGVsWzBdIC0gX3RoaXMuX3RvdWNoU3RhcnRQaXhlbFswXVswXSwgcGl4ZWxbMV0gLSBfdGhpcy5fdG91Y2hTdGFydFBpeGVsWzBdWzFdXVxuICAgICAgICAgIH0sIE5PT1ApO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGV2ZW50LnRvdWNoZXMubGVuZ3RoID09PSAyICYmIF90aGlzLl90b3VjaFN0YXJ0UGl4ZWwgJiYgX3RoaXMuX3RvdWNoU3RhcnRNaWRQb2ludCAmJiBfdGhpcy5fdG91Y2hTdGFydERpc3RhbmNlKSB7XG4gICAgICAgIHZhciBfdGhpcyRzdGF0ZTMgPSBfdGhpcy5zdGF0ZSxcbiAgICAgICAgICAgIHdpZHRoID0gX3RoaXMkc3RhdGUzLndpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0ID0gX3RoaXMkc3RhdGUzLmhlaWdodCxcbiAgICAgICAgICAgIHpvb20gPSBfdGhpcyRzdGF0ZTMuem9vbTtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdmFyIHQxID0gZ2V0TW91c2VQaXhlbChfdGhpcy5fY29udGFpbmVyUmVmLCBldmVudC50b3VjaGVzWzBdKTtcbiAgICAgICAgdmFyIHQyID0gZ2V0TW91c2VQaXhlbChfdGhpcy5fY29udGFpbmVyUmVmLCBldmVudC50b3VjaGVzWzFdKTtcbiAgICAgICAgdmFyIG1pZFBvaW50ID0gWyh0MVswXSArIHQyWzBdKSAvIDIsICh0MVsxXSArIHQyWzFdKSAvIDJdO1xuICAgICAgICB2YXIgbWlkUG9pbnREaWZmID0gW21pZFBvaW50WzBdIC0gX3RoaXMuX3RvdWNoU3RhcnRNaWRQb2ludFswXSwgbWlkUG9pbnRbMV0gLSBfdGhpcy5fdG91Y2hTdGFydE1pZFBvaW50WzFdXTtcbiAgICAgICAgdmFyIGRpc3RhbmNlID0gTWF0aC5zcXJ0KE1hdGgucG93KHQxWzBdIC0gdDJbMF0sIDIpICsgTWF0aC5wb3codDFbMV0gLSB0MlsxXSwgMikpO1xuICAgICAgICB2YXIgem9vbURlbHRhID0gTWF0aC5tYXgoX3RoaXMucHJvcHMubWluWm9vbSwgTWF0aC5taW4oX3RoaXMucHJvcHMubWF4Wm9vbSwgem9vbSArIE1hdGgubG9nMihkaXN0YW5jZSAvIF90aGlzLl90b3VjaFN0YXJ0RGlzdGFuY2UpKSkgLSB6b29tO1xuICAgICAgICB2YXIgc2NhbGUgPSBNYXRoLnBvdygyLCB6b29tRGVsdGEpO1xuICAgICAgICB2YXIgY2VudGVyRGlmZkRpZmYgPSBbKHdpZHRoIC8gMiAtIG1pZFBvaW50WzBdKSAqIChzY2FsZSAtIDEpLCAoaGVpZ2h0IC8gMiAtIG1pZFBvaW50WzFdKSAqIChzY2FsZSAtIDEpXTtcblxuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgem9vbURlbHRhOiB6b29tRGVsdGEsXG4gICAgICAgICAgcGl4ZWxEZWx0YTogW2NlbnRlckRpZmZEaWZmWzBdICsgbWlkUG9pbnREaWZmWzBdICogc2NhbGUsIGNlbnRlckRpZmZEaWZmWzFdICsgbWlkUG9pbnREaWZmWzFdICogc2NhbGVdXG4gICAgICAgIH0sIE5PT1ApO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImhhbmRsZVRvdWNoRW5kXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKCFfdGhpcy5fY29udGFpbmVyUmVmKSB7XG4gICAgICAgIF90aGlzLl90b3VjaFN0YXJ0UGl4ZWwgPSBudWxsO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChfdGhpcy5fdG91Y2hTdGFydFBpeGVsKSB7XG4gICAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgICAgem9vbVNuYXAgPSBfdGhpcyRwcm9wcy56b29tU25hcCxcbiAgICAgICAgICAgIHR3b0ZpbmdlckRyYWcgPSBfdGhpcyRwcm9wcy50d29GaW5nZXJEcmFnLFxuICAgICAgICAgICAgbWluWm9vbSA9IF90aGlzJHByb3BzLm1pblpvb20sXG4gICAgICAgICAgICBtYXhab29tID0gX3RoaXMkcHJvcHMubWF4Wm9vbTtcbiAgICAgICAgdmFyIHpvb21EZWx0YSA9IF90aGlzLnN0YXRlLnpvb21EZWx0YTtcblxuICAgICAgICB2YXIgX3RoaXMkc2VuZERlbHRhQ2hhbmdlID0gX3RoaXMuc2VuZERlbHRhQ2hhbmdlKCksXG4gICAgICAgICAgICBjZW50ZXIgPSBfdGhpcyRzZW5kRGVsdGFDaGFuZ2UuY2VudGVyLFxuICAgICAgICAgICAgem9vbSA9IF90aGlzJHNlbmREZWx0YUNoYW5nZS56b29tO1xuXG4gICAgICAgIGlmIChldmVudC50b3VjaGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGlmICh0d29GaW5nZXJEcmFnKSB7XG4gICAgICAgICAgICBfdGhpcy5jbGVhcldhcm5pbmcoKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIG9sZFRvdWNoUGl4ZWwgPSBfdGhpcy5fdG91Y2hTdGFydFBpeGVsWzBdO1xuICAgICAgICAgICAgdmFyIG5ld1RvdWNoUGl4ZWwgPSBnZXRNb3VzZVBpeGVsKF90aGlzLl9jb250YWluZXJSZWYsIGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdKTtcblxuICAgICAgICAgICAgaWYgKE1hdGguYWJzKG9sZFRvdWNoUGl4ZWxbMF0gLSBuZXdUb3VjaFBpeGVsWzBdKSA+IENMSUNLX1RPTEVSQU5DRSB8fCBNYXRoLmFicyhvbGRUb3VjaFBpeGVsWzFdIC0gbmV3VG91Y2hQaXhlbFsxXSkgPiBDTElDS19UT0xFUkFOQ0UpIHtcbiAgICAgICAgICAgICAgaWYgKCFfdGhpcy5fc2Vjb25kVG91Y2hFbmQgfHwgcGVyZm9ybWFuY2VOb3coKSAtIF90aGlzLl9zZWNvbmRUb3VjaEVuZCA+IFBJTkNIX1JFTEVBU0VfVEhST1dfREVMQVkpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICAgICAgX3RoaXMudGhyb3dBZnRlck1vdmluZyhuZXdUb3VjaFBpeGVsLCBjZW50ZXIsIHpvb20pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF90aGlzLl90b3VjaFN0YXJ0UGl4ZWwgPSBudWxsO1xuICAgICAgICAgICAgX3RoaXMuX3NlY29uZFRvdWNoRW5kID0gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoZXZlbnQudG91Y2hlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIHZhciB0b3VjaCA9IGdldE1vdXNlUGl4ZWwoX3RoaXMuX2NvbnRhaW5lclJlZiwgZXZlbnQudG91Y2hlc1swXSk7XG4gICAgICAgICAgX3RoaXMuX3NlY29uZFRvdWNoRW5kID0gcGVyZm9ybWFuY2VOb3coKTtcbiAgICAgICAgICBfdGhpcy5fdG91Y2hTdGFydFBpeGVsID0gW3RvdWNoXTtcblxuICAgICAgICAgIF90aGlzLnRyYWNrTW92ZUV2ZW50cyh0b3VjaCk7XG5cbiAgICAgICAgICBpZiAoem9vbVNuYXApIHtcbiAgICAgICAgICAgIHZhciBsYXRMbmcgPSBfdGhpcy5fdG91Y2hTdGFydE1pZFBvaW50ID8gX3RoaXMucGl4ZWxUb0xhdExuZyhfdGhpcy5fdG91Y2hTdGFydE1pZFBvaW50KSA6IF90aGlzLnN0YXRlLmNlbnRlcjtcbiAgICAgICAgICAgIHZhciB6b29tVGFyZ2V0O1xuXG4gICAgICAgICAgICBpZiAodHdvRmluZ2VyRHJhZyAmJiBNYXRoLnJvdW5kKF90aGlzLnN0YXRlLnpvb20pID09PSBNYXRoLnJvdW5kKF90aGlzLnN0YXRlLnpvb20gKyB6b29tRGVsdGEpKSB7XG4gICAgICAgICAgICAgIHpvb21UYXJnZXQgPSBNYXRoLnJvdW5kKF90aGlzLnN0YXRlLnpvb20pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgem9vbVRhcmdldCA9IHpvb21EZWx0YSA+IDAgPyBNYXRoLmNlaWwoX3RoaXMuc3RhdGUuem9vbSkgOiBNYXRoLmZsb29yKF90aGlzLnN0YXRlLnpvb20pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgX3pvb20gPSBNYXRoLm1heChtaW5ab29tLCBNYXRoLm1pbih6b29tVGFyZ2V0LCBtYXhab29tKSk7XG5cbiAgICAgICAgICAgIF90aGlzLnNldENlbnRlclpvb21UYXJnZXQobGF0TG5nLCBfem9vbSwgZmFsc2UsIGxhdExuZyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlTW91c2VEb3duXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKCFfdGhpcy5fY29udGFpbmVyUmVmKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHBpeGVsID0gZ2V0TW91c2VQaXhlbChfdGhpcy5fY29udGFpbmVyUmVmLCBldmVudCk7XG5cbiAgICAgIGlmIChldmVudC5idXR0b24gPT09IDAgJiYgKCFldmVudC50YXJnZXQgfHwgIXBhcmVudEhhc0NsYXNzKGV2ZW50LnRhcmdldCwgJ3BpZ2Vvbi1kcmFnLWJsb2NrJykpICYmIF90aGlzLmNvb3Jkc0luc2lkZShwaXhlbCkpIHtcbiAgICAgICAgX3RoaXMuc3RvcEFuaW1hdGluZygpO1xuXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgaWYgKF90aGlzLl9sYXN0Q2xpY2sgJiYgcGVyZm9ybWFuY2VOb3coKSAtIF90aGlzLl9sYXN0Q2xpY2sgPCBET1VCTEVfQ0xJQ0tfREVMQVkpIHtcbiAgICAgICAgICBpZiAoIXBhcmVudEhhc0NsYXNzKGV2ZW50LnRhcmdldCwgJ3BpZ2Vvbi1jbGljay1ibG9jaycpKSB7XG4gICAgICAgICAgICB2YXIgbGF0TG5nTm93ID0gX3RoaXMucGl4ZWxUb0xhdExuZyhfdGhpcy5fbW91c2VQb3NpdGlvbiB8fCBwaXhlbCk7XG5cbiAgICAgICAgICAgIF90aGlzLnNldENlbnRlclpvb21UYXJnZXQobnVsbCwgTWF0aC5tYXgoX3RoaXMucHJvcHMubWluWm9vbSwgTWF0aC5taW4oX3RoaXMuc3RhdGUuem9vbSArIDEsIF90aGlzLnByb3BzLm1heFpvb20pKSwgZmFsc2UsIGxhdExuZ05vdyk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzLl9sYXN0Q2xpY2sgPSBwZXJmb3JtYW5jZU5vdygpO1xuICAgICAgICAgIF90aGlzLl9tb3VzZURvd24gPSB0cnVlO1xuICAgICAgICAgIF90aGlzLl9kcmFnU3RhcnQgPSBwaXhlbDtcblxuICAgICAgICAgIF90aGlzLnRyYWNrTW92ZUV2ZW50cyhwaXhlbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJoYW5kbGVNb3VzZU1vdmVcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoIV90aGlzLl9jb250YWluZXJSZWYpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBfdGhpcy5fbW91c2VQb3NpdGlvbiA9IGdldE1vdXNlUGl4ZWwoX3RoaXMuX2NvbnRhaW5lclJlZiwgZXZlbnQpO1xuXG4gICAgICBpZiAoX3RoaXMuX21vdXNlRG93biAmJiBfdGhpcy5fZHJhZ1N0YXJ0KSB7XG4gICAgICAgIF90aGlzLnRyYWNrTW92ZUV2ZW50cyhfdGhpcy5fbW91c2VQb3NpdGlvbik7XG5cbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHBpeGVsRGVsdGE6IFtfdGhpcy5fbW91c2VQb3NpdGlvblswXSAtIF90aGlzLl9kcmFnU3RhcnRbMF0sIF90aGlzLl9tb3VzZVBvc2l0aW9uWzFdIC0gX3RoaXMuX2RyYWdTdGFydFsxXV1cbiAgICAgICAgfSwgTk9PUCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlTW91c2VVcFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmICghX3RoaXMuX2NvbnRhaW5lclJlZikge1xuICAgICAgICBfdGhpcy5fbW91c2VEb3duID0gZmFsc2U7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHBpeGVsRGVsdGEgPSBfdGhpcy5zdGF0ZS5waXhlbERlbHRhO1xuXG4gICAgICBpZiAoX3RoaXMuX21vdXNlRG93bikge1xuICAgICAgICBfdGhpcy5fbW91c2VEb3duID0gZmFsc2U7XG4gICAgICAgIHZhciBwaXhlbCA9IGdldE1vdXNlUGl4ZWwoX3RoaXMuX2NvbnRhaW5lclJlZiwgZXZlbnQpO1xuXG4gICAgICAgIGlmIChfdGhpcy5wcm9wcy5vbkNsaWNrICYmICghZXZlbnQudGFyZ2V0IHx8ICFwYXJlbnRIYXNDbGFzcyhldmVudC50YXJnZXQsICdwaWdlb24tY2xpY2stYmxvY2snKSkgJiYgKCFwaXhlbERlbHRhIHx8IE1hdGguYWJzKHBpeGVsRGVsdGFbMF0pICsgTWF0aC5hYnMocGl4ZWxEZWx0YVsxXSkgPD0gQ0xJQ0tfVE9MRVJBTkNFKSkge1xuICAgICAgICAgIHZhciBsYXRMbmcgPSBfdGhpcy5waXhlbFRvTGF0TG5nKHBpeGVsKTtcblxuICAgICAgICAgIF90aGlzLnByb3BzLm9uQ2xpY2soe1xuICAgICAgICAgICAgZXZlbnQ6IGV2ZW50LFxuICAgICAgICAgICAgbGF0TG5nOiBsYXRMbmcsXG4gICAgICAgICAgICBwaXhlbDogcGl4ZWxcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHBpeGVsRGVsdGE6IHVuZGVmaW5lZFxuICAgICAgICAgIH0sIE5PT1ApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBfdGhpcyRzZW5kRGVsdGFDaGFuZ2UyID0gX3RoaXMuc2VuZERlbHRhQ2hhbmdlKCksXG4gICAgICAgICAgICAgIGNlbnRlciA9IF90aGlzJHNlbmREZWx0YUNoYW5nZTIuY2VudGVyLFxuICAgICAgICAgICAgICB6b29tID0gX3RoaXMkc2VuZERlbHRhQ2hhbmdlMi56b29tO1xuXG4gICAgICAgICAgX3RoaXMudGhyb3dBZnRlck1vdmluZyhwaXhlbCwgY2VudGVyLCB6b29tKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInN0b3BUcmFja2luZ01vdmVFdmVudHNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuX21vdmVFdmVudHMgPSBbXTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJ0cmFja01vdmVFdmVudHNcIiwgZnVuY3Rpb24gKGNvb3Jkcykge1xuICAgICAgdmFyIHRpbWVzdGFtcCA9IHBlcmZvcm1hbmNlTm93KCk7XG5cbiAgICAgIGlmIChfdGhpcy5fbW92ZUV2ZW50cy5sZW5ndGggPT09IDAgfHwgdGltZXN0YW1wIC0gX3RoaXMuX21vdmVFdmVudHNbX3RoaXMuX21vdmVFdmVudHMubGVuZ3RoIC0gMV0udGltZXN0YW1wID4gNDApIHtcbiAgICAgICAgX3RoaXMuX21vdmVFdmVudHMucHVzaCh7XG4gICAgICAgICAgdGltZXN0YW1wOiB0aW1lc3RhbXAsXG4gICAgICAgICAgY29vcmRzOiBjb29yZHNcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKF90aGlzLl9tb3ZlRXZlbnRzLmxlbmd0aCA+IDIpIHtcbiAgICAgICAgICBfdGhpcy5fbW92ZUV2ZW50cy5zaGlmdCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwidGhyb3dBZnRlck1vdmluZ1wiLCBmdW5jdGlvbiAoY29vcmRzLCBjZW50ZXIsIHpvb20pIHtcbiAgICAgIHZhciBfdGhpcyRzdGF0ZTQgPSBfdGhpcy5zdGF0ZSxcbiAgICAgICAgICB3aWR0aCA9IF90aGlzJHN0YXRlNC53aWR0aCxcbiAgICAgICAgICBoZWlnaHQgPSBfdGhpcyRzdGF0ZTQuaGVpZ2h0O1xuICAgICAgdmFyIGFuaW1hdGUgPSBfdGhpcy5wcm9wcy5hbmltYXRlO1xuICAgICAgdmFyIHRpbWVzdGFtcCA9IHBlcmZvcm1hbmNlTm93KCk7XG5cbiAgICAgIHZhciBsYXN0RXZlbnQgPSBfdGhpcy5fbW92ZUV2ZW50cy5zaGlmdCgpO1xuXG4gICAgICBpZiAobGFzdEV2ZW50ICYmIGFuaW1hdGUpIHtcbiAgICAgICAgdmFyIGRlbHRhTXMgPSBNYXRoLm1heCh0aW1lc3RhbXAgLSBsYXN0RXZlbnQudGltZXN0YW1wLCAxKTtcbiAgICAgICAgdmFyIGRlbHRhID0gWyhjb29yZHNbMF0gLSBsYXN0RXZlbnQuY29vcmRzWzBdKSAvIGRlbHRhTXMgKiAxMjAsIChjb29yZHNbMV0gLSBsYXN0RXZlbnQuY29vcmRzWzFdKSAvIGRlbHRhTXMgKiAxMjBdO1xuICAgICAgICB2YXIgZGlzdGFuY2UgPSBNYXRoLnNxcnQoZGVsdGFbMF0gKiBkZWx0YVswXSArIGRlbHRhWzFdICogZGVsdGFbMV0pO1xuXG4gICAgICAgIGlmIChkaXN0YW5jZSA+IE1JTl9EUkFHX0ZPUl9USFJPVykge1xuICAgICAgICAgIHZhciBkaWFnb25hbCA9IE1hdGguc3FydCh3aWR0aCAqIHdpZHRoICsgaGVpZ2h0ICogaGVpZ2h0KTtcbiAgICAgICAgICB2YXIgdGhyb3dUaW1lID0gRElBR09OQUxfVEhST1dfVElNRSAqIGRpc3RhbmNlIC8gZGlhZ29uYWw7XG4gICAgICAgICAgdmFyIGxuZyA9IHRpbGUybG5nKGxuZzJ0aWxlKGNlbnRlclsxXSwgem9vbSkgLSBkZWx0YVswXSAvIDI1Ni4wLCB6b29tKTtcbiAgICAgICAgICB2YXIgbGF0ID0gdGlsZTJsYXQobGF0MnRpbGUoY2VudGVyWzBdLCB6b29tKSAtIGRlbHRhWzFdIC8gMjU2LjAsIHpvb20pO1xuXG4gICAgICAgICAgX3RoaXMuc2V0Q2VudGVyWm9vbVRhcmdldChbbGF0LCBsbmddLCB6b29tLCBmYWxzZSwgbnVsbCwgdGhyb3dUaW1lKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBfdGhpcy5zdG9wVHJhY2tpbmdNb3ZlRXZlbnRzKCk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2VuZERlbHRhQ2hhbmdlXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBfdGhpcyRzdGF0ZTUgPSBfdGhpcy5zdGF0ZSxcbiAgICAgICAgICBjZW50ZXIgPSBfdGhpcyRzdGF0ZTUuY2VudGVyLFxuICAgICAgICAgIHpvb20gPSBfdGhpcyRzdGF0ZTUuem9vbSxcbiAgICAgICAgICBwaXhlbERlbHRhID0gX3RoaXMkc3RhdGU1LnBpeGVsRGVsdGEsXG4gICAgICAgICAgem9vbURlbHRhID0gX3RoaXMkc3RhdGU1Lnpvb21EZWx0YTtcbiAgICAgIHZhciBsYXQgPSBjZW50ZXJbMF07XG4gICAgICB2YXIgbG5nID0gY2VudGVyWzFdO1xuXG4gICAgICBpZiAocGl4ZWxEZWx0YSB8fCB6b29tRGVsdGEgIT09IDApIHtcbiAgICAgICAgbG5nID0gdGlsZTJsbmcobG5nMnRpbGUoY2VudGVyWzFdLCB6b29tICsgem9vbURlbHRhKSAtIChwaXhlbERlbHRhID8gcGl4ZWxEZWx0YVswXSAvIDI1Ni4wIDogMCksIHpvb20gKyB6b29tRGVsdGEpO1xuICAgICAgICBsYXQgPSB0aWxlMmxhdChsYXQydGlsZShjZW50ZXJbMF0sIHpvb20gKyB6b29tRGVsdGEpIC0gKHBpeGVsRGVsdGEgPyBwaXhlbERlbHRhWzFdIC8gMjU2LjAgOiAwKSwgem9vbSArIHpvb21EZWx0YSk7XG5cbiAgICAgICAgX3RoaXMuc2V0Q2VudGVyWm9vbShbbGF0LCBsbmddLCB6b29tICsgem9vbURlbHRhKTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBwaXhlbERlbHRhOiB1bmRlZmluZWQsXG4gICAgICAgIHpvb21EZWx0YTogMFxuICAgICAgfSwgTk9PUCk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNlbnRlcjogX3RoaXMubGltaXRDZW50ZXJBdFpvb20oW2xhdCwgbG5nXSwgem9vbSArIHpvb21EZWx0YSksXG4gICAgICAgIHpvb206IHpvb20gKyB6b29tRGVsdGFcbiAgICAgIH07XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiZ2V0Qm91bmRzXCIsIGZ1bmN0aW9uIChjZW50ZXIsIHpvb20pIHtcbiAgICAgIGlmIChjZW50ZXIgPT09IHZvaWQgMCkge1xuICAgICAgICBjZW50ZXIgPSBfdGhpcy5zdGF0ZS5jZW50ZXI7XG4gICAgICB9XG5cbiAgICAgIGlmICh6b29tID09PSB2b2lkIDApIHtcbiAgICAgICAgem9vbSA9IF90aGlzLnpvb21QbHVzRGVsdGEoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIF90aGlzJHN0YXRlNiA9IF90aGlzLnN0YXRlLFxuICAgICAgICAgIHdpZHRoID0gX3RoaXMkc3RhdGU2LndpZHRoLFxuICAgICAgICAgIGhlaWdodCA9IF90aGlzJHN0YXRlNi5oZWlnaHQ7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuZTogX3RoaXMucGl4ZWxUb0xhdExuZyhbd2lkdGggLSAxLCAwXSwgY2VudGVyLCB6b29tKSxcbiAgICAgICAgc3c6IF90aGlzLnBpeGVsVG9MYXRMbmcoWzAsIGhlaWdodCAtIDFdLCBjZW50ZXIsIHpvb20pXG4gICAgICB9O1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInN5bmNUb1Byb3BzXCIsIGZ1bmN0aW9uIChjZW50ZXIsIHpvb20pIHtcbiAgICAgIGlmIChjZW50ZXIgPT09IHZvaWQgMCkge1xuICAgICAgICBjZW50ZXIgPSBfdGhpcy5zdGF0ZS5jZW50ZXI7XG4gICAgICB9XG5cbiAgICAgIGlmICh6b29tID09PSB2b2lkIDApIHtcbiAgICAgICAgem9vbSA9IF90aGlzLnN0YXRlLnpvb207XG4gICAgICB9XG5cbiAgICAgIHZhciBvbkJvdW5kc0NoYW5nZWQgPSBfdGhpcy5wcm9wcy5vbkJvdW5kc0NoYW5nZWQ7XG5cbiAgICAgIGlmIChvbkJvdW5kc0NoYW5nZWQpIHtcbiAgICAgICAgdmFyIGJvdW5kcyA9IF90aGlzLmdldEJvdW5kcyhjZW50ZXIsIHpvb20pO1xuXG4gICAgICAgIG9uQm91bmRzQ2hhbmdlZCh7XG4gICAgICAgICAgY2VudGVyOiBjZW50ZXIsXG4gICAgICAgICAgem9vbTogem9vbSxcbiAgICAgICAgICBib3VuZHM6IGJvdW5kcyxcbiAgICAgICAgICBpbml0aWFsOiAhX3RoaXMuX2JvdW5kc1N5bmNlZFxuICAgICAgICB9KTtcbiAgICAgICAgX3RoaXMuX2JvdW5kc1N5bmNlZCA9IHRydWU7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlV2hlZWxcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgbW91c2VFdmVudHMgPSBfdGhpcyRwcm9wczIubW91c2VFdmVudHMsXG4gICAgICAgICAgbWV0YVdoZWVsWm9vbSA9IF90aGlzJHByb3BzMi5tZXRhV2hlZWxab29tLFxuICAgICAgICAgIHpvb21TbmFwID0gX3RoaXMkcHJvcHMyLnpvb21TbmFwLFxuICAgICAgICAgIGFuaW1hdGUgPSBfdGhpcyRwcm9wczIuYW5pbWF0ZTtcblxuICAgICAgaWYgKCFtb3VzZUV2ZW50cykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICghbWV0YVdoZWVsWm9vbSB8fCBldmVudC5tZXRhS2V5IHx8IGV2ZW50LmN0cmxLZXkpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdmFyIGFkZFRvWm9vbSA9IC1ldmVudC5kZWx0YVkgLyBTQ1JPTExfUElYRUxTX0ZPUl9aT09NX0xFVkVMO1xuXG4gICAgICAgIGlmICghem9vbVNuYXAgJiYgX3RoaXMuX3pvb21UYXJnZXQpIHtcbiAgICAgICAgICB2YXIgc3RpbGxUb0FkZCA9IF90aGlzLl96b29tVGFyZ2V0IC0gX3RoaXMuc3RhdGUuem9vbTtcblxuICAgICAgICAgIF90aGlzLnpvb21Bcm91bmRNb3VzZShhZGRUb1pvb20gKyBzdGlsbFRvQWRkLCBldmVudCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKGFuaW1hdGUpIHtcbiAgICAgICAgICAgIF90aGlzLnpvb21Bcm91bmRNb3VzZShhZGRUb1pvb20sIGV2ZW50KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFfdGhpcy5fbGFzdFdoZWVsIHx8IHBlcmZvcm1hbmNlTm93KCkgLSBfdGhpcy5fbGFzdFdoZWVsID4gQU5JTUFUSU9OX1RJTUUpIHtcbiAgICAgICAgICAgICAgX3RoaXMuX2xhc3RXaGVlbCA9IHBlcmZvcm1hbmNlTm93KCk7XG5cbiAgICAgICAgICAgICAgX3RoaXMuem9vbUFyb3VuZE1vdXNlKGFkZFRvWm9vbSwgZXZlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMuc2hvd1dhcm5pbmcoJ3doZWVsJyk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2hvd1dhcm5pbmdcIiwgZnVuY3Rpb24gKHdhcm5pbmdUeXBlKSB7XG4gICAgICBpZiAoIV90aGlzLnN0YXRlLnNob3dXYXJuaW5nIHx8IF90aGlzLnN0YXRlLndhcm5pbmdUeXBlICE9PSB3YXJuaW5nVHlwZSkge1xuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgc2hvd1dhcm5pbmc6IHRydWUsXG4gICAgICAgICAgd2FybmluZ1R5cGU6IHdhcm5pbmdUeXBlXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoX3RoaXMuX3dhcm5pbmdDbGVhclRpbWVvdXQpIHtcbiAgICAgICAgd2luZG93LmNsZWFyVGltZW91dChfdGhpcy5fd2FybmluZ0NsZWFyVGltZW91dCk7XG4gICAgICB9XG5cbiAgICAgIF90aGlzLl93YXJuaW5nQ2xlYXJUaW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQoX3RoaXMuY2xlYXJXYXJuaW5nLCBXQVJOSU5HX0RJU1BMQVlfVElNRU9VVCk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiY2xlYXJXYXJuaW5nXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChfdGhpcy5zdGF0ZS5zaG93V2FybmluZykge1xuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgc2hvd1dhcm5pbmc6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInpvb21Bcm91bmRNb3VzZVwiLCBmdW5jdGlvbiAoem9vbURpZmYsIGV2ZW50KSB7XG4gICAgICBpZiAoIV90aGlzLl9jb250YWluZXJSZWYpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgem9vbSA9IF90aGlzLnN0YXRlLnpvb207XG4gICAgICB2YXIgX3RoaXMkcHJvcHMzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgbWluWm9vbSA9IF90aGlzJHByb3BzMy5taW5ab29tLFxuICAgICAgICAgIG1heFpvb20gPSBfdGhpcyRwcm9wczMubWF4Wm9vbSxcbiAgICAgICAgICB6b29tU25hcCA9IF90aGlzJHByb3BzMy56b29tU25hcDtcbiAgICAgIF90aGlzLl9tb3VzZVBvc2l0aW9uID0gZ2V0TW91c2VQaXhlbChfdGhpcy5fY29udGFpbmVyUmVmLCBldmVudCk7XG5cbiAgICAgIGlmICghX3RoaXMuX21vdXNlUG9zaXRpb24gfHwgem9vbSA9PT0gbWluWm9vbSAmJiB6b29tRGlmZiA8IDAgfHwgem9vbSA9PT0gbWF4Wm9vbSAmJiB6b29tRGlmZiA+IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgbGF0TG5nTm93ID0gX3RoaXMucGl4ZWxUb0xhdExuZyhfdGhpcy5fbW91c2VQb3NpdGlvbik7XG5cbiAgICAgIHZhciB6b29tVGFyZ2V0ID0gem9vbSArIHpvb21EaWZmO1xuXG4gICAgICBpZiAoem9vbVNuYXApIHtcbiAgICAgICAgem9vbVRhcmdldCA9IHpvb21EaWZmIDwgMCA/IE1hdGguZmxvb3Ioem9vbVRhcmdldCkgOiBNYXRoLmNlaWwoem9vbVRhcmdldCk7XG4gICAgICB9XG5cbiAgICAgIHpvb21UYXJnZXQgPSBNYXRoLm1heChtaW5ab29tLCBNYXRoLm1pbih6b29tVGFyZ2V0LCBtYXhab29tKSk7XG5cbiAgICAgIF90aGlzLnNldENlbnRlclpvb21UYXJnZXQobnVsbCwgem9vbVRhcmdldCwgZmFsc2UsIGxhdExuZ05vdyk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiem9vbVBsdXNEZWx0YVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3RoaXMuc3RhdGUuem9vbSArIF90aGlzLnN0YXRlLnpvb21EZWx0YTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJwaXhlbFRvTGF0TG5nXCIsIGZ1bmN0aW9uIChwaXhlbCwgY2VudGVyLCB6b29tKSB7XG4gICAgICBpZiAoY2VudGVyID09PSB2b2lkIDApIHtcbiAgICAgICAgY2VudGVyID0gX3RoaXMuc3RhdGUuY2VudGVyO1xuICAgICAgfVxuXG4gICAgICBpZiAoem9vbSA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHpvb20gPSBfdGhpcy56b29tUGx1c0RlbHRhKCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBfdGhpcyRzdGF0ZTcgPSBfdGhpcy5zdGF0ZSxcbiAgICAgICAgICB3aWR0aCA9IF90aGlzJHN0YXRlNy53aWR0aCxcbiAgICAgICAgICBoZWlnaHQgPSBfdGhpcyRzdGF0ZTcuaGVpZ2h0LFxuICAgICAgICAgIHBpeGVsRGVsdGEgPSBfdGhpcyRzdGF0ZTcucGl4ZWxEZWx0YTtcbiAgICAgIHZhciBwb2ludERpZmYgPSBbKHBpeGVsWzBdIC0gd2lkdGggLyAyIC0gKHBpeGVsRGVsdGEgPyBwaXhlbERlbHRhWzBdIDogMCkpIC8gMjU2LjAsIChwaXhlbFsxXSAtIGhlaWdodCAvIDIgLSAocGl4ZWxEZWx0YSA/IHBpeGVsRGVsdGFbMV0gOiAwKSkgLyAyNTYuMF07XG4gICAgICB2YXIgdGlsZVggPSBsbmcydGlsZShjZW50ZXJbMV0sIHpvb20pICsgcG9pbnREaWZmWzBdO1xuICAgICAgdmFyIHRpbGVZID0gbGF0MnRpbGUoY2VudGVyWzBdLCB6b29tKSArIHBvaW50RGlmZlsxXTtcbiAgICAgIHJldHVybiBbTWF0aC5tYXgoYWJzb2x1dGVNaW5NYXhbMF0sIE1hdGgubWluKGFic29sdXRlTWluTWF4WzFdLCB0aWxlMmxhdCh0aWxlWSwgem9vbSkpKSwgTWF0aC5tYXgoYWJzb2x1dGVNaW5NYXhbMl0sIE1hdGgubWluKGFic29sdXRlTWluTWF4WzNdLCB0aWxlMmxuZyh0aWxlWCwgem9vbSkpKV07XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwibGF0TG5nVG9QaXhlbFwiLCBmdW5jdGlvbiAobGF0TG5nLCBjZW50ZXIsIHpvb20pIHtcbiAgICAgIGlmIChjZW50ZXIgPT09IHZvaWQgMCkge1xuICAgICAgICBjZW50ZXIgPSBfdGhpcy5zdGF0ZS5jZW50ZXI7XG4gICAgICB9XG5cbiAgICAgIGlmICh6b29tID09PSB2b2lkIDApIHtcbiAgICAgICAgem9vbSA9IF90aGlzLnpvb21QbHVzRGVsdGEoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIF90aGlzJHN0YXRlOCA9IF90aGlzLnN0YXRlLFxuICAgICAgICAgIHdpZHRoID0gX3RoaXMkc3RhdGU4LndpZHRoLFxuICAgICAgICAgIGhlaWdodCA9IF90aGlzJHN0YXRlOC5oZWlnaHQsXG4gICAgICAgICAgcGl4ZWxEZWx0YSA9IF90aGlzJHN0YXRlOC5waXhlbERlbHRhO1xuICAgICAgdmFyIHRpbGVDZW50ZXJYID0gbG5nMnRpbGUoY2VudGVyWzFdLCB6b29tKTtcbiAgICAgIHZhciB0aWxlQ2VudGVyWSA9IGxhdDJ0aWxlKGNlbnRlclswXSwgem9vbSk7XG4gICAgICB2YXIgdGlsZVggPSBsbmcydGlsZShsYXRMbmdbMV0sIHpvb20pO1xuICAgICAgdmFyIHRpbGVZID0gbGF0MnRpbGUobGF0TG5nWzBdLCB6b29tKTtcbiAgICAgIHJldHVybiBbKHRpbGVYIC0gdGlsZUNlbnRlclgpICogMjU2LjAgKyB3aWR0aCAvIDIgKyAocGl4ZWxEZWx0YSA/IHBpeGVsRGVsdGFbMF0gOiAwKSwgKHRpbGVZIC0gdGlsZUNlbnRlclkpICogMjU2LjAgKyBoZWlnaHQgLyAyICsgKHBpeGVsRGVsdGEgPyBwaXhlbERlbHRhWzFdIDogMCldO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImNhbGN1bGF0ZVpvb21DZW50ZXJcIiwgZnVuY3Rpb24gKGNlbnRlciwgY29vcmRzLCBvbGRab29tLCBuZXdab29tKSB7XG4gICAgICB2YXIgX3RoaXMkc3RhdGU5ID0gX3RoaXMuc3RhdGUsXG4gICAgICAgICAgd2lkdGggPSBfdGhpcyRzdGF0ZTkud2lkdGgsXG4gICAgICAgICAgaGVpZ2h0ID0gX3RoaXMkc3RhdGU5LmhlaWdodDtcblxuICAgICAgdmFyIHBpeGVsQmVmb3JlID0gX3RoaXMubGF0TG5nVG9QaXhlbChjb29yZHMsIGNlbnRlciwgb2xkWm9vbSk7XG5cbiAgICAgIHZhciBwaXhlbEFmdGVyID0gX3RoaXMubGF0TG5nVG9QaXhlbChjb29yZHMsIGNlbnRlciwgbmV3Wm9vbSk7XG5cbiAgICAgIHZhciBuZXdDZW50ZXIgPSBfdGhpcy5waXhlbFRvTGF0TG5nKFt3aWR0aCAvIDIgKyBwaXhlbEFmdGVyWzBdIC0gcGl4ZWxCZWZvcmVbMF0sIGhlaWdodCAvIDIgKyBwaXhlbEFmdGVyWzFdIC0gcGl4ZWxCZWZvcmVbMV1dLCBjZW50ZXIsIG5ld1pvb20pO1xuXG4gICAgICByZXR1cm4gX3RoaXMubGltaXRDZW50ZXJBdFpvb20obmV3Q2VudGVyLCBuZXdab29tKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJzZXRSZWZcIiwgZnVuY3Rpb24gKGRvbSkge1xuICAgICAgX3RoaXMuX2NvbnRhaW5lclJlZiA9IGRvbTtcbiAgICB9KTtcblxuICAgIF90aGlzLnN5bmNUb1Byb3BzID0gZGVib3VuY2UoX3RoaXMuc3luY1RvUHJvcHMsIERFQk9VTkNFX0RFTEFZKTtcbiAgICBfdGhpcy5fbGFzdFpvb20gPSAoX3JlZjIgPSAoX3Byb3BzJGRlZmF1bHRab29tID0gcHJvcHMuZGVmYXVsdFpvb20pICE9PSBudWxsICYmIF9wcm9wcyRkZWZhdWx0Wm9vbSAhPT0gdm9pZCAwID8gX3Byb3BzJGRlZmF1bHRab29tIDogcHJvcHMuem9vbSkgIT09IG51bGwgJiYgX3JlZjIgIT09IHZvaWQgMCA/IF9yZWYyIDogMTQ7XG4gICAgX3RoaXMuX2xhc3RDZW50ZXIgPSAoX3JlZjMgPSAoX3Byb3BzJGRlZmF1bHRDZW50ZXIgPSBwcm9wcy5kZWZhdWx0Q2VudGVyKSAhPT0gbnVsbCAmJiBfcHJvcHMkZGVmYXVsdENlbnRlciAhPT0gdm9pZCAwID8gX3Byb3BzJGRlZmF1bHRDZW50ZXIgOiBwcm9wcy5jZW50ZXIpICE9PSBudWxsICYmIF9yZWYzICE9PSB2b2lkIDAgPyBfcmVmMyA6IFswLCAwXTtcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHpvb206IF90aGlzLl9sYXN0Wm9vbSxcbiAgICAgIGNlbnRlcjogX3RoaXMuX2xhc3RDZW50ZXIsXG4gICAgICB3aWR0aDogKF9yZWY0ID0gKF9wcm9wcyR3aWR0aCA9IHByb3BzLndpZHRoKSAhPT0gbnVsbCAmJiBfcHJvcHMkd2lkdGggIT09IHZvaWQgMCA/IF9wcm9wcyR3aWR0aCA6IHByb3BzLmRlZmF1bHRXaWR0aCkgIT09IG51bGwgJiYgX3JlZjQgIT09IHZvaWQgMCA/IF9yZWY0IDogLTEsXG4gICAgICBoZWlnaHQ6IChfcmVmNSA9IChfcHJvcHMkaGVpZ2h0ID0gcHJvcHMuaGVpZ2h0KSAhPT0gbnVsbCAmJiBfcHJvcHMkaGVpZ2h0ICE9PSB2b2lkIDAgPyBfcHJvcHMkaGVpZ2h0IDogcHJvcHMuZGVmYXVsdEhlaWdodCkgIT09IG51bGwgJiYgX3JlZjUgIT09IHZvaWQgMCA/IF9yZWY1IDogLTEsXG4gICAgICB6b29tRGVsdGE6IDAsXG4gICAgICBwaXhlbERlbHRhOiB1bmRlZmluZWQsXG4gICAgICBvbGRUaWxlczogW10sXG4gICAgICBzaG93V2FybmluZzogZmFsc2UsXG4gICAgICB3YXJuaW5nVHlwZTogdW5kZWZpbmVkXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTWFwLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHRoaXMucHJvcHMubW91c2VFdmVudHMgJiYgdGhpcy5iaW5kTW91c2VFdmVudHMoKTtcbiAgICB0aGlzLnByb3BzLnRvdWNoRXZlbnRzICYmIHRoaXMuYmluZFRvdWNoRXZlbnRzKCk7XG5cbiAgICBpZiAoIXRoaXMucHJvcHMud2lkdGggfHwgIXRoaXMucHJvcHMuaGVpZ2h0KSB7XG4gICAgICBpZiAoIXRoaXMudXBkYXRlV2lkdGhIZWlnaHQoKSkge1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy51cGRhdGVXaWR0aEhlaWdodCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYmluZFJlc2l6ZUV2ZW50KCk7XG4gICAgfVxuXG4gICAgdGhpcy5iaW5kV2hlZWxFdmVudCgpO1xuICAgIHRoaXMuc3luY1RvUHJvcHMoKTtcblxuICAgIGlmICh0eXBlb2Ygd2luZG93LlJlc2l6ZU9ic2VydmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhpcy5fcmVzaXplT2JzZXJ2ZXIgPSBuZXcgd2luZG93LlJlc2l6ZU9ic2VydmVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMyLnVwZGF0ZVdpZHRoSGVpZ2h0KCk7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5fcmVzaXplT2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLl9jb250YWluZXJSZWYpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnByb3BzLm1vdXNlRXZlbnRzICYmIHRoaXMudW5iaW5kTW91c2VFdmVudHMoKTtcbiAgICB0aGlzLnByb3BzLnRvdWNoRXZlbnRzICYmIHRoaXMudW5iaW5kVG91Y2hFdmVudHMoKTtcbiAgICB0aGlzLnVuYmluZFdoZWVsRXZlbnQoKTtcblxuICAgIGlmICghdGhpcy5wcm9wcy53aWR0aCB8fCAhdGhpcy5wcm9wcy5oZWlnaHQpIHtcbiAgICAgIHRoaXMudW5iaW5kUmVzaXplRXZlbnQoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fcmVzaXplT2JzZXJ2ZXIpIHtcbiAgICAgIHRoaXMuX3Jlc2l6ZU9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICB2YXIgX3ByZXZQcm9wcyRjZW50ZXI7XG5cbiAgICBpZiAodGhpcy5wcm9wcy5tb3VzZUV2ZW50cyAhPT0gcHJldlByb3BzLm1vdXNlRXZlbnRzKSB7XG4gICAgICB0aGlzLnByb3BzLm1vdXNlRXZlbnRzID8gdGhpcy5iaW5kTW91c2VFdmVudHMoKSA6IHRoaXMudW5iaW5kTW91c2VFdmVudHMoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy50b3VjaEV2ZW50cyAhPT0gcHJldlByb3BzLnRvdWNoRXZlbnRzKSB7XG4gICAgICB0aGlzLnByb3BzLnRvdWNoRXZlbnRzID8gdGhpcy5iaW5kVG91Y2hFdmVudHMoKSA6IHRoaXMudW5iaW5kVG91Y2hFdmVudHMoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy53aWR0aCAmJiB0aGlzLnByb3BzLndpZHRoICE9PSBwcmV2UHJvcHMud2lkdGgpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICB3aWR0aDogdGhpcy5wcm9wcy53aWR0aFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucHJvcHMuaGVpZ2h0ICYmIHRoaXMucHJvcHMuaGVpZ2h0ICE9PSBwcmV2UHJvcHMuaGVpZ2h0KSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaGVpZ2h0OiB0aGlzLnByb3BzLmhlaWdodFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLnByb3BzLmNlbnRlciAmJiAhdGhpcy5wcm9wcy56b29tKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCghdGhpcy5wcm9wcy5jZW50ZXIgfHwgdGhpcy5wcm9wcy5jZW50ZXJbMF0gPT09IChwcmV2UHJvcHMgPT09IG51bGwgfHwgcHJldlByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3ByZXZQcm9wcyRjZW50ZXIgPSBwcmV2UHJvcHMuY2VudGVyKSA9PT0gbnVsbCB8fCBfcHJldlByb3BzJGNlbnRlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ByZXZQcm9wcyRjZW50ZXJbMF0pICYmIHRoaXMucHJvcHMuY2VudGVyWzFdID09PSBwcmV2UHJvcHMuY2VudGVyWzFdKSAmJiB0aGlzLnByb3BzLnpvb20gPT09IHByZXZQcm9wcy56b29tKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIGN1cnJlbnRDZW50ZXIgPSB0aGlzLl9pc0FuaW1hdGluZyA/IHRoaXMuX2NlbnRlclRhcmdldCA6IHRoaXMuc3RhdGUuY2VudGVyO1xuICAgIHZhciBjdXJyZW50Wm9vbSA9IHRoaXMuX2lzQW5pbWF0aW5nID8gdGhpcy5fem9vbVRhcmdldCA6IHRoaXMuc3RhdGUuem9vbTtcblxuICAgIGlmIChjdXJyZW50Q2VudGVyICYmIGN1cnJlbnRab29tKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMkY2VudGVyLCBfdGhpcyRwcm9wcyR6b29tO1xuXG4gICAgICB2YXIgbmV4dENlbnRlciA9IChfdGhpcyRwcm9wcyRjZW50ZXIgPSB0aGlzLnByb3BzLmNlbnRlcikgIT09IG51bGwgJiYgX3RoaXMkcHJvcHMkY2VudGVyICE9PSB2b2lkIDAgPyBfdGhpcyRwcm9wcyRjZW50ZXIgOiBjdXJyZW50Q2VudGVyO1xuICAgICAgdmFyIG5leHRab29tID0gKF90aGlzJHByb3BzJHpvb20gPSB0aGlzLnByb3BzLnpvb20pICE9PSBudWxsICYmIF90aGlzJHByb3BzJHpvb20gIT09IHZvaWQgMCA/IF90aGlzJHByb3BzJHpvb20gOiBjdXJyZW50Wm9vbTtcblxuICAgICAgaWYgKE1hdGguYWJzKG5leHRab29tIC0gY3VycmVudFpvb20pID4gMC4wMDEgfHwgTWF0aC5hYnMobmV4dENlbnRlclswXSAtIGN1cnJlbnRDZW50ZXJbMF0pID4gMC4wMDAxIHx8IE1hdGguYWJzKG5leHRDZW50ZXJbMV0gLSBjdXJyZW50Q2VudGVyWzFdKSA+IDAuMDAwMSkge1xuICAgICAgICB0aGlzLnNldENlbnRlclpvb21UYXJnZXQobmV4dENlbnRlciwgbmV4dFpvb20sIHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uY29vcmRzSW5zaWRlID0gZnVuY3Rpb24gY29vcmRzSW5zaWRlKHBpeGVsKSB7XG4gICAgdmFyIF90aGlzJHN0YXRlMTAgPSB0aGlzLnN0YXRlLFxuICAgICAgICB3aWR0aCA9IF90aGlzJHN0YXRlMTAud2lkdGgsXG4gICAgICAgIGhlaWdodCA9IF90aGlzJHN0YXRlMTAuaGVpZ2h0O1xuXG4gICAgaWYgKHBpeGVsWzBdIDwgMCB8fCBwaXhlbFsxXSA8IDAgfHwgcGl4ZWxbMF0gPj0gd2lkdGggfHwgcGl4ZWxbMV0gPj0gaGVpZ2h0KSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHBhcmVudCA9IHRoaXMuX2NvbnRhaW5lclJlZjtcblxuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIHZhciBwb3MgPSBwYXJlbnRQb3NpdGlvbihwYXJlbnQpO1xuICAgICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KHBpeGVsWzBdICsgcG9zLngsIHBpeGVsWzFdICsgcG9zLnkpO1xuICAgICAgcmV0dXJuIHBhcmVudCA9PT0gZWxlbWVudCB8fCBwYXJlbnQuY29udGFpbnMoZWxlbWVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnRpbGVWYWx1ZXMgPSBmdW5jdGlvbiB0aWxlVmFsdWVzKF9yZWY2KSB7XG4gICAgdmFyIGNlbnRlciA9IF9yZWY2LmNlbnRlcixcbiAgICAgICAgem9vbSA9IF9yZWY2Lnpvb20sXG4gICAgICAgIHBpeGVsRGVsdGEgPSBfcmVmNi5waXhlbERlbHRhLFxuICAgICAgICB6b29tRGVsdGEgPSBfcmVmNi56b29tRGVsdGEsXG4gICAgICAgIHdpZHRoID0gX3JlZjYud2lkdGgsXG4gICAgICAgIGhlaWdodCA9IF9yZWY2LmhlaWdodDtcbiAgICB2YXIgcm91bmRlZFpvb20gPSBNYXRoLnJvdW5kKHpvb20gKyAoem9vbURlbHRhIHx8IDApKTtcbiAgICB2YXIgem9vbURpZmYgPSB6b29tICsgKHpvb21EZWx0YSB8fCAwKSAtIHJvdW5kZWRab29tO1xuICAgIHZhciBzY2FsZSA9IE1hdGgucG93KDIsIHpvb21EaWZmKTtcbiAgICB2YXIgc2NhbGVXaWR0aCA9IHdpZHRoIC8gc2NhbGU7XG4gICAgdmFyIHNjYWxlSGVpZ2h0ID0gaGVpZ2h0IC8gc2NhbGU7XG4gICAgdmFyIHRpbGVDZW50ZXJYID0gbG5nMnRpbGUoY2VudGVyWzFdLCByb3VuZGVkWm9vbSkgLSAocGl4ZWxEZWx0YSA/IHBpeGVsRGVsdGFbMF0gLyAyNTYuMCAvIHNjYWxlIDogMCk7XG4gICAgdmFyIHRpbGVDZW50ZXJZID0gbGF0MnRpbGUoY2VudGVyWzBdLCByb3VuZGVkWm9vbSkgLSAocGl4ZWxEZWx0YSA/IHBpeGVsRGVsdGFbMV0gLyAyNTYuMCAvIHNjYWxlIDogMCk7XG4gICAgdmFyIGhhbGZXaWR0aCA9IHNjYWxlV2lkdGggLyAyIC8gMjU2LjA7XG4gICAgdmFyIGhhbGZIZWlnaHQgPSBzY2FsZUhlaWdodCAvIDIgLyAyNTYuMDtcbiAgICB2YXIgdGlsZU1pblggPSBNYXRoLmZsb29yKHRpbGVDZW50ZXJYIC0gaGFsZldpZHRoKTtcbiAgICB2YXIgdGlsZU1heFggPSBNYXRoLmZsb29yKHRpbGVDZW50ZXJYICsgaGFsZldpZHRoKTtcbiAgICB2YXIgdGlsZU1pblkgPSBNYXRoLmZsb29yKHRpbGVDZW50ZXJZIC0gaGFsZkhlaWdodCk7XG4gICAgdmFyIHRpbGVNYXhZID0gTWF0aC5mbG9vcih0aWxlQ2VudGVyWSArIGhhbGZIZWlnaHQpO1xuICAgIHJldHVybiB7XG4gICAgICB0aWxlTWluWDogdGlsZU1pblgsXG4gICAgICB0aWxlTWF4WDogdGlsZU1heFgsXG4gICAgICB0aWxlTWluWTogdGlsZU1pblksXG4gICAgICB0aWxlTWF4WTogdGlsZU1heFksXG4gICAgICB0aWxlQ2VudGVyWDogdGlsZUNlbnRlclgsXG4gICAgICB0aWxlQ2VudGVyWTogdGlsZUNlbnRlclksXG4gICAgICByb3VuZGVkWm9vbTogcm91bmRlZFpvb20sXG4gICAgICB6b29tRGVsdGE6IHpvb21EZWx0YSB8fCAwLFxuICAgICAgc2NhbGVXaWR0aDogc2NhbGVXaWR0aCxcbiAgICAgIHNjYWxlSGVpZ2h0OiBzY2FsZUhlaWdodCxcbiAgICAgIHNjYWxlOiBzY2FsZVxuICAgIH07XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlclRpbGVzID0gZnVuY3Rpb24gcmVuZGVyVGlsZXMoKSB7XG4gICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICB2YXIgX3RoaXMkc3RhdGUxMSA9IHRoaXMuc3RhdGUsXG4gICAgICAgIG9sZFRpbGVzID0gX3RoaXMkc3RhdGUxMS5vbGRUaWxlcyxcbiAgICAgICAgd2lkdGggPSBfdGhpcyRzdGF0ZTExLndpZHRoLFxuICAgICAgICBoZWlnaHQgPSBfdGhpcyRzdGF0ZTExLmhlaWdodDtcbiAgICB2YXIgZHBycyA9IHRoaXMucHJvcHMuZHBycztcbiAgICB2YXIgbWFwVXJsID0gdGhpcy5wcm9wcy5wcm92aWRlciB8fCBvc207XG5cbiAgICB2YXIgX3RoaXMkdGlsZVZhbHVlcyA9IHRoaXMudGlsZVZhbHVlcyh0aGlzLnN0YXRlKSxcbiAgICAgICAgdGlsZU1pblggPSBfdGhpcyR0aWxlVmFsdWVzLnRpbGVNaW5YLFxuICAgICAgICB0aWxlTWF4WCA9IF90aGlzJHRpbGVWYWx1ZXMudGlsZU1heFgsXG4gICAgICAgIHRpbGVNaW5ZID0gX3RoaXMkdGlsZVZhbHVlcy50aWxlTWluWSxcbiAgICAgICAgdGlsZU1heFkgPSBfdGhpcyR0aWxlVmFsdWVzLnRpbGVNYXhZLFxuICAgICAgICB0aWxlQ2VudGVyWCA9IF90aGlzJHRpbGVWYWx1ZXMudGlsZUNlbnRlclgsXG4gICAgICAgIHRpbGVDZW50ZXJZID0gX3RoaXMkdGlsZVZhbHVlcy50aWxlQ2VudGVyWSxcbiAgICAgICAgcm91bmRlZFpvb20gPSBfdGhpcyR0aWxlVmFsdWVzLnJvdW5kZWRab29tLFxuICAgICAgICBzY2FsZVdpZHRoID0gX3RoaXMkdGlsZVZhbHVlcy5zY2FsZVdpZHRoLFxuICAgICAgICBzY2FsZUhlaWdodCA9IF90aGlzJHRpbGVWYWx1ZXMuc2NhbGVIZWlnaHQsXG4gICAgICAgIHNjYWxlID0gX3RoaXMkdGlsZVZhbHVlcy5zY2FsZTtcblxuICAgIHZhciB0aWxlcyA9IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvbGRUaWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIG9sZCA9IG9sZFRpbGVzW2ldO1xuICAgICAgdmFyIHpvb21EaWZmID0gb2xkLnJvdW5kZWRab29tIC0gcm91bmRlZFpvb207XG5cbiAgICAgIGlmIChNYXRoLmFicyh6b29tRGlmZikgPiA0IHx8IHpvb21EaWZmID09PSAwKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICB2YXIgcG93ID0gMSAvIE1hdGgucG93KDIsIHpvb21EaWZmKTtcbiAgICAgIHZhciB4RGlmZiA9IC0odGlsZU1pblggLSBvbGQudGlsZU1pblggKiBwb3cpICogMjU2O1xuICAgICAgdmFyIHlEaWZmID0gLSh0aWxlTWluWSAtIG9sZC50aWxlTWluWSAqIHBvdykgKiAyNTY7XG5cbiAgICAgIHZhciBfeE1pbiA9IE1hdGgubWF4KG9sZC50aWxlTWluWCwgMCk7XG5cbiAgICAgIHZhciBfeU1pbiA9IE1hdGgubWF4KG9sZC50aWxlTWluWSwgMCk7XG5cbiAgICAgIHZhciBfeE1heCA9IE1hdGgubWluKG9sZC50aWxlTWF4WCwgTWF0aC5wb3coMiwgb2xkLnJvdW5kZWRab29tKSAtIDEpO1xuXG4gICAgICB2YXIgX3lNYXggPSBNYXRoLm1pbihvbGQudGlsZU1heFksIE1hdGgucG93KDIsIG9sZC5yb3VuZGVkWm9vbSkgLSAxKTtcblxuICAgICAgZm9yICh2YXIgeCA9IF94TWluOyB4IDw9IF94TWF4OyB4KyspIHtcbiAgICAgICAgZm9yICh2YXIgeSA9IF95TWluOyB5IDw9IF95TWF4OyB5KyspIHtcbiAgICAgICAgICB0aWxlcy5wdXNoKHtcbiAgICAgICAgICAgIGtleTogeCArIFwiLVwiICsgeSArIFwiLVwiICsgb2xkLnJvdW5kZWRab29tLFxuICAgICAgICAgICAgdXJsOiBtYXBVcmwoeCwgeSwgb2xkLnJvdW5kZWRab29tKSxcbiAgICAgICAgICAgIHNyY1NldDogc3JjU2V0KGRwcnMsIG1hcFVybCwgeCwgeSwgb2xkLnJvdW5kZWRab29tKSxcbiAgICAgICAgICAgIGxlZnQ6IHhEaWZmICsgKHggLSBvbGQudGlsZU1pblgpICogMjU2ICogcG93LFxuICAgICAgICAgICAgdG9wOiB5RGlmZiArICh5IC0gb2xkLnRpbGVNaW5ZKSAqIDI1NiAqIHBvdyxcbiAgICAgICAgICAgIHdpZHRoOiAyNTYgKiBwb3csXG4gICAgICAgICAgICBoZWlnaHQ6IDI1NiAqIHBvdyxcbiAgICAgICAgICAgIGFjdGl2ZTogZmFsc2VcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHZhciB4TWluID0gTWF0aC5tYXgodGlsZU1pblgsIDApO1xuICAgIHZhciB5TWluID0gTWF0aC5tYXgodGlsZU1pblksIDApO1xuICAgIHZhciB4TWF4ID0gTWF0aC5taW4odGlsZU1heFgsIE1hdGgucG93KDIsIHJvdW5kZWRab29tKSAtIDEpO1xuICAgIHZhciB5TWF4ID0gTWF0aC5taW4odGlsZU1heFksIE1hdGgucG93KDIsIHJvdW5kZWRab29tKSAtIDEpO1xuXG4gICAgZm9yICh2YXIgX3ggPSB4TWluOyBfeCA8PSB4TWF4OyBfeCsrKSB7XG4gICAgICBmb3IgKHZhciBfeSA9IHlNaW47IF95IDw9IHlNYXg7IF95KyspIHtcbiAgICAgICAgdGlsZXMucHVzaCh7XG4gICAgICAgICAga2V5OiBfeCArIFwiLVwiICsgX3kgKyBcIi1cIiArIHJvdW5kZWRab29tLFxuICAgICAgICAgIHVybDogbWFwVXJsKF94LCBfeSwgcm91bmRlZFpvb20pLFxuICAgICAgICAgIHNyY1NldDogc3JjU2V0KGRwcnMsIG1hcFVybCwgX3gsIF95LCByb3VuZGVkWm9vbSksXG4gICAgICAgICAgbGVmdDogKF94IC0gdGlsZU1pblgpICogMjU2LFxuICAgICAgICAgIHRvcDogKF95IC0gdGlsZU1pblkpICogMjU2LFxuICAgICAgICAgIHdpZHRoOiAyNTYsXG4gICAgICAgICAgaGVpZ2h0OiAyNTYsXG4gICAgICAgICAgYWN0aXZlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBib3hTdHlsZSA9IHtcbiAgICAgIHdpZHRoOiBzY2FsZVdpZHRoLFxuICAgICAgaGVpZ2h0OiBzY2FsZUhlaWdodCxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgdG9wOiBcImNhbGMoKDEwMCUgLSBcIiArIGhlaWdodCArIFwicHgpIC8gMilcIixcbiAgICAgIGxlZnQ6IFwiY2FsYygoMTAwJSAtIFwiICsgd2lkdGggKyBcInB4KSAvIDIpXCIsXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICB3aWxsQ2hhbmdlOiAndHJhbnNmb3JtJyxcbiAgICAgIHRyYW5zZm9ybTogXCJzY2FsZShcIiArIHNjYWxlICsgXCIsIFwiICsgc2NhbGUgKyBcIilcIixcbiAgICAgIHRyYW5zZm9ybU9yaWdpbjogJ3RvcCBsZWZ0J1xuICAgIH07XG4gICAgdmFyIGJveENsYXNzbmFtZSA9IHRoaXMucHJvcHMuYm94Q2xhc3NuYW1lIHx8ICdwaWdlb24tdGlsZXMtYm94JztcbiAgICB2YXIgbGVmdCA9IC0oKHRpbGVDZW50ZXJYIC0gdGlsZU1pblgpICogMjU2IC0gc2NhbGVXaWR0aCAvIDIpO1xuICAgIHZhciB0b3AgPSAtKCh0aWxlQ2VudGVyWSAtIHRpbGVNaW5ZKSAqIDI1NiAtIHNjYWxlSGVpZ2h0IC8gMik7XG4gICAgdmFyIHRpbGVzU3R5bGUgPSB7XG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIHdpZHRoOiAodGlsZU1heFggLSB0aWxlTWluWCArIDEpICogMjU2LFxuICAgICAgaGVpZ2h0OiAodGlsZU1heFkgLSB0aWxlTWluWSArIDEpICogMjU2LFxuICAgICAgd2lsbENoYW5nZTogJ3RyYW5zZm9ybScsXG4gICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKFwiICsgbGVmdCArIFwicHgsIFwiICsgdG9wICsgXCJweClcIlxuICAgIH07XG4gICAgdmFyIFRpbGUgPSB0aGlzLnByb3BzLnRpbGVDb21wb25lbnQ7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIHN0eWxlOiBib3hTdHlsZSxcbiAgICAgIGNsYXNzTmFtZTogYm94Q2xhc3NuYW1lXG4gICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgY2xhc3NOYW1lOiBcInBpZ2Vvbi10aWxlc1wiLFxuICAgICAgc3R5bGU6IHRpbGVzU3R5bGVcbiAgICB9LCB0aWxlcy5tYXAoZnVuY3Rpb24gKHRpbGUpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUaWxlLCB7XG4gICAgICAgIGtleTogdGlsZS5rZXksXG4gICAgICAgIHRpbGU6IHRpbGUsXG4gICAgICAgIHRpbGVMb2FkZWQ6IGZ1bmN0aW9uIHRpbGVMb2FkZWQoKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMy50aWxlTG9hZGVkKHRpbGUua2V5KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSkpKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyT3ZlcmxheXMgPSBmdW5jdGlvbiByZW5kZXJPdmVybGF5cygpIHtcbiAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgIHZhciBfdGhpcyRzdGF0ZTEyID0gdGhpcy5zdGF0ZSxcbiAgICAgICAgd2lkdGggPSBfdGhpcyRzdGF0ZTEyLndpZHRoLFxuICAgICAgICBoZWlnaHQgPSBfdGhpcyRzdGF0ZTEyLmhlaWdodCxcbiAgICAgICAgY2VudGVyID0gX3RoaXMkc3RhdGUxMi5jZW50ZXI7XG4gICAgdmFyIG1hcFN0YXRlID0ge1xuICAgICAgYm91bmRzOiB0aGlzLmdldEJvdW5kcygpLFxuICAgICAgem9vbTogdGhpcy56b29tUGx1c0RlbHRhKCksXG4gICAgICBjZW50ZXI6IGNlbnRlcixcbiAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgIGhlaWdodDogaGVpZ2h0XG4gICAgfTtcbiAgICB2YXIgY2hpbGRyZW5XaXRoUHJvcHMgPSBSZWFjdC5DaGlsZHJlbi5tYXAodGhpcy5wcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICBpZiAoIWNoaWxkKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAoISAvKiNfX1BVUkVfXyovUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgIHJldHVybiBjaGlsZDtcbiAgICAgIH1cblxuICAgICAgdmFyIF9jaGlsZCRwcm9wcyA9IGNoaWxkLnByb3BzLFxuICAgICAgICAgIGFuY2hvciA9IF9jaGlsZCRwcm9wcy5hbmNob3IsXG4gICAgICAgICAgcG9zaXRpb24gPSBfY2hpbGQkcHJvcHMucG9zaXRpb24sXG4gICAgICAgICAgb2Zmc2V0ID0gX2NoaWxkJHByb3BzLm9mZnNldDtcblxuICAgICAgdmFyIGMgPSBfdGhpczQubGF0TG5nVG9QaXhlbChhbmNob3IgfHwgcG9zaXRpb24gfHwgY2VudGVyKTtcblxuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHtcbiAgICAgICAgbGVmdDogY1swXSAtIChvZmZzZXQgPyBvZmZzZXRbMF0gOiAwKSxcbiAgICAgICAgdG9wOiBjWzFdIC0gKG9mZnNldCA/IG9mZnNldFsxXSA6IDApLFxuICAgICAgICBsYXRMbmdUb1BpeGVsOiBfdGhpczQubGF0TG5nVG9QaXhlbCxcbiAgICAgICAgcGl4ZWxUb0xhdExuZzogX3RoaXM0LnBpeGVsVG9MYXRMbmcsXG4gICAgICAgIHNldENlbnRlclpvb206IF90aGlzNC5zZXRDZW50ZXJab29tRm9yQ2hpbGRyZW4sXG4gICAgICAgIG1hcFByb3BzOiBfdGhpczQucHJvcHMsXG4gICAgICAgIG1hcFN0YXRlOiBtYXBTdGF0ZVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgdmFyIGNoaWxkcmVuU3R5bGUgPSB7XG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgIGhlaWdodDogaGVpZ2h0LFxuICAgICAgdG9wOiBcImNhbGMoKDEwMCUgLSBcIiArIGhlaWdodCArIFwicHgpIC8gMilcIixcbiAgICAgIGxlZnQ6IFwiY2FsYygoMTAwJSAtIFwiICsgd2lkdGggKyBcInB4KSAvIDIpXCJcbiAgICB9O1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwicGlnZW9uLW92ZXJsYXlzXCIsXG4gICAgICBzdHlsZTogY2hpbGRyZW5TdHlsZVxuICAgIH0sIGNoaWxkcmVuV2l0aFByb3BzKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyQXR0cmlidXRpb24gPSBmdW5jdGlvbiByZW5kZXJBdHRyaWJ1dGlvbigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHM0ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgYXR0cmlidXRpb24gPSBfdGhpcyRwcm9wczQuYXR0cmlidXRpb24sXG4gICAgICAgIGF0dHJpYnV0aW9uUHJlZml4ID0gX3RoaXMkcHJvcHM0LmF0dHJpYnV0aW9uUHJlZml4O1xuXG4gICAgaWYgKGF0dHJpYnV0aW9uID09PSBmYWxzZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHN0eWxlID0ge1xuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICBib3R0b206IDAsXG4gICAgICByaWdodDogMCxcbiAgICAgIGZvbnRTaXplOiAnMTFweCcsXG4gICAgICBwYWRkaW5nOiAnMnB4IDVweCcsXG4gICAgICBiYWNrZ3JvdW5kOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpJyxcbiAgICAgIGZvbnRGYW1pbHk6IFwiJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZlwiLFxuICAgICAgY29sb3I6ICcjMzMzJ1xuICAgIH07XG4gICAgdmFyIGxpbmtTdHlsZSA9IHtcbiAgICAgIGNvbG9yOiAnIzAwNzhBOCcsXG4gICAgICB0ZXh0RGVjb3JhdGlvbjogJ25vbmUnXG4gICAgfTtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAga2V5OiBcImF0dHJcIixcbiAgICAgIGNsYXNzTmFtZTogXCJwaWdlb24tYXR0cmlidXRpb25cIixcbiAgICAgIHN0eWxlOiBzdHlsZVxuICAgIH0sIGF0dHJpYnV0aW9uUHJlZml4ID09PSBmYWxzZSA/IG51bGwgOiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgYXR0cmlidXRpb25QcmVmaXggfHwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHtcbiAgICAgIGhyZWY6IFwiaHR0cHM6Ly9waWdlb24tbWFwcy5qcy5vcmcvXCIsXG4gICAgICBzdHlsZTogbGlua1N0eWxlLFxuICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiLFxuICAgICAgcmVsOiBcIm5vcmVmZXJyZXIgbm9vcGVuZXJcIlxuICAgIH0sIFwiUGlnZW9uXCIpLCAnIHwgJyksIGF0dHJpYnV0aW9uIHx8IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCAnIMKpICcsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7XG4gICAgICBocmVmOiBcImh0dHBzOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnL2NvcHlyaWdodFwiLFxuICAgICAgc3R5bGU6IGxpbmtTdHlsZSxcbiAgICAgIHRhcmdldDogXCJfYmxhbmtcIixcbiAgICAgIHJlbDogXCJub3JlZmVycmVyIG5vb3BlbmVyXCJcbiAgICB9LCBcIk9wZW5TdHJlZXRNYXBcIiksICcgY29udHJpYnV0b3JzJykpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXJXYXJuaW5nID0gZnVuY3Rpb24gcmVuZGVyV2FybmluZygpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHM1ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgbWV0YVdoZWVsWm9vbSA9IF90aGlzJHByb3BzNS5tZXRhV2hlZWxab29tLFxuICAgICAgICBtZXRhV2hlZWxab29tV2FybmluZyA9IF90aGlzJHByb3BzNS5tZXRhV2hlZWxab29tV2FybmluZyxcbiAgICAgICAgdHdvRmluZ2VyRHJhZyA9IF90aGlzJHByb3BzNS50d29GaW5nZXJEcmFnLFxuICAgICAgICB0d29GaW5nZXJEcmFnV2FybmluZyA9IF90aGlzJHByb3BzNS50d29GaW5nZXJEcmFnV2FybmluZyxcbiAgICAgICAgd2FybmluZ1pJbmRleCA9IF90aGlzJHByb3BzNS53YXJuaW5nWkluZGV4O1xuICAgIHZhciBfdGhpcyRzdGF0ZTEzID0gdGhpcy5zdGF0ZSxcbiAgICAgICAgc2hvd1dhcm5pbmcgPSBfdGhpcyRzdGF0ZTEzLnNob3dXYXJuaW5nLFxuICAgICAgICB3YXJuaW5nVHlwZSA9IF90aGlzJHN0YXRlMTMud2FybmluZ1R5cGUsXG4gICAgICAgIHdpZHRoID0gX3RoaXMkc3RhdGUxMy53aWR0aCxcbiAgICAgICAgaGVpZ2h0ID0gX3RoaXMkc3RhdGUxMy5oZWlnaHQ7XG5cbiAgICBpZiAobWV0YVdoZWVsWm9vbSAmJiBtZXRhV2hlZWxab29tV2FybmluZyB8fCB0d29GaW5nZXJEcmFnICYmIHR3b0ZpbmdlckRyYWdXYXJuaW5nKSB7XG4gICAgICB2YXIgc3R5bGUgPSB7XG4gICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICB0b3A6IDAsXG4gICAgICAgIGxlZnQ6IDAsXG4gICAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgICAgcG9pbnRlckV2ZW50czogJ25vbmUnLFxuICAgICAgICBvcGFjaXR5OiBzaG93V2FybmluZyA/IDEwMCA6IDAsXG4gICAgICAgIHRyYW5zaXRpb246ICdvcGFjaXR5IDMwMG1zJyxcbiAgICAgICAgYmFja2dyb3VuZDogJ3JnYmEoMCwwLDAsMC41KScsXG4gICAgICAgIGNvbG9yOiAnI2ZmZicsXG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgZm9udFNpemU6IDIyLFxuICAgICAgICBmb250RmFtaWx5OiAnXCJBcmlhbFwiLCBzYW5zLXNlcmlmJyxcbiAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgekluZGV4OiB3YXJuaW5nWkluZGV4XG4gICAgICB9O1xuICAgICAgdmFyIG1ldGEgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cubmF2aWdhdG9yICYmIHdpbmRvdy5uYXZpZ2F0b3IucGxhdGZvcm0udG9VcHBlckNhc2UoKS5pbmRleE9mKCdNQUMnKSA+PSAwID8gJ+KMmCcgOiAnY3RybCc7XG4gICAgICB2YXIgd2FybmluZ1RleHQgPSB3YXJuaW5nVHlwZSA9PT0gJ2ZpbmdlcnMnID8gdHdvRmluZ2VyRHJhZ1dhcm5pbmcgOiBtZXRhV2hlZWxab29tV2FybmluZztcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJwaWdlb24tb3ZlcmxheS13YXJuaW5nXCIsXG4gICAgICAgIHN0eWxlOiBzdHlsZVxuICAgICAgfSwgd2FybmluZ1RleHQucmVwbGFjZSgnTUVUQScsIG1ldGEpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzNiA9IHRoaXMucHJvcHMsXG4gICAgICAgIHRvdWNoRXZlbnRzID0gX3RoaXMkcHJvcHM2LnRvdWNoRXZlbnRzLFxuICAgICAgICB0d29GaW5nZXJEcmFnID0gX3RoaXMkcHJvcHM2LnR3b0ZpbmdlckRyYWc7XG4gICAgdmFyIF90aGlzJHN0YXRlMTQgPSB0aGlzLnN0YXRlLFxuICAgICAgICB3aWR0aCA9IF90aGlzJHN0YXRlMTQud2lkdGgsXG4gICAgICAgIGhlaWdodCA9IF90aGlzJHN0YXRlMTQuaGVpZ2h0O1xuICAgIHZhciBjb250YWluZXJTdHlsZSA9IHtcbiAgICAgIHdpZHRoOiB0aGlzLnByb3BzLndpZHRoID8gd2lkdGggOiAnMTAwJScsXG4gICAgICBoZWlnaHQ6IHRoaXMucHJvcHMuaGVpZ2h0ID8gaGVpZ2h0IDogJzEwMCUnLFxuICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgIGJhY2tncm91bmQ6ICcjZGRkZGRkJyxcbiAgICAgIHRvdWNoQWN0aW9uOiB0b3VjaEV2ZW50cyA/IHR3b0ZpbmdlckRyYWcgPyAncGFuLXggcGFuLXknIDogJ25vbmUnIDogJ2F1dG8nXG4gICAgfTtcbiAgICB2YXIgaGFzU2l6ZSA9ICEhKHdpZHRoICYmIGhlaWdodCk7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIHN0eWxlOiBjb250YWluZXJTdHlsZSxcbiAgICAgIHJlZjogdGhpcy5zZXRSZWYsXG4gICAgICBkaXI6IFwibHRyXCJcbiAgICB9LCBoYXNTaXplICYmIHRoaXMucmVuZGVyVGlsZXMoKSwgaGFzU2l6ZSAmJiB0aGlzLnJlbmRlck92ZXJsYXlzKCksIGhhc1NpemUgJiYgdGhpcy5yZW5kZXJBdHRyaWJ1dGlvbigpLCBoYXNTaXplICYmIHRoaXMucmVuZGVyV2FybmluZygpKTtcbiAgfTtcblxuICByZXR1cm4gTWFwO1xufShDb21wb25lbnQpO1xuXG5fZGVmaW5lUHJvcGVydHkoTWFwLCBcImRlZmF1bHRQcm9wc1wiLCB7XG4gIGFuaW1hdGU6IHRydWUsXG4gIG1ldGFXaGVlbFpvb206IGZhbHNlLFxuICBtZXRhV2hlZWxab29tV2FybmluZzogJ1VzZSBNRVRBICsgd2hlZWwgdG8gem9vbSEnLFxuICB0d29GaW5nZXJEcmFnOiBmYWxzZSxcbiAgdHdvRmluZ2VyRHJhZ1dhcm5pbmc6ICdVc2UgdHdvIGZpbmdlcnMgdG8gbW92ZSB0aGUgbWFwJyxcbiAgem9vbVNuYXA6IHRydWUsXG4gIG1vdXNlRXZlbnRzOiB0cnVlLFxuICB0b3VjaEV2ZW50czogdHJ1ZSxcbiAgd2FybmluZ1pJbmRleDogMTAwLFxuICBhbmltYXRlTWF4U2NyZWVuczogNSxcbiAgbWluWm9vbTogMSxcbiAgbWF4Wm9vbTogMTgsXG4gIGxpbWl0Qm91bmRzOiAnY2VudGVyJyxcbiAgZHByczogW10sXG4gIHRpbGVDb21wb25lbnQ6IEltZ1RpbGVcbn0pO1xuXG5mdW5jdGlvbiBNYXJrZXIocHJvcHMpIHtcbiAgdmFyIHdpZHRoID0gdHlwZW9mIHByb3BzLndpZHRoICE9PSAndW5kZWZpbmVkJyA/IHByb3BzLndpZHRoIDogdHlwZW9mIHByb3BzLmhlaWdodCAhPT0gJ3VuZGVmaW5lZCcgPyBwcm9wcy5oZWlnaHQgKiAyOSAvIDM0IDogMjk7XG4gIHZhciBoZWlnaHQgPSB0eXBlb2YgcHJvcHMuaGVpZ2h0ICE9PSAndW5kZWZpbmVkJyA/IHByb3BzLmhlaWdodCA6IHR5cGVvZiBwcm9wcy53aWR0aCAhPT0gJ3VuZGVmaW5lZCcgPyBwcm9wcy53aWR0aCAqIDM0IC8gMjkgOiAzNDtcblxuICB2YXIgX3VzZVN0YXRlID0gdXNlU3RhdGUocHJvcHMuaG92ZXIgfHwgZmFsc2UpLFxuICAgICAgaW50ZXJuYWxIb3ZlciA9IF91c2VTdGF0ZVswXSxcbiAgICAgIHNldEludGVybmFsSG92ZXIgPSBfdXNlU3RhdGVbMV07XG5cbiAgdmFyIGhvdmVyID0gdHlwZW9mIHByb3BzLmhvdmVyID09PSAndW5kZWZpbmVkJyA/IGludGVybmFsSG92ZXIgOiBwcm9wcy5ob3ZlcjtcbiAgdmFyIGNvbG9yID0gcHJvcHMuY29sb3IgfHwgJyM5M0MwRDAnO1xuXG4gIHZhciBldmVudFBhcmFtZXRlcnMgPSBmdW5jdGlvbiBldmVudFBhcmFtZXRlcnMoZXZlbnQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZXZlbnQ6IGV2ZW50LFxuICAgICAgYW5jaG9yOiBwcm9wcy5hbmNob3IsXG4gICAgICBwYXlsb2FkOiBwcm9wcy5wYXlsb2FkXG4gICAgfTtcbiAgfTtcblxuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIHN0eWxlOiBfb2JqZWN0U3ByZWFkMih7XG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoXCIgKyAocHJvcHMubGVmdCAtIHdpZHRoIC8gMikgKyBcInB4LCBcIiArIChwcm9wcy50b3AgLSAoaGVpZ2h0IC0gMSkpICsgXCJweClcIixcbiAgICAgIGZpbHRlcjogaG92ZXIgPyAnZHJvcC1zaGFkb3coMCAwIDRweCByZ2JhKDAsIDAsIDAsIC4zKSknIDogJycsXG4gICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZScsXG4gICAgICBjdXJzb3I6ICdwb2ludGVyJ1xuICAgIH0sIHByb3BzLnN0eWxlIHx8IHt9KSxcbiAgICBjbGFzc05hbWU6IHByb3BzLmNsYXNzTmFtZSA/IHByb3BzLmNsYXNzTmFtZSArIFwiIHBpZ2Vvbi1jbGljay1ibG9ja1wiIDogJ3BpZ2Vvbi1jbGljay1ibG9jaycsXG4gICAgb25DbGljazogcHJvcHMub25DbGljayA/IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgcmV0dXJuIHByb3BzLm9uQ2xpY2soZXZlbnRQYXJhbWV0ZXJzKGV2ZW50KSk7XG4gICAgfSA6IG51bGwsXG4gICAgb25Db250ZXh0TWVudTogcHJvcHMub25Db250ZXh0TWVudSA/IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgcmV0dXJuIHByb3BzLm9uQ29udGV4dE1lbnUoZXZlbnRQYXJhbWV0ZXJzKGV2ZW50KSk7XG4gICAgfSA6IG51bGwsXG4gICAgb25Nb3VzZU92ZXI6IGZ1bmN0aW9uIG9uTW91c2VPdmVyKGV2ZW50KSB7XG4gICAgICBwcm9wcy5vbk1vdXNlT3ZlciAmJiBwcm9wcy5vbk1vdXNlT3ZlcihldmVudFBhcmFtZXRlcnMoZXZlbnQpKTtcbiAgICAgIHNldEludGVybmFsSG92ZXIodHJ1ZSk7XG4gICAgfSxcbiAgICBvbk1vdXNlT3V0OiBmdW5jdGlvbiBvbk1vdXNlT3V0KGV2ZW50KSB7XG4gICAgICBwcm9wcy5vbk1vdXNlT3V0ICYmIHByb3BzLm9uTW91c2VPdXQoZXZlbnRQYXJhbWV0ZXJzKGV2ZW50KSk7XG4gICAgICBzZXRJbnRlcm5hbEhvdmVyKGZhbHNlKTtcbiAgICB9XG4gIH0sIHByb3BzLmNoaWxkcmVuIHx8IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIHtcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgdmlld0JveDogXCIwIDAgNjEgNzFcIixcbiAgICBmaWxsOiBcIm5vbmVcIixcbiAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZ1wiLCB7XG4gICAgc3R5bGU6IHtcbiAgICAgIHBvaW50ZXJFdmVudHM6ICdhdXRvJ1xuICAgIH1cbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBkOiBcIk01MiAzMS41QzUyIDM2LjgzOTUgNDkuMTggNDIuMzE0IDQ1LjAxMDcgNDcuNjA5NEM0MC44NjcyIDUyLjg3MiAzNS42MTkgNTcuNjc4IDMxLjE3NjMgNjEuNjkyMkMzMC43OTE2IDYyLjAzOTggMzAuMjA4NCA2Mi4wMzk4IDI5LjgyMzcgNjEuNjkyMkMyNS4zODEgNTcuNjc4IDIwLjEzMjggNTIuODcyIDE1Ljk4OTMgNDcuNjA5NEMxMS44MiA0Mi4zMTQgOSAzNi44Mzk1IDkgMzEuNUM5IDE4LjU3MDkgMTguNjgwMSA5IDMwLjUgOUM0Mi4zMTk5IDkgNTIgMTguNTcwOSA1MiAzMS41WlwiLFxuICAgIGZpbGw6IGNvbG9yLFxuICAgIHN0cm9rZTogXCJ3aGl0ZVwiLFxuICAgIHN0cm9rZVdpZHRoOiBcIjRcIlxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJjaXJjbGVcIiwge1xuICAgIGN4OiBcIjMwLjVcIixcbiAgICBjeTogXCIzMC41XCIsXG4gICAgcjogXCI4LjVcIixcbiAgICBmaWxsOiBcIndoaXRlXCIsXG4gICAgb3BhY2l0eTogaG92ZXIgPyAwLjk4IDogMC42XG4gIH0pKSkpO1xufVxuXG5mdW5jdGlvbiBPdmVybGF5KHByb3BzKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgc3R5bGU6IF9vYmplY3RTcHJlYWQyKHtcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZShcIiArIHByb3BzLmxlZnQgKyBcInB4LCBcIiArIHByb3BzLnRvcCArIFwicHgpXCJcbiAgICB9LCBwcm9wcy5zdHlsZSB8fCB7fSksXG4gICAgY2xhc3NOYW1lOiBwcm9wcy5jbGFzc05hbWUgPyBwcm9wcy5jbGFzc05hbWUgKyBcIiBwaWdlb24tY2xpY2stYmxvY2tcIiA6ICdwaWdlb24tY2xpY2stYmxvY2snXG4gIH0sIHByb3BzLmNoaWxkcmVuKTtcbn1cblxudmFyIGRlZmF1bHRTdmdBdHRyaWJ1dGVzID0ge1xuICBmaWxsOiAnIzkzYzBkMDk5JyxcbiAgc3Ryb2tlV2lkdGg6ICcyJyxcbiAgc3Ryb2tlOiAnd2hpdGUnLFxuICByOiAnMzAnXG59O1xuZnVuY3Rpb24gUG9pbnRDb21wb25lbnQocHJvcHMpIHtcbiAgdmFyIF9wcm9wcyRzdmdBdHRyaWJ1dGVzO1xuXG4gIHZhciBsYXRMbmdUb1BpeGVsID0gcHJvcHMubGF0TG5nVG9QaXhlbDtcbiAgdmFyIF9wcm9wcyRjb29yZGluYXRlcyA9IHByb3BzLmNvb3JkaW5hdGVzLFxuICAgICAgeSA9IF9wcm9wcyRjb29yZGluYXRlc1swXSxcbiAgICAgIHggPSBfcHJvcHMkY29vcmRpbmF0ZXNbMV07XG5cbiAgdmFyIF9sYXRMbmdUb1BpeGVsID0gbGF0TG5nVG9QaXhlbChbeCwgeV0pLFxuICAgICAgY3ggPSBfbGF0TG5nVG9QaXhlbFswXSxcbiAgICAgIGN5ID0gX2xhdExuZ1RvUGl4ZWxbMV07XG5cbiAgaWYgKChfcHJvcHMkc3ZnQXR0cmlidXRlcyA9IHByb3BzLnN2Z0F0dHJpYnV0ZXMpICE9PSBudWxsICYmIF9wcm9wcyRzdmdBdHRyaWJ1dGVzICE9PSB2b2lkIDAgJiYgX3Byb3BzJHN2Z0F0dHJpYnV0ZXMucGF0aCkge1xuICAgIHZhciBwYXRoID0gXCJNXCIgKyBjeCArIFwiLFwiICsgY3kgKyBcImNcIiArIHByb3BzLnN2Z0F0dHJpYnV0ZXMucGF0aC5zcGxpdCgvW2N8Q3xMfGx8dnxWfGh8SF0oW1xcc1xcU10qKS8pWzFdO1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwgX29iamVjdFNwcmVhZDIoe1xuICAgICAgZDogcGF0aFxuICAgIH0sIHByb3BzLnN2Z0F0dHJpYnV0ZXMpKTtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImNpcmNsZVwiLCBfb2JqZWN0U3ByZWFkMih7XG4gICAgY3g6IGN4LFxuICAgIGN5OiBjeVxuICB9LCBwcm9wcy5zdmdBdHRyaWJ1dGVzKSk7XG59XG5mdW5jdGlvbiBNdWx0aVBvaW50KHByb3BzKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgcHJvcHMuY29vcmRpbmF0ZXMubWFwKGZ1bmN0aW9uIChwb2ludCwgaSkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChQb2ludENvbXBvbmVudCwgX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHByb3BzKSwge30sIHtcbiAgICAgIGNvb3JkaW5hdGVzOiBwb2ludCxcbiAgICAgIGtleTogaVxuICAgIH0pKTtcbiAgfSkpO1xufVxuZnVuY3Rpb24gTGluZVN0cmluZyhwcm9wcykge1xuICB2YXIgbGF0TG5nVG9QaXhlbCA9IHByb3BzLmxhdExuZ1RvUGl4ZWw7XG4gIHZhciBwID0gJ00nICsgcHJvcHMuY29vcmRpbmF0ZXMucmVkdWNlKGZ1bmN0aW9uIChhLCBfcmVmKSB7XG4gICAgdmFyIHkgPSBfcmVmWzBdLFxuICAgICAgICB4ID0gX3JlZlsxXTtcblxuICAgIHZhciBfbGF0TG5nVG9QaXhlbDIgPSBsYXRMbmdUb1BpeGVsKFt4LCB5XSksXG4gICAgICAgIHYgPSBfbGF0TG5nVG9QaXhlbDJbMF0sXG4gICAgICAgIHcgPSBfbGF0TG5nVG9QaXhlbDJbMV07XG5cbiAgICByZXR1cm4gYSArICcgJyArIHYgKyAnICcgKyB3O1xuICB9LCAnJyk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwgX29iamVjdFNwcmVhZDIoe1xuICAgIGQ6IHBcbiAgfSwgcHJvcHMuc3ZnQXR0cmlidXRlcykpO1xufVxuZnVuY3Rpb24gTXVsdGlMaW5lU3RyaW5nKHByb3BzKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgcHJvcHMuY29vcmRpbmF0ZXMubWFwKGZ1bmN0aW9uIChsaW5lLCBpKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExpbmVTdHJpbmcsIF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCBwcm9wcyksIHt9LCB7XG4gICAgICBjb29yZGluYXRlczogbGluZSxcbiAgICAgIGtleTogaVxuICAgIH0pKTtcbiAgfSkpO1xufVxuZnVuY3Rpb24gUG9seWdvbihwcm9wcykge1xuICB2YXIgbGF0TG5nVG9QaXhlbCA9IHByb3BzLmxhdExuZ1RvUGl4ZWw7XG4gIHZhciBwID0gcHJvcHMuY29vcmRpbmF0ZXMucmVkdWNlKGZ1bmN0aW9uIChhLCBwYXJ0KSB7XG4gICAgcmV0dXJuIGEgKyAnIE0nICsgcGFydC5yZWR1Y2UoZnVuY3Rpb24gKGEsIF9yZWYyKSB7XG4gICAgICB2YXIgeSA9IF9yZWYyWzBdLFxuICAgICAgICAgIHggPSBfcmVmMlsxXTtcblxuICAgICAgdmFyIF9sYXRMbmdUb1BpeGVsMyA9IGxhdExuZ1RvUGl4ZWwoW3gsIHldKSxcbiAgICAgICAgICB2ID0gX2xhdExuZ1RvUGl4ZWwzWzBdLFxuICAgICAgICAgIHcgPSBfbGF0TG5nVG9QaXhlbDNbMV07XG5cbiAgICAgIHJldHVybiBhICsgJyAnICsgdiArICcgJyArIHc7XG4gICAgfSwgJycpICsgJ1onO1xuICB9LCAnJyk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwgX29iamVjdFNwcmVhZDIoe1xuICAgIGQ6IHBcbiAgfSwgcHJvcHMuc3ZnQXR0cmlidXRlcykpO1xufVxuZnVuY3Rpb24gTXVsdGlQb2x5Z29uKHByb3BzKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgcHJvcHMuY29vcmRpbmF0ZXMubWFwKGZ1bmN0aW9uIChwb2x5Z29uLCBpKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFBvbHlnb24sIF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCBwcm9wcyksIHt9LCB7XG4gICAgICBjb29yZGluYXRlczogcG9seWdvbixcbiAgICAgIGtleTogaVxuICAgIH0pKTtcbiAgfSkpO1xufVxuZnVuY3Rpb24gR2VvbWV0cnlDb2xsZWN0aW9uKHByb3BzKSB7XG4gIHZhciByZW5kZXJlciA9IHtcbiAgICBQb2ludDogUG9pbnRDb21wb25lbnQsXG4gICAgTXVsdGlQb2ludDogTXVsdGlQb2ludCxcbiAgICBMaW5lU3RyaW5nOiBMaW5lU3RyaW5nLFxuICAgIE11bHRpTGluZVN0cmluZzogTXVsdGlMaW5lU3RyaW5nLFxuICAgIFBvbHlnb246IFBvbHlnb24sXG4gICAgTXVsdGlQb2x5Z29uOiBNdWx0aVBvbHlnb25cbiAgfTtcbiAgdmFyIF9wcm9wcyRnZW9tZXRyeSA9IHByb3BzLmdlb21ldHJ5LFxuICAgICAgdHlwZSA9IF9wcm9wcyRnZW9tZXRyeS50eXBlLFxuICAgICAgY29vcmRpbmF0ZXMgPSBfcHJvcHMkZ2VvbWV0cnkuY29vcmRpbmF0ZXMsXG4gICAgICBnZW9tZXRyaWVzID0gX3Byb3BzJGdlb21ldHJ5Lmdlb21ldHJpZXM7XG5cbiAgaWYgKHR5cGUgPT09ICdHZW9tZXRyeUNvbGxlY3Rpb24nKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCBnZW9tZXRyaWVzLm1hcChmdW5jdGlvbiAoZ2VvbWV0cnksIGkpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChHZW9tZXRyeUNvbGxlY3Rpb24sIF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHtcbiAgICAgICAga2V5OiBpXG4gICAgICB9LCBwcm9wcyksIHt9LCB7XG4gICAgICAgIGdlb21ldHJ5OiBnZW9tZXRyeVxuICAgICAgfSkpO1xuICAgIH0pKTtcbiAgfVxuXG4gIHZhciBDb21wb25lbnQgPSByZW5kZXJlclt0eXBlXTtcblxuICBpZiAoQ29tcG9uZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICBjb25zb2xlLndhcm4oXCJUaGUgR2VvSnNvbiBUeXBlIFwiICsgdHlwZSArIFwiIGlzIG5vdCBrbm93blwiKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIHtcbiAgICBsYXRMbmdUb1BpeGVsOiBwcm9wcy5sYXRMbmdUb1BpeGVsLFxuICAgIGdlb21ldHJ5OiBwcm9wcy5nZW9tZXRyeSxcbiAgICBjb29yZGluYXRlczogY29vcmRpbmF0ZXMsXG4gICAgc3ZnQXR0cmlidXRlczogcHJvcHMuc3ZnQXR0cmlidXRlc1xuICB9KTtcbn1cbmZ1bmN0aW9uIEdlb0pzb25GZWF0dXJlKHByb3BzKSB7XG4gIHZhciBfdXNlU3RhdGUgPSB1c2VTdGF0ZShwcm9wcy5ob3ZlciB8fCBmYWxzZSksXG4gICAgICBpbnRlcm5hbEhvdmVyID0gX3VzZVN0YXRlWzBdLFxuICAgICAgc2V0SW50ZXJuYWxIb3ZlciA9IF91c2VTdGF0ZVsxXTtcblxuICB2YXIgaG92ZXIgPSBwcm9wcy5ob3ZlciAhPT0gdW5kZWZpbmVkID8gcHJvcHMuaG92ZXIgOiBpbnRlcm5hbEhvdmVyO1xuICB2YXIgY2FsbGJhY2tTdmdBdHRyaWJ1dGVzID0gcHJvcHMuc3R5bGVDYWxsYmFjayAmJiBwcm9wcy5zdHlsZUNhbGxiYWNrKHByb3BzLmZlYXR1cmUsIGhvdmVyKTtcbiAgdmFyIHN2Z0F0dHJpYnV0ZXMgPSBjYWxsYmFja1N2Z0F0dHJpYnV0ZXMgPyBwcm9wcy5zdmdBdHRyaWJ1dGVzID8gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHByb3BzLnN2Z0F0dHJpYnV0ZXMpLCBjYWxsYmFja1N2Z0F0dHJpYnV0ZXMpIDogY2FsbGJhY2tTdmdBdHRyaWJ1dGVzIDogcHJvcHMuc3ZnQXR0cmlidXRlcyA/IHByb3BzLnN2Z0F0dHJpYnV0ZXMgOiBkZWZhdWx0U3ZnQXR0cmlidXRlcztcblxuICB2YXIgZXZlbnRQYXJhbWV0ZXJzID0gZnVuY3Rpb24gZXZlbnRQYXJhbWV0ZXJzKGV2ZW50KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGV2ZW50OiBldmVudCxcbiAgICAgIGFuY2hvcjogcHJvcHMuYW5jaG9yLFxuICAgICAgcGF5bG9hZDogcHJvcHMuZmVhdHVyZVxuICAgIH07XG4gIH07XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZ1wiLCB7XG4gICAgY2xpcFJ1bGU6IFwiZXZlbm9kZFwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBwb2ludGVyRXZlbnRzOiAnYXV0bydcbiAgICB9LFxuICAgIG9uQ2xpY2s6IHByb3BzLm9uQ2xpY2sgPyBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIHJldHVybiBwcm9wcy5vbkNsaWNrKGV2ZW50UGFyYW1ldGVycyhldmVudCkpO1xuICAgIH0gOiBudWxsLFxuICAgIG9uQ29udGV4dE1lbnU6IHByb3BzLm9uQ29udGV4dE1lbnUgPyBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIHJldHVybiBwcm9wcy5vbkNvbnRleHRNZW51KGV2ZW50UGFyYW1ldGVycyhldmVudCkpO1xuICAgIH0gOiBudWxsLFxuICAgIG9uTW91c2VPdmVyOiBmdW5jdGlvbiBvbk1vdXNlT3ZlcihldmVudCkge1xuICAgICAgcHJvcHMub25Nb3VzZU92ZXIgJiYgcHJvcHMub25Nb3VzZU92ZXIoZXZlbnRQYXJhbWV0ZXJzKGV2ZW50KSk7XG4gICAgICBzZXRJbnRlcm5hbEhvdmVyKHRydWUpO1xuICAgIH0sXG4gICAgb25Nb3VzZU91dDogZnVuY3Rpb24gb25Nb3VzZU91dChldmVudCkge1xuICAgICAgcHJvcHMub25Nb3VzZU91dCAmJiBwcm9wcy5vbk1vdXNlT3V0KGV2ZW50UGFyYW1ldGVycyhldmVudCkpO1xuICAgICAgc2V0SW50ZXJuYWxIb3ZlcihmYWxzZSk7XG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChHZW9tZXRyeUNvbGxlY3Rpb24sIF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCBwcm9wcyksIHByb3BzLmZlYXR1cmUpLCB7fSwge1xuICAgIHN2Z0F0dHJpYnV0ZXM6IHN2Z0F0dHJpYnV0ZXNcbiAgfSkpKTtcbn1cbmZ1bmN0aW9uIEdlb0pzb24ocHJvcHMpIHtcbiAgdmFyIF9wcm9wcyRtYXBTdGF0ZSA9IHByb3BzLm1hcFN0YXRlLFxuICAgICAgd2lkdGggPSBfcHJvcHMkbWFwU3RhdGUud2lkdGgsXG4gICAgICBoZWlnaHQgPSBfcHJvcHMkbWFwU3RhdGUuaGVpZ2h0O1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIHN0eWxlOiBfb2JqZWN0U3ByZWFkMih7XG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIGxlZnQ6ICcwJyxcbiAgICAgIHRvcDogJzAnLFxuICAgICAgcG9pbnRlckV2ZW50czogJ25vbmUnLFxuICAgICAgY3Vyc29yOiAncG9pbnRlcidcbiAgICB9LCBwcm9wcy5zdHlsZSB8fCB7fSksXG4gICAgY2xhc3NOYW1lOiBwcm9wcy5jbGFzc05hbWUgPyBwcm9wcy5jbGFzc05hbWUgKyBcIiBwaWdlb24tY2xpY2stYmxvY2tcIiA6ICdwaWdlb24tY2xpY2stYmxvY2snXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIHtcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgdmlld0JveDogXCIwIDAgXCIgKyB3aWR0aCArIFwiIFwiICsgaGVpZ2h0LFxuICAgIGZpbGw6IFwibm9uZVwiLFxuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgfSwgcHJvcHMuZGF0YSAmJiBwcm9wcy5kYXRhLmZlYXR1cmVzLm1hcChmdW5jdGlvbiAoZmVhdHVyZSwgaSkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChHZW9Kc29uRmVhdHVyZSwgX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe1xuICAgICAga2V5OiBpXG4gICAgfSwgcHJvcHMpLCB7fSwge1xuICAgICAgZmVhdHVyZTogZmVhdHVyZVxuICAgIH0pKTtcbiAgfSksIFJlYWN0LkNoaWxkcmVuLm1hcChwcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgaWYgKCFjaGlsZCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgaWYgKCEgLyojX19QVVJFX18qL1JlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgcmV0dXJuIGNoaWxkO1xuICAgIH1cblxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCBwcm9wcyk7XG4gIH0pKSk7XG59XG5mdW5jdGlvbiBHZW9Kc29uTG9hZGVyKHByb3BzKSB7XG4gIHZhciBfdXNlU3RhdGUyID0gdXNlU3RhdGUocHJvcHMuZGF0YSA/IHByb3BzLmRhdGEgOiBudWxsKSxcbiAgICAgIGRhdGEgPSBfdXNlU3RhdGUyWzBdLFxuICAgICAgc2V0RGF0YSA9IF91c2VTdGF0ZTJbMV07XG5cbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBmZXRjaChwcm9wcy5saW5rKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4gc2V0RGF0YShkYXRhKTtcbiAgICB9KTtcbiAgfSwgW3Byb3BzLmxpbmtdKTtcbiAgcmV0dXJuIGRhdGEgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChHZW9Kc29uLCBfb2JqZWN0U3ByZWFkMih7XG4gICAgZGF0YTogZGF0YVxuICB9LCBwcm9wcykpIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNEZXNjZW5kZW50T2YoZWxlbWVudCwgYW5jZXN0b3IpIHtcbiAgd2hpbGUgKGVsZW1lbnQpIHtcbiAgICBpZiAoZWxlbWVudCA9PT0gYW5jZXN0b3IpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGVsZW1lbnQgPSBlbGVtZW50LnBhcmVudEVsZW1lbnQ7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbnZhciBkZWZhdWx0U3RhdGUgPSB7XG4gIGlzRHJhZ2dpbmc6IGZhbHNlLFxuICBzdGFydFg6IHVuZGVmaW5lZCxcbiAgc3RhcnRZOiB1bmRlZmluZWQsXG4gIHN0YXJ0TGVmdDogdW5kZWZpbmVkLFxuICBzdGFydFRvcDogdW5kZWZpbmVkLFxuICBkZWx0YVg6IDAsXG4gIGRlbHRhWTogMFxufTtcbmZ1bmN0aW9uIERyYWdnYWJsZShwcm9wcykge1xuICB2YXIgZHJhZ1JlZiA9IHVzZVJlZigpO1xuICB2YXIgcHJvcHNSZWYgPSB1c2VSZWYocHJvcHMpO1xuICB2YXIgc3RhdGVSZWYgPSB1c2VSZWYoX29iamVjdFNwcmVhZDIoe30sIGRlZmF1bHRTdGF0ZSkpO1xuXG4gIHZhciBfdXNlU3RhdGUgPSB1c2VTdGF0ZShkZWZhdWx0U3RhdGUpLFxuICAgICAgX3N0YXRlID0gX3VzZVN0YXRlWzBdLFxuICAgICAgX3NldFN0YXRlID0gX3VzZVN0YXRlWzFdO1xuXG4gIHByb3BzUmVmLmN1cnJlbnQgPSBwcm9wcztcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShzdGF0ZVVwZGF0ZSkge1xuICAgIHZhciBuZXdTdGF0ZSA9IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCBzdGF0ZVJlZi5jdXJyZW50KSwgc3RhdGVVcGRhdGUpO1xuXG4gICAgc3RhdGVSZWYuY3VycmVudCA9IG5ld1N0YXRlO1xuXG4gICAgX3NldFN0YXRlKG5ld1N0YXRlKTtcbiAgfTtcblxuICB2YXIgX3Byb3BzJG1hcFByb3BzID0gcHJvcHMubWFwUHJvcHMsXG4gICAgICBtb3VzZUV2ZW50cyA9IF9wcm9wcyRtYXBQcm9wcy5tb3VzZUV2ZW50cyxcbiAgICAgIHRvdWNoRXZlbnRzID0gX3Byb3BzJG1hcFByb3BzLnRvdWNoRXZlbnRzO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIHZhciBoYW5kbGVEcmFnU3RhcnQgPSBmdW5jdGlvbiBoYW5kbGVEcmFnU3RhcnQoZXZlbnQpIHtcbiAgICAgIGlmIChpc0Rlc2NlbmRlbnRPZihldmVudC50YXJnZXQsIGRyYWdSZWYuY3VycmVudCkpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGlzRHJhZ2dpbmc6IHRydWUsXG4gICAgICAgICAgc3RhcnRYOiAoJ3RvdWNoZXMnIGluIGV2ZW50ID8gZXZlbnQudG91Y2hlc1swXSA6IGV2ZW50KS5jbGllbnRYLFxuICAgICAgICAgIHN0YXJ0WTogKCd0b3VjaGVzJyBpbiBldmVudCA/IGV2ZW50LnRvdWNoZXNbMF0gOiBldmVudCkuY2xpZW50WSxcbiAgICAgICAgICBzdGFydExlZnQ6IHByb3BzUmVmLmN1cnJlbnQubGVmdCxcbiAgICAgICAgICBzdGFydFRvcDogcHJvcHNSZWYuY3VycmVudC50b3AsXG4gICAgICAgICAgZGVsdGFYOiAwLFxuICAgICAgICAgIGRlbHRhWTogMFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAocHJvcHNSZWYuY3VycmVudC5vbkRyYWdTdGFydCkge1xuICAgICAgICAgIHZhciBfcHJvcHNSZWYkY3VycmVudCA9IHByb3BzUmVmLmN1cnJlbnQsXG4gICAgICAgICAgICAgIF9sZWZ0ID0gX3Byb3BzUmVmJGN1cnJlbnQubGVmdCxcbiAgICAgICAgICAgICAgX3RvcCA9IF9wcm9wc1JlZiRjdXJyZW50LnRvcCxcbiAgICAgICAgICAgICAgb2Zmc2V0ID0gX3Byb3BzUmVmJGN1cnJlbnQub2Zmc2V0LFxuICAgICAgICAgICAgICBwaXhlbFRvTGF0TG5nID0gX3Byb3BzUmVmJGN1cnJlbnQucGl4ZWxUb0xhdExuZztcbiAgICAgICAgICBwcm9wc1JlZi5jdXJyZW50Lm9uRHJhZ01vdmUocGl4ZWxUb0xhdExuZyhbX2xlZnQgKyAob2Zmc2V0ID8gb2Zmc2V0WzBdIDogMCksIF90b3AgKyAob2Zmc2V0ID8gb2Zmc2V0WzFdIDogMCldKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIGhhbmRsZURyYWdNb3ZlID0gZnVuY3Rpb24gaGFuZGxlRHJhZ01vdmUoZXZlbnQpIHtcbiAgICAgIGlmICghc3RhdGVSZWYuY3VycmVudC5pc0RyYWdnaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHZhciB4ID0gKCd0b3VjaGVzJyBpbiBldmVudCA/IGV2ZW50LnRvdWNoZXNbMF0gOiBldmVudCkuY2xpZW50WDtcbiAgICAgIHZhciB5ID0gKCd0b3VjaGVzJyBpbiBldmVudCA/IGV2ZW50LnRvdWNoZXNbMF0gOiBldmVudCkuY2xpZW50WTtcbiAgICAgIHZhciBkZWx0YVggPSB4IC0gc3RhdGVSZWYuY3VycmVudC5zdGFydFg7XG4gICAgICB2YXIgZGVsdGFZID0geSAtIHN0YXRlUmVmLmN1cnJlbnQuc3RhcnRZO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBkZWx0YVg6IGRlbHRhWCxcbiAgICAgICAgZGVsdGFZOiBkZWx0YVlcbiAgICAgIH0pO1xuXG4gICAgICBpZiAocHJvcHNSZWYuY3VycmVudC5vbkRyYWdNb3ZlKSB7XG4gICAgICAgIHZhciBfcHJvcHNSZWYkY3VycmVudDIgPSBwcm9wc1JlZi5jdXJyZW50LFxuICAgICAgICAgICAgb2Zmc2V0ID0gX3Byb3BzUmVmJGN1cnJlbnQyLm9mZnNldCxcbiAgICAgICAgICAgIHBpeGVsVG9MYXRMbmcgPSBfcHJvcHNSZWYkY3VycmVudDIucGl4ZWxUb0xhdExuZztcbiAgICAgICAgdmFyIF9zdGF0ZVJlZiRjdXJyZW50ID0gc3RhdGVSZWYuY3VycmVudCxcbiAgICAgICAgICAgIF9zdGFydExlZnQgPSBfc3RhdGVSZWYkY3VycmVudC5zdGFydExlZnQsXG4gICAgICAgICAgICBfc3RhcnRUb3AgPSBfc3RhdGVSZWYkY3VycmVudC5zdGFydFRvcDtcbiAgICAgICAgcHJvcHNSZWYuY3VycmVudC5vbkRyYWdNb3ZlKHBpeGVsVG9MYXRMbmcoW19zdGFydExlZnQgKyBkZWx0YVggKyAob2Zmc2V0ID8gb2Zmc2V0WzBdIDogMCksIF9zdGFydFRvcCArIGRlbHRhWSArIChvZmZzZXQgPyBvZmZzZXRbMV0gOiAwKV0pKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIGhhbmRsZURyYWdFbmQgPSBmdW5jdGlvbiBoYW5kbGVEcmFnRW5kKGV2ZW50KSB7XG4gICAgICB2YXIgX3Byb3BzUmVmJGN1cnJlbnQkb25ELCBfcHJvcHNSZWYkY3VycmVudDQ7XG5cbiAgICAgIGlmICghc3RhdGVSZWYuY3VycmVudC5pc0RyYWdnaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHZhciBfcHJvcHNSZWYkY3VycmVudDMgPSBwcm9wc1JlZi5jdXJyZW50LFxuICAgICAgICAgIG9mZnNldCA9IF9wcm9wc1JlZiRjdXJyZW50My5vZmZzZXQsXG4gICAgICAgICAgcGl4ZWxUb0xhdExuZyA9IF9wcm9wc1JlZiRjdXJyZW50My5waXhlbFRvTGF0TG5nO1xuICAgICAgdmFyIF9zdGF0ZVJlZiRjdXJyZW50MiA9IHN0YXRlUmVmLmN1cnJlbnQsXG4gICAgICAgICAgZGVsdGFYID0gX3N0YXRlUmVmJGN1cnJlbnQyLmRlbHRhWCxcbiAgICAgICAgICBkZWx0YVkgPSBfc3RhdGVSZWYkY3VycmVudDIuZGVsdGFZLFxuICAgICAgICAgIHN0YXJ0TGVmdCA9IF9zdGF0ZVJlZiRjdXJyZW50Mi5zdGFydExlZnQsXG4gICAgICAgICAgc3RhcnRUb3AgPSBfc3RhdGVSZWYkY3VycmVudDIuc3RhcnRUb3A7XG4gICAgICAoX3Byb3BzUmVmJGN1cnJlbnQkb25EID0gKF9wcm9wc1JlZiRjdXJyZW50NCA9IHByb3BzUmVmLmN1cnJlbnQpLm9uRHJhZ0VuZCkgPT09IG51bGwgfHwgX3Byb3BzUmVmJGN1cnJlbnQkb25EID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcHJvcHNSZWYkY3VycmVudCRvbkQuY2FsbChfcHJvcHNSZWYkY3VycmVudDQsIHBpeGVsVG9MYXRMbmcoW3N0YXJ0TGVmdCArIGRlbHRhWCArIChvZmZzZXQgPyBvZmZzZXRbMF0gOiAwKSwgc3RhcnRUb3AgKyBkZWx0YVkgKyAob2Zmc2V0ID8gb2Zmc2V0WzFdIDogMCldKSk7XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGlzRHJhZ2dpbmc6IGZhbHNlLFxuICAgICAgICBzdGFydFg6IHVuZGVmaW5lZCxcbiAgICAgICAgc3RhcnRZOiB1bmRlZmluZWQsXG4gICAgICAgIHN0YXJ0TGVmdDogdW5kZWZpbmVkLFxuICAgICAgICBzdGFydFRvcDogdW5kZWZpbmVkLFxuICAgICAgICBkZWx0YVg6IDAsXG4gICAgICAgIGRlbHRhWTogMFxuICAgICAgfSk7XG4gICAgfTtcblxuICAgIHZhciB3YSA9IGZ1bmN0aW9uIHdhKGUsIHQsIG8pIHtcbiAgICAgIHJldHVybiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihlLCB0LCBvKTtcbiAgICB9O1xuXG4gICAgdmFyIHdyID0gZnVuY3Rpb24gd3IoZSwgdCkge1xuICAgICAgcmV0dXJuIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKGUsIHQpO1xuICAgIH07XG5cbiAgICBpZiAobW91c2VFdmVudHMpIHtcbiAgICAgIHdhKCdtb3VzZWRvd24nLCBoYW5kbGVEcmFnU3RhcnQpO1xuICAgICAgd2EoJ21vdXNlbW92ZScsIGhhbmRsZURyYWdNb3ZlKTtcbiAgICAgIHdhKCdtb3VzZXVwJywgaGFuZGxlRHJhZ0VuZCk7XG4gICAgfVxuXG4gICAgaWYgKHRvdWNoRXZlbnRzKSB7XG4gICAgICB3YSgndG91Y2hzdGFydCcsIGhhbmRsZURyYWdTdGFydCwge1xuICAgICAgICBwYXNzaXZlOiBmYWxzZVxuICAgICAgfSk7XG4gICAgICB3YSgndG91Y2htb3ZlJywgaGFuZGxlRHJhZ01vdmUsIHtcbiAgICAgICAgcGFzc2l2ZTogZmFsc2VcbiAgICAgIH0pO1xuICAgICAgd2EoJ3RvdWNoZW5kJywgaGFuZGxlRHJhZ0VuZCwge1xuICAgICAgICBwYXNzaXZlOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChtb3VzZUV2ZW50cykge1xuICAgICAgICB3cignbW91c2Vkb3duJywgaGFuZGxlRHJhZ1N0YXJ0KTtcbiAgICAgICAgd3IoJ21vdXNlbW92ZScsIGhhbmRsZURyYWdNb3ZlKTtcbiAgICAgICAgd3IoJ21vdXNldXAnLCBoYW5kbGVEcmFnRW5kKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRvdWNoRXZlbnRzKSB7XG4gICAgICAgIHdyKCd0b3VjaHN0YXJ0JywgaGFuZGxlRHJhZ1N0YXJ0KTtcbiAgICAgICAgd3IoJ3RvdWNobW92ZScsIGhhbmRsZURyYWdNb3ZlKTtcbiAgICAgICAgd3IoJ3RvdWNoZW5kJywgaGFuZGxlRHJhZ0VuZCk7XG4gICAgICB9XG4gICAgfTtcbiAgfSwgW21vdXNlRXZlbnRzLCB0b3VjaEV2ZW50c10pO1xuICB2YXIgbGVmdCA9IHByb3BzLmxlZnQsXG4gICAgICB0b3AgPSBwcm9wcy50b3AsXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBzdHlsZSA9IHByb3BzLnN0eWxlO1xuICB2YXIgZGVsdGFYID0gX3N0YXRlLmRlbHRhWCxcbiAgICAgIGRlbHRhWSA9IF9zdGF0ZS5kZWx0YVksXG4gICAgICBzdGFydExlZnQgPSBfc3RhdGUuc3RhcnRMZWZ0LFxuICAgICAgc3RhcnRUb3AgPSBfc3RhdGUuc3RhcnRUb3AsXG4gICAgICBpc0RyYWdnaW5nID0gX3N0YXRlLmlzRHJhZ2dpbmc7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgc3R5bGU6IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHtcbiAgICAgIGN1cnNvcjogaXNEcmFnZ2luZyA/ICdncmFiYmluZycgOiAnZ3JhYidcbiAgICB9LCBzdHlsZSB8fCB7fSksIHt9LCB7XG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoXCIgKyAoaXNEcmFnZ2luZyA/IHN0YXJ0TGVmdCArIGRlbHRhWCA6IGxlZnQpICsgXCJweCwgXCIgKyAoaXNEcmFnZ2luZyA/IHN0YXJ0VG9wICsgZGVsdGFZIDogdG9wKSArIFwicHgpXCJcbiAgICB9KSxcbiAgICByZWY6IGRyYWdSZWYsXG4gICAgY2xhc3NOYW1lOiBcInBpZ2Vvbi1kcmFnLWJsb2NrXCIgKyAoY2xhc3NOYW1lID8gXCIgXCIgKyBjbGFzc05hbWUgOiAnJylcbiAgfSwgcHJvcHMuY2hpbGRyZW4pO1xufVxuXG52YXIgY29tbW9uU3R5bGUgPSB7XG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICB0b3A6IDEwLFxuICBsZWZ0OiAxMFxufTtcbnZhciBjb21tb25CdXR0b25TdHlsZSA9IHtcbiAgd2lkdGg6IDI4LFxuICBoZWlnaHQ6IDI4LFxuICBib3JkZXJSYWRpdXM6IDIsXG4gIGJveFNoYWRvdzogJzAgMXB4IDRweCAtMXB4IHJnYmEoMCwwLDAsLjMpJyxcbiAgYmFja2dyb3VuZDogJ3doaXRlJyxcbiAgbGluZUhlaWdodDogJzI2cHgnLFxuICBmb250U2l6ZTogJzIwcHgnLFxuICBmb250V2VpZ2h0OiA3MDAsXG4gIGNvbG9yOiAnIzY2NicsXG4gIG1hcmdpbkJvdHRvbTogMSxcbiAgY3Vyc29yOiAncG9pbnRlcicsXG4gIGJvcmRlcjogJ25vbmUnLFxuICBkaXNwbGF5OiAnYmxvY2snLFxuICBvdXRsaW5lOiAnbm9uZSdcbn07XG5mdW5jdGlvbiBab29tQ29udHJvbChfcmVmKSB7XG4gIHZhciBzdHlsZSA9IF9yZWYuc3R5bGUsXG4gICAgICBidXR0b25TdHlsZSA9IF9yZWYuYnV0dG9uU3R5bGUsXG4gICAgICBzZXRDZW50ZXJab29tID0gX3JlZi5zZXRDZW50ZXJab29tLFxuICAgICAgbWFwU3RhdGUgPSBfcmVmLm1hcFN0YXRlLFxuICAgICAgbWFwUHJvcHMgPSBfcmVmLm1hcFByb3BzO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJwaWdlb24tem9vbS1idXR0b25zIHBpZ2Vvbi1kcmFnLWJsb2NrXCIsXG4gICAgc3R5bGU6IHN0eWxlID8gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIGNvbW1vblN0eWxlKSwgc3R5bGUpIDogY29tbW9uU3R5bGVcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwge1xuICAgIGNsYXNzTmFtZTogXCJwaWdlb24tem9vbS1pblwiLFxuICAgIHR5cGU6IFwiYnV0dG9uXCIsXG4gICAgc3R5bGU6IGJ1dHRvblN0eWxlID8gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIGNvbW1vbkJ1dHRvblN0eWxlKSwgYnV0dG9uU3R5bGUpIDogY29tbW9uQnV0dG9uU3R5bGUsXG4gICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHtcbiAgICAgIHJldHVybiBzZXRDZW50ZXJab29tKG1hcFN0YXRlLmNlbnRlciwgTWF0aC5taW4obWFwU3RhdGUuem9vbSArIDEsIG1hcFByb3BzLm1heFpvb20pKTtcbiAgICB9XG4gIH0sIFwiK1wiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwge1xuICAgIGNsYXNzTmFtZTogXCJwaWdlb24tem9vbS1vdXRcIixcbiAgICB0eXBlOiBcImJ1dHRvblwiLFxuICAgIHN0eWxlOiBidXR0b25TdHlsZSA/IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCBjb21tb25CdXR0b25TdHlsZSksIGJ1dHRvblN0eWxlKSA6IGNvbW1vbkJ1dHRvblN0eWxlLFxuICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gICAgICByZXR1cm4gc2V0Q2VudGVyWm9vbShtYXBTdGF0ZS5jZW50ZXIsIE1hdGgubWF4KG1hcFN0YXRlLnpvb20gLSAxLCBtYXBQcm9wcy5taW5ab29tKSk7XG4gICAgfVxuICB9LCBcIlxcdTIwMTNcIikpO1xufVxuXG5leHBvcnQgeyBEcmFnZ2FibGUsIEdlb0pzb24sIEdlb0pzb25GZWF0dXJlLCBHZW9Kc29uTG9hZGVyLCBNYXAsIE1hcmtlciwgT3ZlcmxheSwgWm9vbUNvbnRyb2wgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pigeon-maps/lib/index.esm.js\n");

/***/ })

};
;